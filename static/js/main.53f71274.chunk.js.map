{"version":3,"sources":["componentes/itemsVisitante.js","componentes/itemsEstudiante.js","componentes/itemsFacultad.js","componentes/itemsEscuela.js","componentes/itemsAdmin.js","componentes/iconoSicass.png","componentes/LogoSicass.js","componentes/Dashboard.js","componentes/Card.js","componentes/BotonesRegistro.js","componentes/Registro.js","componentes/EnvioRegistro.js","componentes/PropuestaServicio.js","componentes/EnvioPropuesta.js","componentes/SolicitudServicio.js","componentes/EnvioSolicitud.js","componentes/administrador/Roles.js","componentes/Solicitudes.js","componentes/login.js","componentes/Propuestas.js","componentes/administrador/Usuarios.js","componentes/logoUes.png","componentes/LogoUes.js","componentes/logoProyeccionSocial.jpg","componentes/LogoProyeccion.js","componentes/InicioInformacion.js","componentes/estudiante/RegistroUps.js","componentes/estudiante/EnvioRegistroUps.js","componentes/estudiante/SolicitudInscripcion.js","componentes/estudiante/ServicioSocial.js","componentes/estudiante/SolicitudProyecto.js","componentes/SolicitudesEstudiantes.js","componentes/docente/Docente.js","componentes/docente/AsignarEE.js","componentes/estudiante/RegistrarActividad.js","componentes/SolicitudRegistroSS.js","componentes/SolicitudRegistroUPS.js","componentes/GestionServicioSocial.js","componentes/AsignarPropuesta.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","nested","paddingLeft","spacing","itemsVisitante","ListSubheader","ListItem","button","component","Link","to","ListItemIcon","Home","ListItemText","primary","PersonAdd","DesplegarPropuestas","opcionGeneral","opcion1","link1","opcion2","link2","DesplegarSolicitudes","props","useState","open","setOpen","classes","onClick","aria-controls","aria-expanded","ImportContacts","Collapse","in","timeout","className","Visibility","Add","LibraryBooks","itemsEstudiante","DesplegarUPS","DesplegarServicioSocial","opcion3","link3","opcion4","link","Pages","Widgets","Schedule","link4","AssignmentTurnedIn","itemsFacultad","Group","GroupAdd","itemsEscuela","Beenhere","Done","EmojiPeople","itemsAdmin","VerifiedUser","SupervisedUserCircle","LogoSicass","src","sicass","width","height","alt","Component","Dashboard","Grid","contenedor","card","Card","border","Header","titulo","Body","cuerpo","botones","variant","type","href","Registro","state","facultades","carreras","facultadSeleccionada","handleChange","bind","event","this","setState","target","value","axios","get","params","facultad","then","response","data","catch","error","Swal","fire","position","icon","title","document","getElementById","selectedIndex","initialValues","user","carnet","password","nombres_estudiante","apellidos_estudiante","correo_estudiante","sexo","direccion_estudiante","telefono_estudiante","carrera_id","onSubmit","values","a","resetForm","Promise","resolve","setTimeout","post","username","tipo_usuario","carrera","map","elemento","id","toString","showConfirmButton","timer","reiniciarFacultad","handleSubmit","Form","Row","as","Col","Label","OverlayTrigger","overlay","Tooltip","Control","placeholder","maxLength","pattern","autoComplete","required","onChange","disabled","selected","codigo_facultad","nombre_facultad","codigo_carrera","id_carrera","nombre_carrera","plan_carrera","modalidad_carrera","EnvioRegistro","PropuestaServicio","tipos_servicio_social","carreraSeleccionada","tipoServicioSocialSeleccionado","handleFacultad","fecha","Date","mes","getMonth","dia","getDate","getFullYear","nombre_entidad","direccion_entidad","correo_entidad","telefono_entidad","clasificacion_entidad","fecha_fin_propuesta","estado_propuesta","descripcion_propuesta","entidad_externa_id","tipo_servicio_social_id","entidad_externa","codigo_entidad","tipo_servicio_social","sm","condigo_tipo_servicio_social","nombre_tipo_servicio_social","min","fechaActual","rows","EnvioPropuesta","SolicitudServicio","console","log","fecha_fin_solicitud","estado_solicitud","handleCarrera","Solicitud","options","download","print","responsive","selectableRows","tableBodyHeight","rowsPerPage","rowsPerPageOptions","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","label","pagination","next","previous","displayRows","toolbar","search","downloadCsv","viewColumns","filterTable","filter","all","reset","titleAria","selectedRows","text","delete","deleteAria","url","Roles","peticionPost","form","name","length","codename","content_type","modalInsertar","componentDidMount","peticionPut","put","peticionDelete","modalEliminar","seleccionPrivilegio","privilegio","tipoModal","e","persist","permisos","tipoContenido","columns","display","customBodyRender","tableMeta","updateValue","size","rowData","Modal","isOpen","centered","ModalHeader","style","ModalBody","model","ModalFooter","Solicitudes","solicitudes","arreglo_inicial","solicitud","i","codigo_solicitud","entidad_externa_detalle","tipo_entidad","carrera_detalle","tipo_servicio_social_detalle","fecha_inicio_solicitud","key","Login","getSession","getCSRF","fetch","credentials","res","csrfToken","headers","csrf","err","json","isAuthenticated","whoami","login","credenciales","method","JSON","stringify","isResponseOk","createCookie","logout","inputChanged","credenc","valor","cookie","escape","status","Error","statusText","Propuestas","codigo_propuesta","fecha_inicio_propuesta","html","cantidad_estudiantes","cantidad_horas","descripcion","Usuarios","first_name","last_name","email","is_superuser","is_staff","is_active","seleccionUsuario","usuario","handleChangeCheck","checked","usuarios","last_login","date_joined","color","autocomplete","readOnly","Check","inline","LogoUes","logoUes","LogoProyeccion","logoProyeccion","InicioInformacion","align","placement","rel","Title","Text","leerCookie","nombre","cookies","split","charAt","substring","indexOf","RegistroUps","solicitudEstudiante","ultimoEstado","longitud","nombre_usuario","estudiante","enlace","observaciones","estado","Alert","Heading","EnvioRegistroUps","Image","fluid","SolicitudInscripcion","seleccionServicio","servicio","carnetEstudiante","servicio_social","formUpdate","entidad","modalVerificacion","estadoRegistro","servicios_social","servicios","codigo_servicio_social","propuesta","propuesta_detalle","solicitud_detalle","codigo_tipo_servicio","nombre_servicio","SolicitudProyecto","codigo_solicitud_servicio","servicio_social_detalle","SolicitudesEstudiantes","codigo_solicitud_ups","Docentes","codigo_docente","nombres_docente","apellidos_docente","correo","direccion_docente","telefono_docente","escuela","seleccionDocente","docente","escuela_detalle","facultad_id","docentes","escuelas","nombre_escuela","codigo_escuela","AsignarEE","codigo_encargado","docente_encargado","seleccionEncargado","encargado","nombre_docente_encargado","listaDocentes","listaEncargados","encargados","docente_detalle","usuario_detalle","estado_detalle","RegistrarActividad","total_horas","solicitud_servicio","codigo_actividad","seleccionActividad","actividad","calculoHoras","totalHoras","actividades","posicion","Table","striped","bordered","hover","SolicitudRegistroSS","modalConfirmar","seleccionSolicitud","servicio_social_descripcion","solicitudSS","servicio_social_cantidad_estudiantes","servicio_social_cantidad_horas","servicio_social_entidad","SolicitudInscripcionUPS","solicitudUPS","GestionServicioSocial","tipoServicio","AsignarPropuesta","seleccionPropuesta","propuestas","nombre_tipo_servicio","Array","Copyright","Typography","root","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","modal","paperLogin","backgroundColor","palette","background","boxShadow","shadows","App","React","setCsrfToken","setSession","autenticado","setAutenticado","setCredenciales","tipoUsuario","setTipoUsuario","handleSession","useEffect","TextFieldLogin","withStyles","caretColor","borderBottomColor","borderColor","TextField","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","willClose","window","location","Button","startIcon","LockOpen","detail","Drawer","List","Container","exact","path","Inicio","RegistroEstudiante","RegistrarPropuesta","RegistrarSolicitud","GestionarRoles","ConsultarSolicitud","IniciarSesion","GestionUsuarios","ConsultarPropuesta","RegistrarseUps","ConsultarInscripcion","Servicios","Proyecto","ConsultarSolicitudesEstudiantes","AsignarEncargadoEscuela","Actividades","PropuestasAceptadas","GestionSS","Box","pt","EnvioSolicitud","ServicioSocial","Docente","SolicitudRegistroUPS","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.53f71274.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, LockOpen, PersonAdd, ImportContacts, LibraryBooks, Visibility, Add} from \"@material-ui/icons/\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),  \r\n  },\r\n}));\r\n\r\nexport const itemsVisitante = (\r\n  <div>\r\n    <ListSubheader>Menú</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/RegistroEstudiante\">\r\n      <ListItemIcon>\r\n        <PersonAdd />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Registro de Estudiante\" />\r\n    </ListItem>\r\n    <DesplegarPropuestas\r\n      opcionGeneral={\"Propuestas\"}\r\n      opcion1={\"Consultar Propuestas\"}\r\n      link1={\"/ConsultarPropuesta\"}\r\n      opcion2={\"Registrar Propuestas\"}\r\n      link2={\"/RegistrarPropuesta\"}\r\n    />\r\n    <DesplegarSolicitudes\r\n      opcionGeneral={\"Solicitudes\"}\r\n      opcion1={\"Consultar Solicitudes\"}\r\n      link1={\"/ConsultarSolicitud\"}\r\n      opcion2={\"Registrar Solicitud\"}\r\n      link2={\"/RegistrarSolicitud\"}\r\n    />\r\n  </div>\r\n);\r\nfunction DesplegarPropuestas(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <ImportContacts />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\nfunction DesplegarSolicitudes(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <LibraryBooks />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, Pages, Visibility, Add, Schedule, AssignmentTurnedIn,Widgets} from \"@material-ui/icons/\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    \r\n  },\r\n}));\r\nexport const itemsEstudiante = (\r\n\r\n  <div>\r\n    <ListSubheader>Menú Estudiante</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <DesplegarUPS\r\n      opcionGeneral={\"UPS\"}\r\n      opcion1={\"Registro\"}\r\n      link1={\"/RegistroUps\"}\r\n      opcion2={\"Consultar Registro\"}\r\n      link2={\"/SolicitudInscripcion\"}\r\n    />\r\n    <DesplegarServicioSocial\r\n      opcionGeneral={\"Servicio Social\"}\r\n      opcion1={\"Consultar SS Disponible\"}\r\n      link1={\"/ServicioSocial\"}\r\n      opcion2={\"Estado de Mis Servicios Sociales\"}\r\n      link2={\"/SolicitudProyecto\"}\r\n      opcion3={\"Registrar Actividades\"}\r\n      link3={\"/Actividades\"}\r\n      opcion4={\"Resolución\"}\r\n      link={\"\"}\r\n    />\r\n  </div>\r\n);\r\nfunction DesplegarUPS(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <Pages />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\nfunction DesplegarServicioSocial(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <Widgets />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Schedule />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link3}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion3} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link4}\r\n        >\r\n          <ListItemIcon>\r\n            <AssignmentTurnedIn />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion4} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, Group, GroupAdd, LibraryBooks, Add, Widgets, ImportContacts, Visibility} from \"@material-ui/icons/\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    \r\n  },\r\n}));\r\n\r\nexport const itemsFacultad = (\r\n  <div>\r\n    <ListSubheader>Menú Encargado de Facultad</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/Docentes\">\r\n      <ListItemIcon>\r\n        <Group />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Nómina Docente\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/AsignarEE\">\r\n      <ListItemIcon>\r\n        <GroupAdd />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Asignar Encargado a Escuela\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <ImportContacts />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Propuestas\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <LibraryBooks />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Solicitudes\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/GestionServicioSocial\">\r\n      <ListItemIcon>\r\n        <LibraryBooks />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Servicios Sociales\" />\r\n    </ListItem>\r\n    {/* <DesplegarServicioSocial\r\n      opcionGeneral={\"Servicios Sociales\"}\r\n      opcion1={\"Registrar Servicio Social\"}\r\n      link1={\"\"}\r\n      opcion2={\"Consultar Servicio Social\"}\r\n      link2={\"\"}\r\n    /> */}\r\n  </div>\r\n);\r\nfunction DesplegarServicioSocial(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <Widgets />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\n","\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, Beenhere,Done, EmojiPeople} from \"@material-ui/icons/\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\n\r\n\r\nexport const itemsEscuela = (\r\n  <div>\r\n    <ListSubheader>Menú Encargado de Escuela</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/PropuestasAceptadas\">\r\n      <ListItemIcon>\r\n        <Beenhere />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Propuestas Aceptadas\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/SolicitudRegistroUPS\">\r\n      <ListItemIcon>\r\n        <Done />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Solicitudes de Registro para UPS\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/SolicitudRegistroSS\">\r\n      <ListItemIcon>\r\n        <EmojiPeople />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Solicitudes de Estudiantes para SS\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\n","\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, SupervisedUserCircle, VerifiedUser} from \"@material-ui/icons/\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\n\r\n\r\nexport const itemsAdmin= (\r\n  <div>\r\n    <ListSubheader>Menú Administrador</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/GestionarPrivilegios\">\r\n      <ListItemIcon>\r\n        <VerifiedUser/>\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Roles y Privilegios\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/GestionarUsuarios\">\r\n      <ListItemIcon>\r\n        <SupervisedUserCircle />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Usuarios\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\n","export default __webpack_public_path__ + \"static/media/iconoSicass.7d10827a.png\";","import React, { Component } from 'react';\r\n//Aqui importamos nuestra imagen\r\nimport sicass from './iconoSicass.png';\r\n\r\nclass LogoSicass extends Component {\r\n  render() {\r\n    return (    \r\n        <div className=\"pr-3\">\r\n            <img src={sicass} width=\"50\" height=\"50\" alt=\"Lgo SICASS\"/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoSicass;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Dashboard(props) {\r\n  return (\r\n    <Grid spacing={3}>\r\n      {props.contenedor}\r\n    </Grid>\r\n  );\r\n}","import React  from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n//Componente que contiene la base de maquetación de las card\r\nexport default function card(props) {\r\n  return (\r\n    <Card border=\"info\">\r\n      <Card.Header className=\"bg-info\">{props.titulo}</Card.Header> \r\n      <Card.Body>{props.cuerpo}</Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//Componente que contiene la base de maquetación de los botones para un registro\r\nexport default function botones() {\r\n  return (\r\n    <div className=\"pt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col text-right \">\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </div>\r\n        <div className=\"col pl-5\">\r\n          <a className=\"btn btn-secondary\" href=\"https://juliohdv.github.io/sicass_app/\">Cancelar</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Col, Form, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Botones from \"./BotonesRegistro\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Clase principal del componente, para el registro de los estudiantes\r\nclass Registro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      facultades: [],\r\n      carreras: [],\r\n      facultadSeleccionada: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  //Funcion para la obtener las carreras, dependiendo de la seleccion de la facultad\r\n  handleChange(event) {\r\n    this.setState({ facultadSeleccionada: event.target.value });\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/carreraPorFacultad/\", {\r\n        params: { facultad: event.target.value },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ carreras: response.data });\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  //Funcion que carga todas las facultades, al ingresar a la pantalla\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/facultades/\")\r\n      .then((response) => {\r\n        this.setState({ facultades: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  //Funcion para resetear la facultad seleccionada\r\n  reiniciarFacultad(){\r\n    document.getElementById(\"facultad\").selectedIndex = \"0\";\r\n  }\r\n  render() {\r\n    //Retorna todo la interfas respectiva para la solicitud de la propuesta\r\n    return (\r\n      /* Componente que facilita el control de los campos del fomrulario */\r\n      <Formik\r\n        initialValues={{\r\n          user:\"\",\r\n          carnet: \"\",\r\n          password: \"\",\r\n          nombres_estudiante: \"\",\r\n          apellidos_estudiante: \"\",\r\n          correo_estudiante: \"\",\r\n          sexo: \"\",\r\n          direccion_estudiante: \"\",\r\n          telefono_estudiante: \"\",\r\n          carrera_id: \"\",\r\n        }}\r\n        onSubmit={async (values, {resetForm}) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          /* Librearia que facilita la comunicación con el backend */\r\n          axios\r\n            .post(\"https://juliohdv.pythonanywhere.com/login/crearUsuario/\", {\r\n              username: values.carnet,\r\n              password: values.password,\r\n              tipo_usuario: 1\r\n            })\r\n            .then((response)=>{\r\n              axios\r\n                .get(\"https://juliohdv.pythonanywhere.com/login/ultimoUsuario/\")\r\n                .then((response) =>{\r\n                    axios\r\n                    .post(\"https://juliohdv.pythonanywhere.com/login/estudiantes/\", {\r\n                      carnet: values.carnet,\r\n                      nombres_estudiante: values.nombres_estudiante,\r\n                      apellidos_estudiante: values.apellidos_estudiante,\r\n                      correo_estudiante: values.correo_estudiante,\r\n                      sexo: values.sexo,\r\n                      direccion_estudiante: values.direccion_estudiante,\r\n                      telefono_estudiante: values.telefono_estudiante,\r\n                      carrera: values.carrera_id,\r\n                      user: response.data.map((elemento) => elemento.id).toString()\r\n                    })\r\n                    .then((response) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"success\",\r\n                        title: \"Te has registrado con exito\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                      });\r\n                      //Limpia el formulario ingresado en pantalla\r\n                      this.reiniciarFacultad();\r\n                      resetForm({});\r\n                    })\r\n                    .catch((error) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"error\",\r\n                        title:\r\n                          \"Ocurrio un error en su registro: Estudiante ya registrado\",\r\n                      });\r\n                  });\r\n                })\r\n                .catch((error)=>{});\r\n            })\r\n            .catch((error)=>{});\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, handleChange }) => (\r\n          /* Formulario que contiene todo los campos requeridos */\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Carnet</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Dos letras en mayúscula y cinco dígitos númericos\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"AA00000\"\r\n                    id=\"carnet\"\r\n                    maxLength=\"7\"\r\n                    pattern=\"([A-Z]{2})([0-9]{5})\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.carnet}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Contraseña</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Digite una contraseña para la creación de su usuario\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"**********\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Nombres</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Inciales en mayúscula, resto en minúscula y los nombres\r\n                      separados por un espacio\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Carlos Roberto\"\r\n                    maxLength=\"50\"\r\n                    id=\"nombres_estudiante\"\r\n                    pattern=\"([A-ZÑ]{1}[a-zá-úñ]+)[ ]([A-ZÑ]{1}[a-zá-úñ]+)\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.nombres_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Apellidos</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Inciales en mayúscula, resto en minúscula y los apellidos\r\n                      separados por un espacio\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Perez Quintanilla\"\r\n                    maxLength=\"50\"\r\n                    id=\"apellidos_estudiante\"\r\n                    pattern=\"([A-ZÑ]{1}[a-zá-úñ]+)[ ]([A-ZÑ]{1}[a-zá-úñ]+)\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.apellidos_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Email</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Carnet con el dominio del correo de la Universidad\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"AA00000@ues.edu.sv\"\r\n                    id=\"correo_estudiante\"\r\n                    pattern=\"([A-Za-z]{2})([0-9]{5})@ues[.]edu[.]sv\"\r\n                    maxLength=\"18\"\r\n                    required={true}\r\n                    value={values.correo_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Dirección</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Cada subdivisión de la dirección, separado por una \",\"\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Departamento, Municipio, Residencia\"\r\n                    maxLength=\"250\"\r\n                    id=\"direccion_estudiante\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.direccion_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Teléfono</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Ocho dígitos numericos, iniciando por 2, 6 o 7\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"########\"\r\n                    maxLength=\"8\"\r\n                    id=\"telefono_estudiante\"\r\n                    pattern=\"([267]{1})([0-9]{7})\"\r\n                    required={true}\r\n                    value={values.telefono_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"sexo\"\r\n                  required={true}\r\n                  value={values.sexo}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione...\r\n                  </option>\r\n                  <option key={0} value=\"Masculino\">\r\n                    Masculino\r\n                  </option>\r\n                  <option key={1} value=\"Femenino\">\r\n                    Femenino\r\n                  </option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Facultad</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Si no aparecen las facultades, no hay conexión con la Base\r\n                      de datos, intente en otro momento\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"facultad\"\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true} selected>\r\n                      Seleccione...\r\n                    </option>\r\n                    {this.state.facultades.map((elemento) => (\r\n                      <option\r\n                        key={elemento.codigo_facultad}\r\n                        value={elemento.codigo_facultad}\r\n                      >\r\n                        {elemento.nombre_facultad}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Carrera</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"carrera_id\"\r\n                  required={true}\r\n                  value={values.carrera_id}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione..\r\n                  </option>\r\n                  {this.state.carreras.map((elemento) => (\r\n                    <option\r\n                      key={elemento.codigo_carrera}\r\n                      value={elemento.codigo_carrera}\r\n                    >\r\n                      {elemento.id_carrera + \" \" + elemento.nombre_carrera +\" - \"+ elemento.plan_carrera + \" (Modalidad: \" + elemento.modalidad_carrera + \")\"}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Botones />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registro;","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport Registro from \"./Registro\";\r\n\r\n//Clase principal del componente\r\nclass EnvioRegistro extends Component {\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <Card titulo=\"Registro de Estudiante\" cuerpo={<Registro />} />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnvioRegistro;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, Row, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Botones from \"./BotonesRegistro\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/* Componente que contiene el formulario base de los datos del servicio\r\nsocial a solicitar */\r\nclass PropuestaServicio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipos_servicio_social: [],\r\n      facultades: [],\r\n      carreras: [],\r\n      facultadSeleccionada: \"\",\r\n      carreraSeleccionada: \"\",\r\n      tipoServicioSocialSeleccionado: \"\",\r\n    };\r\n    this.handleFacultad = this.handleFacultad.bind(this);\r\n  }\r\n  //Funcion que obtiene la carrera dependiendo la facultad seleccionada\r\n  handleFacultad(event) {\r\n    this.setState({ facultadSeleccionada: event.target.value });\r\n    this.setState({ carreraSeleccionada: event.target.value });\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/carreraPorFacultad/\", {\r\n        params: { facultad: event.target.value },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ carreras: response.data });\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n  }\r\n  //Obtiene de la BD las facultadas para cargar el combobox\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/facultades/\")\r\n      .then((response) => {\r\n        this.setState({ facultades: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/tiposServicioSocial/\")\r\n      .then((response) => {\r\n        this.setState({ tipos_servicio_social: response.data });\r\n      })\r\n      .catch((error) => {}\r\n      );\r\n  }\r\n\r\n  //Funcion para resetear la facultad seleccionada\r\n  reiniciarFacultad(){\r\n    document.getElementById(\"facultad\").selectedIndex = \"0\";\r\n  }\r\n  //Funcion para obtener la fecha actual\r\n  fechaActual() {\r\n    var fecha = new Date();\r\n    var mes = fecha.getMonth() + 1;\r\n    var dia = fecha.getDate();\r\n    var anio = fecha.getFullYear();\r\n    if (dia < 10) dia = \"0\" + dia;\r\n    if (mes < 10) mes = \"0\" + mes;\r\n    return anio + \"-\" + mes + \"-\" + dia;\r\n  }\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          nombre_entidad: \"\",\r\n          direccion_entidad: \"\",\r\n          correo_entidad: \"\",\r\n          telefono_entidad: \"\",\r\n          clasificacion_entidad: \"\",\r\n          fecha_fin_propuesta: \"\",\r\n          estado_propuesta: \"En Proceso\",\r\n          descripcion_propuesta: \"\",\r\n          entidad_externa_id: \"\",\r\n          carrera_id: \"\",\r\n          tipo_servicio_social_id: \"\",\r\n        }}\r\n        onSubmit={async (values, {resetForm}) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          axios\r\n            .post(\"https://juliohdv.pythonanywhere.com/login/entidadExterna/\", {\r\n              nombre_entidad: values.nombre_entidad,\r\n              direccion_entidad: values.direccion_entidad,\r\n              correo_entidad: values.correo_entidad,\r\n              telefono_entidad: values.telefono_entidad,\r\n              clasificacion_entidad: values.clasificacion_entidad,\r\n            })\r\n            .then((response) => {\r\n              axios\r\n                .get(\"https://juliohdv.pythonanywhere.com/login/ultimaEntidadExterna/\")\r\n                .then((response) => {\r\n                  axios\r\n                    .post(\"https://juliohdv.pythonanywhere.com/login/propuestas/\", {\r\n                      fecha_fin_propuesta: values.fecha_fin_propuesta,\r\n                      estado_propuesta: values.estado_propuesta,\r\n                      descripcion_propuesta: values.descripcion_propuesta,\r\n                      entidad_externa: response.data\r\n                        .map((elemento) => elemento.codigo_entidad)\r\n                        .toString(),\r\n                      carrera: values.carrera_id,\r\n                      tipo_servicio_social: values.tipo_servicio_social_id,\r\n                      fecha_fin_propuesta: values.fecha_fin_propuesta,\r\n                      estado_propuesta: values.estado_propuesta,\r\n                      descripcion_propuesta: values.descripcion_propuesta,\r\n                    })\r\n                    .then((response) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"success\",\r\n                        title:\r\n                          \"Tu propuesta de servicio social ha sido registrada con éxito.\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                      });\r\n                      //Limpia el formulario ingresado en pantalla\r\n                      this.reiniciarFacultad();\r\n                      resetForm({});\r\n                    })\r\n                    .catch((error) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"error\",\r\n                        title: \"Ocurrio un error en su registro de propuesta\",\r\n                      });\r\n                    });\r\n                })\r\n                .catch((error) => {});\r\n            })\r\n            .catch((error) => {});\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, handleChange }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Nombre entidad</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Nombre de la entidad a la que representa</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ministerio de agricultura\"\r\n                    id=\"nombre_entidad\"\r\n                    required={true}\r\n                    maxLength=\"150\"\r\n                    value={values.nombre_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Dirección</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Cada subdivisión de la dirección, separado por una \",\"\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Departamento, Municipio, Residencia \"\r\n                    id=\"direccion_entidad\"\r\n                    required={true}\r\n                    maxLength=\"250\"\r\n                    value={values.direccion_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Correo</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Debe contener una \"@\" y al menos un \".\"</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"example@name.com\"\r\n                    id=\"correo_entidad\"\r\n                    required={true}\r\n                    maxLength=\"254\"\r\n                    pattern=\"([A-z]+)@([A-z]+)[.]([A-z.]+)\"\r\n                    value={values.correo_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Teléfono</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Ocho dígitos númericos, iniciados por 2, 6 o 7\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"########\"\r\n                    id=\"telefono_entidad\"\r\n                    pattern=\"([267]{1})([0-9]{7})\"\r\n                    maxLength=\"8\"\r\n                    required={true}\r\n                    value={values.telefono_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"text-right pt-3\">\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label className=\"pt-2\">\r\n                  Clasificación de la entidad\r\n                </Form.Label>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"clasificacion_entidad\"\r\n                  required={true}\r\n                  value={values.clasificacion_entidad}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione...\r\n                  </option>\r\n                  <option key={0} value=\"Privada\">\r\n                    Privada\r\n                  </option>\r\n                  <option key={1} value=\"Pública\">\r\n                    Pública\r\n                  </option>\r\n                  <option key={2} value=\"Autónoma\">\r\n                    Autónoma\r\n                  </option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Row className=\"pt-5\">\r\n              <Col sm={6} className=\"pl-5\">\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Facultad</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"facultad\"\r\n                    required={true}\r\n                    onChange={this.handleFacultad}\r\n                  >\r\n                    <option value=\"\" disabled={true} selected>\r\n                      Selecione...\r\n                    </option>\r\n                    {this.state.facultades.map((elemento) => (\r\n                      <option\r\n                        key={elemento.codigo_facultad}\r\n                        value={elemento.codigo_facultad}\r\n                      >\r\n                        {elemento.nombre_facultad}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Carrera</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"carrera_id\"\r\n                    required={true}\r\n                    value={values.carrera_id}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true}>\r\n                      Selecione...\r\n                    </option>\r\n                    {this.state.carreras.map((elemento) => (\r\n                      <option\r\n                        key={elemento.codigo_carrera}\r\n                        value={elemento.codigo_carrera}\r\n                      >\r\n                        {elemento.nombre_carrera}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Tipo de servicio social</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"tipo_servicio_social_id\"\r\n                    required={true}\r\n                    value={values.tipo_servicio_social_id}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true} selected={true}>\r\n                      Selecione...\r\n                    </option>\r\n                    {this.state.tipos_servicio_social.map((elemento) => (\r\n                      <option\r\n                        key={elemento.condigo_tipo_servicio_social}\r\n                        value={elemento.condigo_tipo_servicio_social}\r\n                      >\r\n                        {elemento.nombre_tipo_servicio_social}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Fecha limite para respuesta</Form.Label>\r\n                  <Form.Control\r\n                    type=\"Date\"\r\n                    id=\"fecha_fin_propuesta\"\r\n                    required={true}\r\n                    value={values.fecha_fin_propuesta}\r\n                    onChange={handleChange}\r\n                    min={this.fechaActual()}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={1}></Col>\r\n              <Col sm={5}>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Descripción de la propuesta</Form.Label>\r\n                  <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Descripción de la propuesta, maximo 750 carácteres</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    id=\"descripcion_propuesta\"\r\n                    required={true}\r\n                    value={values.descripcion_propuesta}\r\n                    onChange={handleChange}\r\n                    rows={11}\r\n                    maxLength=\"750\"\r\n                  />\r\n                </OverlayTrigger>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Botones />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PropuestaServicio;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport PropuestaServicio from \"./PropuestaServicio\";\r\n\r\n//Clase principal del componente\r\nclass EnvioPropuesta extends Component {\r\n  render() {\r\n    //Retorna todo la interfas respectiva para la solicitud de la propuesta\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <Card\r\n              titulo=\"Propuesta de servicio social\"\r\n              cuerpo={<PropuestaServicio />}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnvioPropuesta;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Botones from \"./BotonesRegistro\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/* Componente que contiene el formulario base de los datos del servicio\r\nsocial a solicitar */\r\nclass SolicitudServicio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipos_servicio_social: [],\r\n      facultades: [],\r\n      carreras: [],\r\n      facultadSeleccionada: \"\",\r\n      carreraSeleccionada: \"\",\r\n      tipoServicioSocialSeleccionado: \"\",\r\n    };\r\n  }\r\n  handleFacultad(event) {\r\n    axios\r\n      .get('https://juliohdv.pythonanywhere.com/login/carreraPorFacultad/', {params:{facultad: event.target.value}})\r\n      .then((response) =>{\r\n        this.setState({carreras:response.data})\r\n        console.log(this.state.carreras)\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  handleCarrera(event){\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/tiposServicioSocialPorCarrera/\",{\r\n        params: {carrera: event.target.value },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ tipos_servicio_social: response.data });\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  componentDidMount() {\r\n    //Consulta lista de facultades\r\n    axios\r\n      .get('https://juliohdv.pythonanywhere.com/login/facultades/')\r\n      .then((response) =>{\r\n        this.setState({facultades:response.data})\r\n      })\r\n      .catch((error)=>{\r\n        console.log(error)\r\n      })\r\n    \r\n      \r\n    axios\r\n      .get('https://juliohdv.pythonanywhere.com/login/tiposServicioSocial/')\r\n      .then((response) => {\r\n        this.setState({ tipo_servicio_social: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n   //Funcion para resetear la facultad seleccionada\r\n   reiniciarFacultad(){\r\n    document.getElementById(\"facultad\").selectedIndex = \"0\";\r\n  }\r\n  //Funcion para obtener la fecha actual\r\n  fechaActual() {\r\n    var fecha = new Date();\r\n    var mes = fecha.getMonth() + 1;\r\n    var dia = fecha.getDate();\r\n    var anio = fecha.getFullYear();\r\n    if (dia < 10) dia = \"0\" + dia;\r\n    if (mes < 10) mes = \"0\" + mes;\r\n    return anio + \"-\" + mes + \"-\" + dia;\r\n  }\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          nombre_entidad: \"\",\r\n          direccion_entidad: \"\",\r\n          correo_entidad: \"\",\r\n          telefono_entidad: \"\",\r\n          clasificacion_entidad: \"\",\r\n          fecha_fin_solicitud: \"\",\r\n          estado_solicitud: \"En Proceso\",\r\n          entidad_externa_id: \"\",\r\n          carrera_id: \"\",\r\n          tipo_servicio_social_id: \"\",\r\n        }}\r\n        onSubmit={async (values, {resetForm}) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          axios\r\n            .post(\"https://juliohdv.pythonanywhere.com/login/entidadExterna/\", {\r\n              nombre_entidad: values.nombre_entidad,\r\n              direccion_entidad: values.direccion_entidad,\r\n              correo_entidad: values.correo_entidad,\r\n              telefono_entidad: values.telefono_entidad,\r\n              clasificacion_entidad: values.clasificacion_entidad,\r\n            })\r\n            .then((response) => {\r\n              axios\r\n                .get(\"https://juliohdv.pythonanywhere.com/login/ultimaEntidadExterna/\")\r\n                .then((response) => {\r\n                  axios\r\n                    .post(\"https://juliohdv.pythonanywhere.com/login/solicitudes/\", {\r\n                      fecha_fin_solicitud: values.fecha_fin_solicitud,\r\n                      estado_solicitud: values.estado_solicitud,\r\n                      entidad_externa: response.data\r\n                        .map((elemento) => elemento.codigo_entidad)\r\n                        .toString(),\r\n                      carrera: values.carrera_id,\r\n                      tipo_servicio_social: values.tipo_servicio_social_id,\r\n                    })\r\n                    .then((response) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"success\",\r\n                        title:\r\n                          \"Tu solicitud de servicio social ha sido registrada con éxito.\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                      });\r\n                      //Limpia el formulario ingresado en pantalla\r\n                      this.reiniciarFacultad();\r\n                      resetForm({});\r\n                    })\r\n                    .catch((error) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"error\",\r\n                        title: \"Ocurrio un error en su registro de solicitud\",\r\n                      });\r\n                    });\r\n                })\r\n                .catch((error) => {});\r\n            })\r\n            .catch((error) => {});\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, handleChange }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Nombre entidad</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Nombre de la entidad a la que representa</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ministerio de hacienda\"\r\n                    id=\"nombre_entidad\"\r\n                    required={true}\r\n                    maxLength=\"150\"\r\n                    value={values.nombre_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Dirección</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Cada subdivisión de la dirección, separado por una \",\"\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Departamento, Municipio, Residencia\"\r\n                    id=\"direccion_entidad\"\r\n                    required={true}\r\n                    maxLength=\"250\"\r\n                    value={values.direccion_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Correo</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Debe contener una \"@\" y al menos un \".\"</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"example@name.com\"\r\n                    id=\"correo_entidad\"\r\n                    required={true}\r\n                    maxLength=\"254\"\r\n                    pattern=\"([A-z]+)@([A-z]+)[.]([A-z.]+)\"\r\n                    value={values.correo_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Teléfono</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Ocho dígitos númericos, iniciados por 2, 6 o 7\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"telefono_entidad\"\r\n                    placeholder=\"########\"\r\n                    maxLength=\"8\"\r\n                    pattern=\"([267]{1})([0-9]{7})\"\r\n                    required={true}\r\n                    value={values.telefono_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"text-right pt-3\">\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label className=\"pt-2\">\r\n                  Clasificación de la entidad\r\n                </Form.Label>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"clasificacion_entidad\"\r\n                  value={values.clasificacion_entidad}\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione...\r\n                  </option>\r\n                  <option key={0} value=\"Privada\">\r\n                    Privada\r\n                  </option>\r\n                  <option key={1} value=\"Pública\">\r\n                    Pública\r\n                  </option>\r\n                  <option key={2} value=\"Autónoma\">\r\n                    Autónoma\r\n                  </option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"pt-5\">\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Facultad</Form.Label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    id=\"facultad\"\r\n                    required={true}\r\n                    onChange={this.handleFacultad}\r\n                  >\r\n                    <option value=\"\" disabled={true} selected>\r\n                      Selecione...\r\n                    </option>\r\n                    {this.state.facultades.map((elemento) => (\r\n                      <option\r\n                        key={elemento.codigo_facultad}\r\n                        value={elemento.codigo_facultad}\r\n                      >\r\n                        {elemento.nombre_facultad}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Carrera</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"carrera\"\r\n                  required={true}\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true} selected>\r\n                    Seleccione..\r\n                  </option>\r\n                  {this.state.carreras.map((elemento) => (\r\n                    <option\r\n                      key={elemento.codigo_carrera}\r\n                      value={elemento.codigo_carrera}\r\n                    >\r\n                      {elemento.id_carrera + \" \" + elemento.nombre_carrera +\" - \"+ elemento.plan_carrera + \" (Modalidad: \" + elemento.modalidad_carrera + \")\"}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Tipo de servicio social</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"tipo_servicio_social_id\"\r\n                  required={true}\r\n                  value={values.tipo_servicio_social_id}\r\n                  onChange={this.handleCarrera}\r\n                >\r\n                  <option value=\"\" disabled={true} selected={true}>\r\n                    Seleccione...\r\n                  </option>\r\n                  {this.state.tipos_servicio_social.map((elemento) => (\r\n                    <option\r\n                      key={elemento.condigo_tipo_servicio_social}\r\n                      value={elemento.condigo_tipo_servicio_social}\r\n                    >\r\n                      {elemento.nombre_tipo_servicio_social}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Fecha limite para respuesta</Form.Label>\r\n                <Form.Control\r\n                  type=\"Date\"\r\n                  id=\"fecha_fin_solicitud\"\r\n                  required={true}\r\n                  value={values.fecha_fin_solicitud}\r\n                  onChange={handleChange}\r\n                  min={this.fechaActual()}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Botones />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudServicio;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport SolicitudServicio from \"./SolicitudServicio\";\r\n\r\n//Clase principal del componente\r\nclass Solicitud extends Component {\r\n  render() {\r\n    //Retorna todo la interfas respectiva para la solicitud de la propuesta\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <Card\r\n              titulo=\"Solicitud de servicio social\"\r\n              cuerpo={<SolicitudServicio />}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Solicitud;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  tableBodyHeight: \"320px\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de privilegios\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"https://juliohdv.pythonanywhere.com/permisos/\";\r\n\r\n//Clase principal del componente\r\nclass Roles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      permisos: [], //Estdo que contendra todo lo que digite el usuario\r\n      tipoContenido: [], //Estado que contendra todo los content_type\r\n      modalInsertar: false, //Estado que controla el abrir o cerra el modal correspondiente\r\n      modalEliminar: false,\r\n      form: {\r\n        //Estado que contiene los campos del formulario a ingresar\r\n        id: \"\",\r\n        name: \"\",\r\n        content_type: \"\",\r\n        codename: \"\",\r\n        tipoModal: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    try {\r\n      if (\r\n        this.state.form.name.length > 0 &&\r\n        this.state.form.codename.length > 0 &&\r\n        this.state.form.content_type.length > 0\r\n      ) {\r\n        await axios\r\n          .post(url, {\r\n            name: this.state.form.name,\r\n            content_type: this.state.form.content_type,\r\n            codename: this.state.form.codename,\r\n          })\r\n          .then((response) => {\r\n            this.modalInsertar();\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"success\",\r\n              title: \"Se a guardado con exito\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n            this.componentDidMount();\r\n          })\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"error\",\r\n              title: \"Ocurrio un error en el registro del privilegio\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n          });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title:\r\n          \"Debe ingresar los campos obligatirios: Nombre, Modelo y Privilegio\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    axios\r\n      .put(url + this.state.form.id + \"/\", this.state.form)\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en actualizar el privilegio\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para eliminar los datos a la BD mediante la api\r\n  peticionDelete = () => {\r\n    axios\r\n      .delete(url + this.state.form.id)\r\n      .then((response) => {\r\n        this.setState({ modalEliminar: false });\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a eliminado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en actualizar el privilegio\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionPrivilegio = (privilegio) => {\r\n    this.setState({\r\n      tipoModal: \"actualizar\",\r\n      form: {\r\n        id: privilegio[0],\r\n        name: privilegio[1],\r\n        content_type: privilegio[2],\r\n        codename: privilegio[3],\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({ permisos: response.data });\r\n        axios\r\n          .get(\"https://juliohdv.pythonanywhere.com/login/tipoContenido/\")\r\n          .then((response) => {\r\n            this.setState({ tipoContenido: response.data });\r\n          })\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"error\",\r\n              title:\r\n                \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { form } = this.state; //Constante que contiene el estado del formulario\r\n    //Constante que contiene los datos estaticos de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"id\",\r\n        label: \"Código\",\r\n        options: {\r\n          display: false,\r\n        }\r\n      },\r\n      {\r\n        name: \"name\",\r\n        label: \"Nombre\",\r\n      },\r\n      {\r\n        name: \"content_type\",\r\n        label: \"Código de modelo\",\r\n      },\r\n      {\r\n        name: \"codename\",\r\n        label: \"Privilegio\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n              <>\r\n                {/* Botones para editar y eliminar */}\r\n                <Tooltip title=\"Editar\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionPrivilegio(tableMeta.rowData);\r\n                      this.modalInsertar();\r\n                    }}\r\n                  >\r\n                    <Edit></Edit>\r\n                  </Button>\r\n                </Tooltip>\r\n                <span className=\"pl-2\">\r\n                  <Tooltip title=\"Eliminar\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline-danger\"\r\n                      onClick={() => {\r\n                        this.seleccionPrivilegio(tableMeta.rowData);\r\n                        this.setState({ modalEliminar: true });\r\n                      }}\r\n                    >\r\n                      <Delete></Delete>\r\n                    </Button>\r\n                  </Tooltip>\r\n                </span>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <div>\r\n              {/* Boton para crear */}\r\n              <Button\r\n                variant=\"success\"\r\n                onClick={() => {\r\n                  this.setState({ form: null, tipoModal: \"insertar\" });\r\n                  this.modalInsertar();\r\n                }}\r\n              >\r\n                Crear\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <div className=\"pt-3\">\r\n                {/* Invocacion de la tabla, con sus opciones */}\r\n                <MUIDataTable\r\n                  title={\"Privilegios\"}\r\n                  data={this.state.permisos}\r\n                  columns={columns}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Modal para actualizar o crear */}\r\n            <Modal isOpen={this.state.modalInsertar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <span>Crear privilegios</span>\r\n                ) : (\r\n                  <span>Actualizar privilegios</span>\r\n                )}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form.Group>\r\n                  <Form.Label>Nombre</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Puede cambiar grupos\"\r\n                    required\r\n                    value={form ? form.name : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Modelo</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"content_type\"\r\n                    name=\"content_type\"\r\n                    required={true}\r\n                    value={form ? form.content_type : \"\"}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true}>\r\n                      Seleccione..\r\n                    </option>\r\n                    {this.state.tipoContenido.map((elemento) => (\r\n                      <option key={elemento.id} value={elemento.id}>\r\n                        {elemento.model}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Privilegio</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Cambio de grupo\"\r\n                    id=\"codename\"\r\n                    name=\"codename\"\r\n                    required\r\n                    value={form ? form.codename : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <ModalFooter>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPut()}\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* Modal para eliminar */}\r\n            <Modal isOpen={this.state.modalEliminar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                <span>Eliminar privilegio</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                ¿Esta seguro de eliminar el privilegio seleccionado?\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"danger\" onClick={() => this.peticionDelete()}>\r\n                  Si\r\n                </Button>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => this.setState({ modalEliminar: false })}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Roles;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de solicitudes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/solicitudes/\";\r\n//Clase principal del componente\r\nclass Solicitudes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = []; //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          //Recorremos el arreglo inicial\r\n          solicitud[i] =\r\n            //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {\r\n              codigo_solicitud: arreglo_inicial[i].codigo_solicitud,\r\n              entidad_externa:\r\n                arreglo_inicial[i].entidad_externa_detalle.nombre_entidad,\r\n              tipo_entidad:\r\n                arreglo_inicial[i].entidad_externa_detalle\r\n                  .clasificacion_entidad,\r\n              carrera: arreglo_inicial[i].carrera_detalle.nombre_carrera,\r\n              tipo_servicio_social:\r\n                arreglo_inicial[i].tipo_servicio_social_detalle\r\n                  .nombre_tipo_servicio_social,\r\n              fecha_inicio_solicitud: arreglo_inicial[i].fecha_inicio_solicitud,\r\n              fecha_fin_solicitud: arreglo_inicial[i].fecha_fin_solicitud,\r\n              estado_solicitud: arreglo_inicial[i].estado_solicitud,\r\n            };\r\n        }\r\n        this.setState({ solicitudes: solicitud }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    //Constante con las columnas de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_solicitud\",\r\n        label: \"Codigo\",\r\n        key: \"codigo_solicitud\",\r\n        options: {\r\n          display: false,\r\n        }\r\n      },\r\n      {\r\n        name: \"entidad_externa\",\r\n        label: \"Entidad que solicita\",\r\n        key: \"entidad_externa\",\r\n      },\r\n      {\r\n        name: \"tipo_entidad\",\r\n        label: \"Tipo de entidad\",\r\n        key: \"tipo_entidad\",\r\n      },\r\n      {\r\n        name: \"carrera\",\r\n        label: \"Carrera\",\r\n        key: \"carrera\",\r\n      },\r\n      {\r\n        name: \"tipo_servicio_social\",\r\n        label: \"Tipo de Servicio Social\",\r\n        key: \"tipo_servicio_social\",\r\n      },\r\n      {\r\n        name: \"fecha_inicio_solicitud\",\r\n        label: \"Fecha de Solicitud\",\r\n        key: \"fecha_inicio_solicitud\",\r\n      },\r\n      {\r\n        name: \"fecha_fin_solicitud\",\r\n        label: \"Fecha de Finalización\",\r\n        key: \"fecha_fin_solicitud\",\r\n      },\r\n      {\r\n        name: \"estado_solicitud\",\r\n        label: \"Estado\",\r\n        key: \"estado_solicitud\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            if (tableMeta.rowData[7] === \"Aprobado\") {\r\n              return (\r\n                /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n                <Tooltip title=\"Ver proyecto\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-info\"\r\n                    /* onClick={() => {\r\n                    this.seleccionPrivilegio(tableMeta.rowData);\r\n                    this.modalInsertar();\r\n                  }} */\r\n                  >\r\n                    <Visibility />\r\n                  </Button>\r\n                </Tooltip>\r\n              );\r\n            }\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Solicitudes de servicios\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Solicitudes;\r\n","import React, { Component } from 'react';\r\nimport {Button, Form, Card}  from  'react-bootstrap';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            credenciales : {\r\n            csrf:'',\r\n            username: '', \r\n            password: '', \r\n            tipo_usuario:'', \r\n            isAuthenticated:false, \r\n            error:'',}\r\n        }\r\n    }\r\n    componentDidMount = () =>{\r\n        this.getSession()\r\n    }\r\n    createCookie(key, valor){\r\n        const cookie = escape(key) + \"=\" + escape(valor) + \";secure;\"\r\n        document.cookie = cookie; \r\n        console.log(cookie)\r\n    }\r\n    isResponseOk(response){\r\n        if(response.status >= 200 && response.status  <= 299){\r\n            return response.json()\r\n        }else{\r\n            throw Error(response.statusText)\r\n        }\r\n    }\r\n    getCSRF = () =>{\r\n        fetch(\"https://juliohdv.pythonanywhere.com/login/csrf/\",{\r\n            credentials: \"include\",\r\n        })\r\n        .then((res)=>{\r\n            let csrfToken = res.headers.get(\"X-CSRFToken\")\r\n            this.setState({csrf: csrfToken})\r\n            console.log(csrfToken)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    getSession = () => {\r\n        fetch(\"https://juliohdv.pythonanywhere.com/login/session/\",{\r\n            credentials: \"include\",\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            console.log(data)\r\n            if(data.isAuthenticated){\r\n                this.setState({isAuthenticated:true})\r\n            }else {\r\n                this.setState({isAuthenticated:false})\r\n                this.getCSRF()\r\n            }\r\n        })\r\n        .catch((err) =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    whoami = () =>{\r\n        fetch(\"https://juliohdv.pythonanywhere.com/login/whoami/\",{\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            credentials: \"include\",\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(\"Te has logeado como: \" + data.username)\r\n        })\r\n        .catch((err) =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    login = event =>{\r\n        console.log(this.state.credenciales);\r\n        fetch('https://juliohdv.pythonanywhere.com/login/login/',{\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json',\r\n            'X-CSRFToken': this.state.csrf},\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                username: this.state.credenciales.username,\r\n                password: this.state.credenciales.password\r\n            }),\r\n        })\r\n        .then(this.isResponseOk)\r\n        .then(\r\n            data => {\r\n                this.setState({isAuthenticated:true, username:\"\", password:\"\", error:\"\"})\r\n                this.createCookie(\"usuario\",data.username);\r\n                this.createCookie(\"tipo_usuario\", data.tipo_usuario);\r\n                \r\n            }\r\n        ).catch(error => this.setState({error:\"Nombre de usuario o contraseña no válido.\"}))\r\n    }\r\n    logout = () =>{\r\n        fetch(\"https://juliohdv.pythonanywhere.com/login/logout/\",{\r\n            credentials: \"include\",\r\n        })\r\n        .then(this.isResponseOk)\r\n        .then((data)=>{\r\n            console.log(data)\r\n            this.setState({isAuthenticated:false})\r\n            this.getCSRF();\r\n            \r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    inputChanged = event =>{ //asociamos el valor actual del form al stado del componente\r\n        const credenc = this.state.credenciales;\r\n        credenc[event.target.name] = event.target.value;\r\n        this.setState({credenciales: credenc});\r\n    }\r\n    render(){\r\n        return (\r\n        <Card border=\"info\" style={{width:'18rem'}} >\r\n            <Card.Header className=\"bg-light\">Iniciar Sesión:</Card.Header>\r\n                <Card.Body>\r\n                    <div id=\"formContent\">\r\n                        <Form>\r\n                            <Form.Label>\r\n                                Usuario:\r\n                            </Form.Label>\r\n                            <Form.Control \r\n                                name=\"username\" //mismo name que en el modelo!\r\n                                type=\"text\"  \r\n                                placeholder=\"Ingresar usuario\"\r\n                                value={this.state.credenciales.username}\r\n                                onChange={this.inputChanged}\r\n                            />\r\n                            <Form.Label>\r\n                                Contraseña:\r\n                            </Form.Label>\r\n                            <Form.Control \r\n                                name=\"password\" \r\n                                type=\"password\" \r\n                                placeholder=\"Contraseña\" \r\n                                value={this.state.credenciales.password}\r\n                                onChange={this.inputChanged}\r\n                            />\r\n                            <br></br>\r\n                            <Button \r\n                            variant=\"primary\" \r\n                            type=\"button\" \r\n                            onClick={this.login}>\r\n                            Iniciar Sesión\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                </Card.Body>\r\n                <p>{this.state.error}</p>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de propuestas\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/propuestas/\";\r\n//Clase principal del componente\r\nclass Propuestas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = []; //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          //Recorremos el arreglo inicial\r\n          solicitud[i] =\r\n            //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {\r\n              codigo_propuesta: arreglo_inicial[i].codigo_propuesta,\r\n              entidad_externa:\r\n                arreglo_inicial[i].entidad_externa_detalle.nombre_entidad,\r\n              tipo_entidad:\r\n                arreglo_inicial[i].entidad_externa_detalle\r\n                  .clasificacion_entidad,\r\n              carrera: arreglo_inicial[i].carrera_detalle.nombre_carrera,\r\n              tipo_servicio_social:\r\n                arreglo_inicial[i].tipo_servicio_social_detalle\r\n                  .nombre_tipo_servicio_social,\r\n              fecha_inicio_propuesta: arreglo_inicial[i].fecha_inicio_propuesta,\r\n              fecha_fin_propuesta: arreglo_inicial[i].fecha_fin_propuesta,\r\n              descripcion_propuesta: arreglo_inicial[i].descripcion_propuesta,\r\n              estado_propuesta: arreglo_inicial[i].estado_propuesta,\r\n            };\r\n        }\r\n        this.setState({ solicitudes: solicitud }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    //Constante con las columnas de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_propuesta\",\r\n        label: \"Código\",\r\n        key: \"codigo_propuesta\",\r\n        options: {\r\n          display: false,\r\n        }\r\n      },\r\n      {\r\n        name: \"entidad_externa\",\r\n        label: \"Entidad que solicita\",\r\n        key: \"entidad_externa\",\r\n      },\r\n      {\r\n        name: \"tipo_entidad\",\r\n        label: \"Tipo de entidad\",\r\n        key: \"tipo_entidad\",\r\n      },\r\n      {\r\n        name: \"carrera\",\r\n        label: \"Carrera\",\r\n        key: \"carrera\",\r\n      },\r\n      {\r\n        name: \"tipo_servicio_social\",\r\n        label: \"Tipo de Servicio Social\",\r\n        key: \"tipo_servicio_social\",\r\n      },\r\n      {\r\n        name: \"fecha_inicio_propuesta\",\r\n        label: \"Fecha de Solicitud\",\r\n        key: \"fecha_inicio_propuesta\",\r\n      },\r\n      {\r\n        name: \"fecha_fin_propuesta\",\r\n        label: \"Fecha de Finalización\",\r\n        key: \"fecha_fin_propuesta\",\r\n      },\r\n      {\r\n        name: \"descripcion_propuesta\",\r\n        label: \"Descripción propuesta\",\r\n        key: \"descripcion_propuesta\",\r\n      },\r\n      {\r\n        name: \"estado_propuesta\",\r\n        label: \"Estado\",\r\n        key: \"estado_propuesta\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            if (tableMeta.rowData[8] === \"Aprobado\") {\r\n              return (\r\n                /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n                <Tooltip title=\"Ver proyecto\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-info\"\r\n                    onClick={() => {\r\n                      axios\r\n                        .get(\"https://juliohdv.pythonanywhere.com/login/servicioSocialPorPropuesta/\",{\r\n                          params:{codigo_propuesta:tableMeta.rowData[0]}\r\n                        })\r\n                        .then((response) => {\r\n                          Swal.fire({\r\n                            position: \"center\",\r\n                            title: \"Detalle de proyecto\",\r\n                            html:\"<table><tr><td>Cantidad de estudiantes asignados:</td><td>\"+response.data[0].cantidad_estudiantes+\"</td></tr>\"+\r\n                            \"<tr><td>Cantidad de horas asignadas:</td><td>\"+response.data[0].cantidad_horas+\"</td></tr>\"+\r\n                            \"<tr><td>Descripción:</td><td>\"+response.data[0].descripcion+\"</td></tr></table>\",\r\n                          });\r\n                        })\r\n                        .catch((error) => {\r\n                          Swal.fire({\r\n                            position: \"center\",\r\n                            icon: \"error\",\r\n                            title:\r\n                              \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n                          });\r\n                        });\r\n                  }} \r\n                  >\r\n                    <Visibility />\r\n                  </Button>\r\n                </Tooltip>\r\n              );\r\n            }\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Solicitudes de propuestas\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Propuestas;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Done from \"@material-ui/icons/Done\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de usuarios\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/usuarios/\";\r\n\r\n//Clase principal del componente\r\nclass Usuarios extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuarios: [], //Estado que contendra todo lo que digite el usuario\r\n      modalInsertar: false, //Estado que controla el abrir o cerra el modal correspondiente\r\n      modalEliminar: false,\r\n      form: {\r\n        //Estado que contiene los campos del formulario a ingresar\r\n        id: \"\",\r\n        last_login: \"\",\r\n        is_superuser: false,\r\n        username: \"\",\r\n        password: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        is_staff: false,\r\n        is_active: false,\r\n        date_joined: \"\",\r\n        tipo_usuario: \"\",\r\n        tipoModal: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    try {\r\n      if (\r\n        this.state.form.username.length > 0 &&\r\n        this.state.form.password.length > 0 &&\r\n        this.state.form.tipo_usuario.length > 0\r\n      ) {\r\n        await axios\r\n\r\n          .post(url, {\r\n            username: this.state.form.username,\r\n            password: this.state.form.password,\r\n            tipo_usuario: this.state.form.tipo_usuario,\r\n            first_name: this.state.form.first_name,\r\n            last_name: this.state.form.last_name,\r\n            email: this.state.form.email,\r\n            is_superuser: this.state.form.is_superuser,\r\n            is_staff: this.state.form.is_staff,\r\n            is_active: this.state.form.is_active,\r\n          })\r\n          .then((response) => {\r\n            this.modalInsertar();\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"success\",\r\n              title: \"Se a guardado con exito\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n            this.componentDidMount();\r\n          })\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"error\",\r\n              title: \"Ocurrio un error en el registro del usuario\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n          });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title:\r\n          \"Debe ingresar los campos obligatirios: Usuario, Contraseña y Tipo de usuario\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    axios\r\n      .put(url + this.state.form.id + \"/\", this.state.form)\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en actualizar el usuario\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para eliminar los datos a la BD mediante la api\r\n  peticionDelete = () => {\r\n    axios\r\n      .delete(url + this.state.form.id)\r\n      .then((response) => {\r\n        this.setState({ modalEliminar: false });\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a eliminado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en el eliminar el usuario\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionUsuario = (usuario) => {\r\n    this.setState({\r\n      tipoModal: \"actualizar\",\r\n      form: {\r\n        id: usuario[0],\r\n        username: usuario[1],\r\n        first_name: usuario[2],\r\n        last_name: usuario[3],\r\n        email: usuario[4],\r\n        is_superuser: usuario[6],\r\n        is_staff: usuario[7],\r\n        is_active: usuario[8],\r\n        tipo_usuario: usuario[9],\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que cambia el estado de true o false en el checkbox\r\n  handleChangeCheck = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({ usuarios: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const { form } = this.state; //Constante que contiene el estado del formulario\r\n    //Constante que contiene los datos estaticos de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"id\",\r\n        label: \"Código\",\r\n        options: {\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"username\",\r\n        label: \"Usuario\",\r\n      },\r\n      {\r\n        name: \"first_name\",\r\n        label: \"Nombres\",\r\n      },\r\n      {\r\n        name: \"last_name\",\r\n        label: \"Apellidos\",\r\n      },\r\n      {\r\n        name: \"email\",\r\n        label: \"Email\",\r\n      },\r\n      {\r\n        name: \"last_login\",\r\n        label: \"Ultimo logeo\",\r\n      },\r\n      {\r\n        name: \"is_superuser\",\r\n        label: \"Super usuario\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            if (value === true)\r\n              return (\r\n                <Tooltip title=\"OK\">\r\n                  <Done color=\"primary\" />\r\n                </Tooltip>\r\n              );\r\n            else\r\n              return (\r\n                <Tooltip title=\"Failing\">\r\n                  <Close color=\"error\" />\r\n                </Tooltip>\r\n              );\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: \"is_staff\",\r\n        label: \"Staff\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            if (value === true)\r\n              return (\r\n                <Tooltip title=\"OK\">\r\n                  <Done color=\"primary\" />\r\n                </Tooltip>\r\n              );\r\n            else\r\n              return (\r\n                <Tooltip title=\"Failing\">\r\n                  <Close color=\"error\" />\r\n                </Tooltip>\r\n              );\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: \"is_active\",\r\n        label: \"Activo\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            if (value === true)\r\n              return (\r\n                <Tooltip title=\"OK\">\r\n                  <Done color=\"primary\" />\r\n                </Tooltip>\r\n              );\r\n            else\r\n              return (\r\n                <Tooltip title=\"Failing\">\r\n                  <Close color=\"error\" />\r\n                </Tooltip>\r\n              );\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: \"tipo_usuario\",\r\n        label: \"Tipo de Usuario\",\r\n      },\r\n      {\r\n        name: \"date_joined\",\r\n        label: \"Fecha creación\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n              <>\r\n                {/* Botones para las opciones de editar y eliminar */}\r\n                <Tooltip title=\"Editar\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionUsuario(tableMeta.rowData);\r\n                      this.modalInsertar();\r\n                    }}\r\n                  >\r\n                    <Edit></Edit>\r\n                  </Button>\r\n                </Tooltip>\r\n                <span>\r\n                  <Tooltip title=\"Eliminar\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline-danger\"\r\n                      onClick={() => {\r\n                        this.seleccionUsuario(tableMeta.rowData);\r\n                        this.setState({ modalEliminar: true });\r\n                      }}\r\n                    >\r\n                      <Delete></Delete>\r\n                    </Button>\r\n                  </Tooltip>\r\n                </span>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <div>\r\n              {/* Boton crear */}\r\n              {\r\n                <Button\r\n                  variant=\"success\"\r\n                  onClick={() => {\r\n                    this.setState({ form: null, tipoModal: \"insertar\" });\r\n                    this.modalInsertar();\r\n                  }}\r\n                >\r\n                  Crear\r\n                </Button>\r\n              }\r\n            </div>\r\n            <div>\r\n              <div className=\"pt-3\">\r\n                {/* Invocacion de la tabla, con sus opciones correspondientes */}\r\n                <MUIDataTable\r\n                  title={\"Usuarios\"}\r\n                  data={this.state.usuarios}\r\n                  columns={columns}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Modales para creacion o actualizacion*/}\r\n            <Modal isOpen={this.state.modalInsertar} centered className=\"pt-5\">\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <span>Crear usuario</span>\r\n                ) : (\r\n                  <span>Actualizar usuario</span>\r\n                )}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form.Group>\r\n                  <Form.Label>Usuario</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.username : \"\"}\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <Form.Group>\r\n                    <Form.Label>Contraseña</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      autocomplete=\"off\"\r\n                      value={form ? form.password : \"\"}\r\n                      required={true}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                ) : (\r\n                  <Form.Group>\r\n                    <Form.Label>Id</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      id=\"id\"\r\n                      name=\"id\"\r\n                      readOnly\r\n                      value={form ? form.id : this.state.usuarios.length + 1}\r\n                      required\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                )}\r\n                <Form.Group>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"example@name.com\"\r\n                    pattern=\"([A-z]+)@([A-z]+)[.]([A-z.]+)\"\r\n                    value={form ? form.email : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nombres</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"first_name\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"Juan Antonio\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.first_name : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Apellidos</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Perez Vides\"\r\n                    id=\"last_name\"\r\n                    name=\"last_name\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.last_name : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Row>\r\n                  <Form.Group>\r\n                    <Form.Check\r\n                      id=\"is_superuser\"\r\n                      name=\"is_superuser\"\r\n                      value={form ? form.is_superuser : false}\r\n                      checked={form ? form.is_superuser : false}\r\n                      label=\"Super usuario\"\r\n                      onChange={this.handleChangeCheck}\r\n                      inline\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Check\r\n                      id=\"is_staff\"\r\n                      name=\"is_staff\"\r\n                      value={form ? form.is_staff : false}\r\n                      checked={form ? form.is_staff : false}\r\n                      label=\"Staff\"\r\n                      onChange={this.handleChangeCheck}\r\n                      inline\r\n                    />\r\n                  </Form.Group>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Form.Group>\r\n                      <Form.Check\r\n                        id=\"is_active\"\r\n                        name=\"is_active\"\r\n                        value={form ? form.is_active : false}\r\n                        checked={form ? form.is_active : true}\r\n                        disabled={true}\r\n                        label=\"Activo\"\r\n                        onChange={this.handleChangeCheck}\r\n                        inline\r\n                      />\r\n                    </Form.Group>\r\n                  ) : (\r\n                    <Form.Group>\r\n                      <Form.Check\r\n                        id=\"is_active\"\r\n                        name=\"is_active\"\r\n                        value={form ? form.is_active : false}\r\n                        checked={form ? form.is_active : false}\r\n                        label=\"Activo\"\r\n                        onChange={this.handleChangeCheck}\r\n                        inline\r\n                      />\r\n                    </Form.Group>\r\n                  )}\r\n                </Form.Row>\r\n                <Form.Group>\r\n                  <Form.Label>Tipo de Usuario</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"tipo_usuario\"\r\n                    name=\"tipo_usuario\"\r\n                    required={true}\r\n                    value={form ? form.tipo_usuario : \"\"}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true}>\r\n                      Seleccione..\r\n                    </option>\r\n                    <option key=\"1\" value={1}>\r\n                      Estudiante\r\n                    </option>\r\n                    <option key=\"2\" value={2}>\r\n                      Encargado de facultad\r\n                    </option>\r\n                    <option key=\"3\" value={3}>\r\n                      Encargardo de escuela\r\n                    </option>\r\n                    <option key=\"4\" value={4}>\r\n                      Administrador\r\n                    </option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <ModalFooter>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPut()}\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* Modal para eliminar */}\r\n            <Modal isOpen={this.state.modalEliminar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                <span>Eliminar usuario</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                ¿Esta seguro de eliminar el usuario seleccionado?\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"danger\" onClick={() => this.peticionDelete()}>\r\n                  Si\r\n                </Button>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => this.setState({ modalEliminar: false })}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Usuarios;\r\n","export default __webpack_public_path__ + \"static/media/logoUes.308b8d5e.png\";","import React, { Component } from 'react';\r\n//Aqui importamos nuestra imagen\r\nimport logoUes from './logoUes.png';\r\n\r\nclass LogoUes extends Component {\r\n  render() {\r\n    return (    \r\n        <div className=\"pr-3\">\r\n            <img src={logoUes} width=\"200\" height=\"200\" alt=\"Logo UES\"/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoUes;","export default __webpack_public_path__ + \"static/media/logoProyeccionSocial.f4534b1d.jpg\";","import React, { Component } from 'react';\r\n//Aqui importamos nuestra imagen\r\nimport logoProyeccion from './logoProyeccionSocial.jpg';\r\n\r\nclass LogoProyeccion extends Component {\r\n  render() {\r\n    return (    \r\n        <div className=\"pr-3\">\r\n            <img src={logoProyeccion} width=\"200\" height=\"200\" alt=\"Logo Proyeccion\"/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoProyeccion;","import React, { Component } from \"react\";\r\nimport LogoUes from \"./LogoUes\";\r\nimport LogoProyeccion from \"./LogoProyeccion\";\r\nimport { Row, Col, Card, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nclass InicioInformacion extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"pt-4\">\r\n          <Col align=\"center\">\r\n            <div className=\"container\">\r\n              <div className=\"wrap-center\">\r\n                <div className=\"navbar-brand\">\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={\r\n                      <Tooltip>\r\n                        Clic para ir a la página oficial de la Universidad\r\n                      </Tooltip>\r\n                    }\r\n                  >\r\n                    <a href=\"https://www.ues.edu.sv/\" target=\"_blank\" rel=\"noreferrer\">\r\n                      <LogoUes></LogoUes>\r\n                    </a>\r\n                  </OverlayTrigger>\r\n                </div>\r\n                <div id=\"header_front\">\r\n                  <h1>Universidad de El Salvador</h1>\r\n                  <h4>\"Hacia la libertad por la cultura\"</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col align=\"center\">\r\n            <div className=\"container\">\r\n              <div className=\"wrap-center\">\r\n                <div className=\"navbar-brand\">\r\n                  <a href=\"http://proyeccionsocial.ues.edu.sv/\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <LogoProyeccion></LogoProyeccion>\r\n                  </a>\r\n                </div>\r\n                <div id=\"header_front\">\r\n                  <h1>Secretaria de proyección social</h1>\r\n                  <h4>\"De la mano con la comunidad\"</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pt-5\">\r\n          <Card>\r\n            <Card.Header align=\"center\">\r\n              Sistema informático para el control y aplicación del servicio\r\n              social de los estudiantes de la Universidad de El Salvador\r\n              (SICASS).\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Descripción</Card.Title>\r\n              <Card.Text className=\"align-justify\">\r\n                Sistema informático en la plataforma web, para la\r\n                digitalización, automatización y eficiencia en la realización\r\n                del proceso de registro, solicitud y control del servicio social\r\n                que es realizado por los estudiantes de la Universidad de El\r\n                Salvador, como prerrequisito para su titulación.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InicioInformacion;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, Tooltip, OverlayTrigger, Alert } from \"react-bootstrap\";\r\nimport Botones from \"../BotonesRegistro\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Formik } from \"formik\";\r\n\r\n//Funcion para obtener el nombre del usuario\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/registroUpsEstudiante/\";\r\n\r\n//Clase principal del componente, para el registro de los estudiantes\r\nclass RegistroUps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n      solicitudEstudiante: [],\r\n      ultimoEstado: \"\",\r\n      longitud: 0,\r\n    };\r\n  }\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    let nombre_usuario = leerCookie(\"usuario\"); //Se obtiene el usuario logeado\r\n    axios\r\n      .get(url, {\r\n        params: {\r\n          estudiante: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          this.setState({ ultimoEstado: response.data[i].estado_solicitud });\r\n        }\r\n        this.setState({ solicitudes: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          enlace: \"\",\r\n          observaciones: \"Ninguna\",\r\n          estado: \"En Proceso\",\r\n          estudiante: \"\",\r\n        }}\r\n        onSubmit={async (values, { resetForm }) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          let nombre_usuario = leerCookie(\"usuario\");\r\n          axios\r\n            .post(\"https://juliohdv.pythonanywhere.com/login/registroUps/\", {\r\n              enlace: values.enlace,\r\n              observaciones: values.observaciones,\r\n              estado: values.estado,\r\n              estudiante: nombre_usuario,\r\n            })\r\n            .then((response) => {\r\n              Swal.fire({\r\n                position: \"center\",\r\n                icon: \"success\",\r\n                title: \"Se a guardado con exito\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              resetForm({});\r\n              this.componentDidMount();\r\n            })\r\n            .catch((error) => {\r\n              Swal.fire({\r\n                position: \"center\",\r\n                icon: \"error\",\r\n                title: \"Ocurrio un error en el registro en la UPS\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n            });\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, handleChange }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            {this.state.ultimoEstado === \"En Proceso\" ||\r\n            this.state.ultimoEstado === \"Aprobado\" ? (\r\n              <Alert variant=\"success\">\r\n                <Alert.Heading>Aviso</Alert.Heading>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  <ul>\r\n                    <li>\r\n                      Solo se puede realizar una solicitud de registro a la UPS,\r\n                      por favor espere a la respuesta de dicha solicitud.\r\n                    </li>\r\n                    <li>\r\n                      Puede consultar el estado la solicitud en la opcion de\r\n                      \"Consultar Registro\".\r\n                    </li>\r\n                    <li>\r\n                      Si su solicitud es \"Rechazado\", debe realizar otra\r\n                      solicitud, cuando haya solventado toda las observaciones\r\n                      que se le realizaron.\r\n                    </li>\r\n                    <li>\r\n                      Si su solicitud es \"Aprobado\", se habilitaran las opciones\r\n                      para que pueda solicitar un servicio social.\r\n                    </li>\r\n                  </ul>\r\n                </p>\r\n              </Alert>\r\n            ) : (\r\n              <>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} className=\"pl-5 pr-5\">\r\n                    <Form.Label>\r\n                      Enlace de la carpeta creada en Drive\r\n                    </Form.Label>\r\n                    <OverlayTrigger\r\n                      overlay={\r\n                        <Tooltip>\r\n                          Pegue el enlace obtenido en los pasos anteriores\r\n                        </Tooltip>\r\n                      }\r\n                    >\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        id=\"enlace\"\r\n                        autoComplete=\"off\"\r\n                        pattern=\"(https:[/][/]drive[.]google[.]com[/]drive[/]folders[/])(.+)\"\r\n                        placeholder=\"https://drive.google.com/drive/folders/...\"\r\n                        required={true}\r\n                        value={values.enlace}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </OverlayTrigger>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Botones />\r\n              </>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistroUps;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport Card from \"../Card\";\r\nimport RegistroUps from \"./RegistroUps\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\n//Clase principal del componente\r\nclass EnvioRegistroUps extends Component {\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <>\r\n            <div className=\"pt-4\">\r\n              <Card\r\n                titulo=\"Indicaciones\"\r\n                cuerpo={\r\n                  <>\r\n                    <label>\r\n                      Debe seguir los siguientes pasos para la solicitud de su\r\n                      registro a la Unidad de Proyección Social y así poder\r\n                      realizar su servicio social:\r\n                    </label>\r\n                    <ul>\r\n                      <li>\r\n                        En cualquier navegador ingresar a su cuenta\r\n                        institucional\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/CWKq30Z/Google.png\"\r\n                            alt=\"Google\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        Ingresar a la aplicación de Drive\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/5RWvQwZ/Drive.png\"\r\n                            alt=\"Drive\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        En su unidad, debe crear una carpeta con el nombre\r\n                        \"Proyección social\"\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/jLRgSNq/Carpeta.png\"\r\n                            alt=\"Carpeta\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        Ingresar a la carpeta creada y subir los siguientes\r\n                        documentos en formato .pdf\r\n                        <ul>\r\n                          <li>Record de notas (Impreso del expediente Eel)</li>\r\n                          <li>\r\n                            Comprobante de inscripción (Impreso del expediente\r\n                            Eel)\r\n                          </li>\r\n                          <li>DUI (Escaneado)</li>\r\n                        </ul>\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/6BGCd3x/Archivos.png\"\r\n                            alt=\"Archivos\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        Debe obtener el enlace de la siguiente manera, para\r\n                        pegarlo en el formulario que se presenta a continuación\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/Z2CgLmh/Opcion.png\"\r\n                            alt=\"Opcion\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                        <div align=\"center\" className=\"pt-2\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/br8XJJH/Enlace.png\"\r\n                            alt=\"Enlace\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </>\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"pt-4\">\r\n              <Card\r\n                titulo=\"Registro a Unidad de Proyección social\"\r\n                cuerpo={<RegistroUps />}\r\n              />\r\n            </div>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnvioRegistroUps;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Funcion para obtener el nombre del usuario\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//Constante con las columnas de la tabla\r\nconst columns = [\r\n  {\r\n    name: \"estado_solicitud\",\r\n    label: \"Estado\",\r\n    key: \"estado_solicitud\",\r\n  },\r\n  {\r\n    name: \"observaciones\",\r\n    label: \"Observaciones\",\r\n    key: \"observaciones\",\r\n  },\r\n  {\r\n    name: \"enlace\",\r\n    label: \"Enlace\",\r\n    key: \"enlace\",\r\n    options: {\r\n      customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <a href={value} target=\"_blank\" rel=\"noreferrer\">Google Drive</a>\r\n          );\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de solicitudes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/registroUpsEstudiante/\";\r\n\r\n//Clase principal del componente\r\nclass SolicitudInscripcion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n      solicitudEstudiante: [],\r\n    };\r\n  }\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    let nombre_usuario = leerCookie(\"usuario\"); //Se obtiene el usuario logeado\r\n    axios\r\n      .get(url, {\r\n        params: {\r\n          estudiante: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ solicitudes: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            <MUIDataTable\r\n              title={\"Estado solicitud de inscripción\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudInscripcion;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\n//Funcion para obtener el nombre del usuario\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de propuestas\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/servicioSocialPorCarreraTipo/\";\r\n//Clase principal del componente\r\nclass Propuestas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      servicio: [],\r\n      modalVerificacion: false,\r\n      ultimoEstado: \"\",\r\n      estadoRegistro: \"\",\r\n      form: {\r\n        servicios_social: \"\",\r\n        cantidad_estudiantes: 0,\r\n        observaciones: \"Ninguna\",\r\n        estado_solicitud: \"En Proceso\",\r\n        estudiante: \"\",\r\n      },\r\n      formUpdate: {\r\n        cantidad_horas: 0,\r\n        descripcion: \"\",\r\n        entidad: \"\",\r\n        tipo_servicio_social: \"\",\r\n        cantidad_estudiantes: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionServicio = (servicio) => {\r\n    let carnetEstudiante = leerCookie(\"usuario\");\r\n    this.setState({\r\n      form: {\r\n        servicio_social: servicio[0],\r\n        cantidad_estudiantes: servicio[3],\r\n        observaciones: \"Ninguna\",\r\n        estado_solicitud: \"En Proceso\",\r\n        estudiante: carnetEstudiante,\r\n      },\r\n      formUpdate: {\r\n        tipo_servicio_social: servicio[2],\r\n        descripcion: servicio[3],\r\n        cantidad_estudiantes: servicio[4] - 1,\r\n        cantidad_horas: servicio[5],\r\n        entidad: servicio[6],\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    await axios\r\n      .post(\"https://juliohdv.pythonanywhere.com/login/solicitudServicio/\", {\r\n        servicio_social: this.state.form.servicio_social,\r\n        observaciones: this.state.form.observaciones,\r\n        estado_solicitud: this.state.form.estado_solicitud,\r\n        estudiante: this.state.form.estudiante,\r\n      })\r\n      .then((response) => {\r\n        axios\r\n          .put(\r\n            \"https://juliohdv.pythonanywhere.com/login/servicioSocial/\" +\r\n              this.state.form.servicio_social +\r\n              \"/\",\r\n            this.state.formUpdate\r\n          )\r\n          .then((response) => {\r\n            this.setState({ modalVerificacion: false });\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"success\",\r\n              title: \"Se a guardado con exito\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n            this.componentDidMount();\r\n          })\r\n          .catch((error) => {});\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio en el envio de la solicitud\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let nombre_usuario = leerCookie(\"usuario\"); //Se obtiene el usuario logeado\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/solicitudServicioEstudiante/\", {\r\n        params: {\r\n          estudiante: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          this.setState({ ultimoEstado: response.data[i].estado_solicitud });\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n      axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/registroUpsEstudiante/\", {\r\n        params: {\r\n          estudiante: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          this.setState({ estadoRegistro: response.data[i].estado_solicitud });\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n    axios\r\n      .get(url, {\r\n        params: {\r\n          carnet: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const servicios = []; //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          if (arreglo_inicial[i].cantidad_estudiantes > 0) {\r\n            servicios[i] = {\r\n              codigo_servicio_social: arreglo_inicial[i].codigo_servicio_social,\r\n              cantidad_estudiantes: arreglo_inicial[i].cantidad_estudiantes,\r\n              cantidad_horas: arreglo_inicial[i].cantidad_horas,\r\n              entidad: arreglo_inicial[i].entidad,\r\n              descripcion: arreglo_inicial[i].descripcion,\r\n              propuesta: arreglo_inicial[i].propuesta_detalle,\r\n              solicitud: arreglo_inicial[i].solicitud_detalle,\r\n              codigo_tipo_servicio: arreglo_inicial[i].tipo_servicio_social,\r\n              nombre_servicio:\r\n                arreglo_inicial[i].tipo_servicio_social_detalle\r\n                  .nombre_tipo_servicio_social,\r\n            };\r\n          }\r\n        }\r\n        this.setState({ servicio: servicios }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    //Constante con las columnas de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_servicio_social\",\r\n        label: \"Código\",\r\n        key: \"codigo_servicio_social\",\r\n        options: {\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"nombre_servicio\",\r\n        label: \"Nombre servicio\",\r\n        key: \"nombre_servicio\",\r\n      },\r\n      {\r\n        name: \"codigo_tipo_servicio\",\r\n        label: \"Codigo SS\",\r\n        key: \"codigo_tipo_servicio\",\r\n        options: {\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"descripcion\",\r\n        label: \"Descripción\",\r\n        key: \"descripcion\",\r\n      },\r\n      {\r\n        name: \"cantidad_estudiantes\",\r\n        label: \"Cantidad de cupos\",\r\n        key: \"cantidad_estudiantes\",\r\n      },\r\n      {\r\n        name: \"cantidad_horas\",\r\n        label: \"Horas totales\",\r\n        key: \"cantidad_horas\",\r\n      },\r\n      {\r\n        name: \"entidad\",\r\n        label: \"Nombre entidad\",\r\n        key: \"entidad\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            if (\r\n              (this.state.ultimoEstado === \"Rechazado\" ||\r\n              this.state.ultimoEstado === \"Finalizado\" ||\r\n              this.state.ultimoEstado === \"\") &&\r\n              this.state.estadoRegistro === \"Aprobado\"\r\n            ) {\r\n              return (\r\n                <Tooltip title=\"Solicitar servicio social\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionServicio(tableMeta.rowData);\r\n                      this.setState({ modalVerificacion: true });\r\n                    }}\r\n                  >\r\n                    <PostAddIcon />\r\n                  </Button>\r\n                </Tooltip>\r\n              );\r\n            }\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <>\r\n            <div className=\"pt-5\">\r\n              <MUIDataTable\r\n                title={\"Servicios sociales disponibles\"}\r\n                data={this.state.servicio}\r\n                columns={columns}\r\n                options={options}\r\n              />\r\n            </div>\r\n\r\n            {/* Modal para verificacion */}\r\n            <Modal isOpen={this.state.modalVerificacion} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                <span>Enviar solicitud</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                ¿Esta seguro de solicitar el servicio social seleccionado?\r\n                <ul>\r\n                  <li>\r\n                    Solo es posible enviar una solicitud, hastas obtener una\r\n                    respuesta de esta.\r\n                  </li>\r\n                  <li>\r\n                    Si su solicitud es \"Rechazada\", podra realizar otra\r\n                    solicitud.\r\n                  </li>\r\n                  <li>\r\n                    Si su solicitud es \"Aprobada\", podra realizar otra solicitud\r\n                    si lo amerita, hasta que finalice con el servicio social\r\n                    presente.\r\n                  </li>\r\n                </ul>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"primary\" onClick={() => this.peticionPost()}>\r\n                  Enviar\r\n                </Button>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => this.setState({ modalVerificacion: false })}\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Propuestas;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Funcion para obtener el nombre del usuario\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//Constante con las columnas de la tabla\r\nconst columns = [\r\n  {\r\n    name: \"codigo_solicitud_servicio\",\r\n    label: \"Codigo\",\r\n    key: \"codigo_solicitud_servicio\",\r\n    options: {\r\n      display: false,\r\n    },\r\n  },\r\n  {\r\n    name: \"estado_solicitud\",\r\n    label: \"Estado\",\r\n    key: \"estado_solicitud\",\r\n  },\r\n  {\r\n    name: \"observaciones\",\r\n    label: \"Observaciones\",\r\n    key: \"observaciones\",\r\n  },\r\n  {\r\n    name: \"entidad\",\r\n    label: \"Entidad\",\r\n    key: \"entidad\",\r\n  },\r\n  {\r\n    name: \"tipo_servicio_social\",\r\n    label: \"Tipo servicio\",\r\n    key: \"tipo_servicio_social\",\r\n  },\r\n  {\r\n    name: \"descripcion\",\r\n    label: \"Descripción\",\r\n    key: \"descripcion\",\r\n  },\r\n];\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de proyectos\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/solicitudServicioEstudiante/\";\r\n\r\n//Clase principal del componente\r\nclass SolicitudProyecto extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    let nombre_usuario = leerCookie(\"usuario\"); //Se obtiene el usuario logeado\r\n    axios\r\n      .get(url, {\r\n        params: {\r\n          estudiante: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data;\r\n        const solicitud = [];\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          solicitud[i] = {\r\n            codigo_solicitud_servicio:\r\n              arreglo_inicial[i].codigo_solicitud_servicio,\r\n            estado_solicitud: arreglo_inicial[i].estado_solicitud,\r\n            observaciones: arreglo_inicial[i].observaciones,\r\n            entidad: arreglo_inicial[i].servicio_social_detalle.entidad,\r\n            tipo_servicio_social:\r\n              arreglo_inicial[i].servicio_social_detalle\r\n                .tipo_servicio_social_detalle.nombre_tipo_servicio_social,\r\n            descripcion: arreglo_inicial[i].servicio_social_detalle.descripcion,\r\n          };\r\n        }\r\n        this.setState({ solicitudes: solicitud });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            <MUIDataTable\r\n              title={\"Estado solicitud de proyecto\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudProyecto;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de solicitudes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/solicitudUpsVista\";\r\n//Clase principal del componente\r\nclass SolicitudesEstudiantes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/solicitudUpsVista\")\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = []; //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          //Recorremos el arreglo inicial\r\n          solicitud[i] =\r\n            //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {\r\n              codigo_solicitud_ups: arreglo_inicial[i].codigo_solicitud_ups,\r\n              enlace: arreglo_inicial[i].enlace,\r\n              observaciones:arreglo_inicial[i].observaciones,\r\n              estado_solicitud: arreglo_inicial[i].estado_solicitud,\r\n              estudiante:arreglo_inicial[i].estudiante,\r\n            };\r\n        }\r\n        this.setState({ solicitudes: solicitud }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    //Constante con las columnas de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_solicitud_ups\",\r\n        label: \"Codigo\",\r\n        key: \"codigo_solicitud_ups\",\r\n      },\r\n      {\r\n        name: \"enlace\",\r\n        label: \"Enlace\",\r\n        key: \"enlace\",\r\n      },\r\n      {\r\n        name: \"observaciones\",\r\n        label: \"Observaciones\",\r\n        key: \"observaciones\",\r\n      },\r\n      {\r\n        name: \"estado_solicitud\",\r\n        label: \"Estado de Solcitud\",\r\n        key: \"estado_solicitud\",\r\n      },\r\n      {\r\n        name: \"estudiante\",\r\n        label: \"Estudiante\",\r\n        key: \"estudiante\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            if (tableMeta.rowData[7] === \"Aprobado\") {\r\n              return (\r\n                /* Boton para redirigir hacia la solcitud */\r\n                <Tooltip title=\"Ver solicitud\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-info\"\r\n                    /* onClick={() => {\r\n                    this.seleccionPrivilegio(tableMeta.rowData);\r\n                    this.modalInsertar();\r\n                  }} */\r\n                  >\r\n                    <Visibility />\r\n                  </Button>\r\n                </Tooltip>\r\n              );\r\n            }\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Solicitudes de Registros a UPS\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudesEstudiantes;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de docentes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/docentes/\";\r\n\r\n//Clase principal del componente\r\nclass Docentes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      docentes: [], //Estado que contendra todo lo que digite el usuario\r\n      escuelas: [],\r\n      modalInsertar: false, //Estado que controla el abrir o cerra el modal correspondiente\r\n      modalEliminar: false,\r\n      form: {\r\n        //Estado que contiene los campos del formulario a ingresar\r\n        codigo_docente: \"\",\r\n        nombres_docente: \"\",\r\n        apellidos_docente: \"\",\r\n        correo: \"\",\r\n        sexo: \"\",\r\n        direccion_docente: \"\",\r\n        telefono_docente: \"\",\r\n        escuela:\"\",\r\n        escuela_detalle:\"\",\r\n        facultad_id:\"826\"\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    console.log(this.state.form.password);\r\n    await axios\r\n              .post(url, {\r\n                codigo_docente: this.state.form.codigo_docente,\r\n                nombres_docente: this.state.form.nombres_docente,\r\n                apellidos_docente: this.state.form.apellidos_docente,\r\n                correo: this.state.form.correo,\r\n                sexo: this.state.form.sexo,\r\n                direccion_docente: this.state.form.direccion_docente,\r\n                telefono_docente: this.state.form.telefono_docente,\r\n                escuela: this.state.form.escuela\r\n              })\r\n              .then((response) => {\r\n                this.modalInsertar();\r\n                Swal.fire({\r\n                  position: \"center\",\r\n                  icon: \"success\",\r\n                  title: \"Se a guardado con exito\",\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                });\r\n                this.componentDidMount();\r\n              })\r\n              .catch((error) => {\r\n                Swal.fire({\r\n                  position: \"center\",\r\n                  icon: \"error\",\r\n                  title: \"Ocurrio un error en el registro del docente\",\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                });\r\n              });\r\n            };\r\n      /*});\r\n  }; */\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    axios\r\n      .put(url + this.state.form.codigo_docente + \"/\", this.state.form)\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en actualizar el docente\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para eliminar los datos a la BD mediante la api\r\n  peticionDelete = () => {\r\n    axios\r\n      .delete(url + this.state.form.codigo_docente)\r\n      .then((response) => {\r\n        this.setState({ modalEliminar: false });\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a eliminado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en el eliminar el docente\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionDocente = (docente) => {\r\n    this.setState({\r\n      tipoModal: \"actualizar\",\r\n      form: {\r\n          codigo_docente: docente[0],\r\n          nombres_docente: docente[1],\r\n          apellidos_docente: docente[2],\r\n        correo: docente[3],\r\n        sexo: docente[4],\r\n        direccion_docente: docente[5],\r\n        telefono_docente: docente[6],\r\n        escuela: docente[7],\r\n        escuela_detalle: docente[8],\r\n        facultad_id: docente[9]\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que cambia el estado de true o false en el checkbox\r\n  handleChangeCheck = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.checked,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    let nombre_usuario = leerCookie(\"usuario\")\r\n    axios\r\n      .get('https://juliohdv.pythonanywhere.com/login/docentesPorEncargadoFacultad/',{\r\n        params: {\r\n          user: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data\r\n        const docente = []\r\n        for(var i=0; i<arreglo_inicial.length;i++){\r\n          docente[i]={\r\n            codigo_docente: arreglo_inicial[i].codigo_docente,\r\n            nombres_docente: arreglo_inicial[i].nombres_docente,\r\n            apellidos_docente: arreglo_inicial[i].apellidos_docente,\r\n            correo: arreglo_inicial[i].correo,\r\n            sexo: arreglo_inicial[i].sexo,\r\n            direccion_docente: arreglo_inicial[i].direccion_docente,\r\n            telefono_docente: arreglo_inicial[i].telefono_docente,\r\n            escuela: arreglo_inicial[i].escuela,\r\n            escuela_detalle: arreglo_inicial[i].escuela_detalle.nombre_escuela,\r\n            facultad_id: arreglo_inicial[i].escuela_detalle.carrera_detalle.facultad,    \r\n          }\r\n        }\r\n        this.setState({ docentes: docente });\r\n\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const { form } = this.state; //Constante que contiene el estado del formulario\r\n    //Constante que contiene los datos estaticos de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_docente\", //0\r\n        label: \"Código\",\r\n        options: {\r\n          display: \"excluded\",\r\n        },\r\n      },\r\n      {\r\n        name: \"nombres_docente\",  //1\r\n        label: \"Nombres\",\r\n      },\r\n      {\r\n        name: \"apellidos_docente\", //2\r\n        label: \"Apellidos\",\r\n      },\r\n      {\r\n        name: \"correo\", //3\r\n        label: \"Email\",\r\n      },\r\n      {\r\n        name: \"sexo\", //4\r\n        label: \"Sexo\",\r\n        options: {\r\n          display: \"excluded\",\r\n        },\r\n      },\r\n      {\r\n        name: \"direccion_docente\",  //5\r\n        label: \"Dirección\",\r\n      },\r\n      {\r\n        name: \"telefono_docente\",  //6\r\n        label: \"Teléfono\",\r\n      },\r\n      {\r\n        name: \"escuela_detalle\",  //7\r\n        label: \"Escuela\",\r\n      },\r\n      {\r\n        name: \"escuela\",  //8\r\n        label: \"EscuelaID\",\r\n        options: {\r\n          display: \"excluded\",\r\n        },\r\n      },\r\n      {\r\n        name: \"facultad_id\",  //9\r\n        label: \"FacultadID\",\r\n        options: {\r\n          display: \"excluded\",\r\n        },\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n              <>\r\n                {/* Botones para las opciones de editar y eliminar */}\r\n                <Tooltip title=\"Editar\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionDocente(tableMeta.rowData);\r\n                      axios \r\n                        .get('https://juliohdv.pythonanywhere.com/login/escuelasPorFacultad/',{\r\n                          params:{facultad: this.state.form.facultad_id}\r\n                        })\r\n                        .then((response) =>{\r\n                           this.setState({escuelas: response.data})\r\n                        })\r\n                      this.modalInsertar();\r\n                    }}\r\n                  >\r\n                    <Edit></Edit>\r\n                  </Button>\r\n                </Tooltip>\r\n                <span>\r\n                  <Tooltip title=\"Eliminar\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline-danger\"\r\n                      onClick={() => {\r\n                        this.seleccionDocente(tableMeta.rowData);\r\n                        this.setState({ modalEliminar: true });\r\n                      }}\r\n                    >\r\n                      <Delete></Delete>\r\n                    </Button>\r\n                  </Tooltip>\r\n                </span>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <div>\r\n              {/* Boton crear */}\r\n              {\r\n                <Button\r\n                  variant=\"success\"\r\n                  onClick={() => {\r\n                    axios \r\n                      .get('https://juliohdv.pythonanywhere.com/login/escuelasPorFacultad/',{\r\n                        params:{facultad: this.state.form.facultad_id}\r\n                      })\r\n                      .then((response) =>{\r\n                        this.setState({escuelas: response.data})\r\n                      })\r\n                    this.setState({ form: null, tipoModal: \"insertar\" });\r\n                    this.modalInsertar();\r\n                  }}\r\n                >\r\n                  Registrar Nuevo\r\n                </Button>\r\n              }\r\n            </div>\r\n            <div>\r\n              <div className=\"pt-3\">\r\n                {/* Invocacion de la tabla, con sus opciones correspondientes */}\r\n                <MUIDataTable\r\n                  title={\"Docentes\"}\r\n                  data={this.state.docentes}\r\n                  columns={columns}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Modales para creacion o actualizacion*/}\r\n            <Modal isOpen={this.state.modalInsertar} centered className=\"pt-5\">\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <span>Crear docente</span>\r\n                ) : (\r\n                  <span>Actualizar docente</span>\r\n                )}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n              <Form.Group>\r\n                    <Form.Label>Código</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      id=\"codigo_docente\"\r\n                      name=\"codigo_docente\"\r\n                      readOnly\r\n                      value={form ? form.codigo_docente : this.state.docentes.length + 1}\r\n                      required\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nombres</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"nombres_docente\"\r\n                    name=\"nombres_docente\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.nombres_docente : \"\"}\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label>Apellidos</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      id=\"apellidos_docente\"\r\n                      name=\"apellidos_docente\"\r\n                      autocomplete=\"off\"\r\n                      value={form ? form.apellidos_docente : \"\"}\r\n                      required={true}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    id=\"correo\"\r\n                    name=\"correo\"\r\n                    placeholder=\"example@name.com\"\r\n                    pattern=\"([A-z]+)@([A-z]+)[.]([A-z.]+)\"\r\n                    value={form ? form.correo : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Sexo</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"sexo\"\r\n                    name=\"sexo\"\r\n                    required={true}\r\n                    value={form ? form.sexo : \"\"}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true}>\r\n                      Seleccione..\r\n                    </option>\r\n                    <option key=\"1\" value={\"Masculino\"}>\r\n                      Masculino\r\n                    </option>\r\n                    <option key=\"2\" value={\"Femenino\"}>\r\n                      Femenino\r\n                    </option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Direccion</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Dirección\"\r\n                    id=\"direccion_docente\"\r\n                    name=\"direccion_docente\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.direccion_docente : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Teléfono</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Teléfono\"\r\n                    id=\"telefono_docente\"\r\n                    name=\"telefono_docente\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.telefono_docente : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Escuela</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"escuela\"\r\n                    name=\"escuela\"\r\n                    required={true}\r\n                    value={form ? form.escuela : \"\"}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true}>\r\n                      Seleccione..\r\n                    </option>\r\n                    {this.state.escuelas.map((elemento) =>(\r\n                      <option key={elemento.codigo_escuela} value={elemento.codigo_escuela}>\r\n                        {elemento.nombre_escuela}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <ModalFooter>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPut()}\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* Modal para eliminar */}\r\n            <Modal isOpen={this.state.modalEliminar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                <span>Eliminar docente</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                ¿Esta seguro de eliminar el docente seleccionado?\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"danger\" onClick={() => this.peticionDelete()}>\r\n                  Si\r\n                </Button>\r\n                <Button\r\n                  variant=\"secundary\"\r\n                  onClick={() => this.setState({ modalEliminar: false })}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Docentes;\r\n","import React, { Component } from 'react'\r\nimport Dashboard from '../Dashboard'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { Button, Form, OverlayTrigger} from \"react-bootstrap\"\r\nimport { Modal, ModalBody, ModalFooter } from 'reactstrap'\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport { ModalHeader } from 'reactstrap'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { TextField } from '@material-ui/core'\r\nfunction leerCookie(nombre) {\r\n    let key = nombre + \"=\";\r\n    let cookies = document.cookie.split(\";\");\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      let cookie = cookies[i];\r\n      while (cookie.charAt(0) === \" \") {\r\n        cookie = cookie.substring(1, cookie.length);\r\n      }\r\n      if (cookie.indexOf(key) === 0) {\r\n        return cookie.substring(key.length, cookie.length);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/encargadoEscuela/\"\r\nconst options = {\r\n    download: \"false\",\r\n    print: \"false\",\r\n    responsive: \"simple\",\r\n    selectableRows: false,\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20],\r\n    tableBodyHeight: \"320px\",\r\n    textLabels: {\r\n      body: {\r\n        noMatch: \"No hay registros de encargados\",\r\n        toolTip: \"Sort\",\r\n        columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n      },\r\n      pagination: {\r\n        next: \"Página siguiente\",\r\n        previous: \"Página previa\",\r\n        rowsPerPage: \"Filas por página:\",\r\n        displayRows: \"de\",\r\n      },\r\n      toolbar: {\r\n        search: \"Búsqueda\",\r\n        downloadCsv: \"Download CSV\",\r\n        print: \"Print\",\r\n        viewColumns: \"Ver columnas\",\r\n        filterTable: \"Filtros de tabla\",\r\n      },\r\n      filter: {\r\n        all: \"TODOS\",\r\n        title: \"FILTROS\",\r\n        reset: \"REINICIAR\",\r\n      },\r\n      viewColumns: {\r\n        title: \"Mostrar columnas\",\r\n        titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n      },\r\n      selectedRows: {\r\n        text: \"fila(s) seleccionada\",\r\n        delete: \"Eliminar\",\r\n        deleteAria: \"Eliminar filas seleccionadas\",\r\n      },\r\n    },\r\n  };\r\n\r\nclass AsignarEE extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            listaDocentes: [],\r\n            listaEncargados: [],\r\n            escuelas:[],\r\n            modalInsertar:false,\r\n            modalEliminar:false,\r\n            form: {\r\n                codigo_encargado:\"\",\r\n                estado: \"\",\r\n                docente_encargado:\"\",\r\n                nombre_docente_encargado:\"\",\r\n                escuela: \"\",\r\n                nombre_escuela:\"\",\r\n                user:\"\",\r\n                password:\"\",\r\n                nombre_usuario:\"\",\r\n            },\r\n        }\r\n    }\r\n    peticionPost = async () =>{\r\n        await axios\r\n        .post(\"https://juliohdv.pythonanywhere.com/login/crearUsuario/\", {\r\n          username: this.state.form.user,\r\n          password: this.state.form.password,\r\n          tipo_usuario: 3\r\n        })\r\n        .then((response)=>{\r\n            axios\r\n            .get(\"https://juliohdv.pythonanywhere.com/login/ultimoUsuario/\")\r\n            .then((response) =>{\r\n                axios\r\n                .post(url, {\r\n                    codigo_encargado : this.state.form.codigo_encargado,\r\n                    estado: true,\r\n                    docente_encargado: this.state.form.docente_encargado,\r\n                    escuela: this.state.form.escuela,\r\n                    user: response.data.map((elemento) => elemento.id).toString()\r\n                })\r\n                .then((response) =>{\r\n                    this.modalInsertar();\r\n                    Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"success\",\r\n                        title: \"Se a guardado con exito\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                    })\r\n                    this.componentDidMount();\r\n                })\r\n                .catch((error) =>{\r\n                    Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"error\",\r\n                        title: \"Ocurrio un error en la asignación!\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                      })\r\n                })\r\n            })\r\n        })\r\n    }\r\n    peticionPut = () => {\r\n        axios\r\n          .put(url + this.state.form.codigo_encargado + \"/\", this.state.form)\r\n          .then((response) => {\r\n            this.modalInsertar();\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"success\",\r\n              title: \"Se a actualizado con exito\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n            this.componentDidMount();\r\n          })\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"error\",\r\n              title: \"Ocurrio un error en actualizar el encargado\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n          });\r\n      };\r\n      peticionDelete = () => {\r\n        axios\r\n          .delete(url + this.state.form.codigo_encargado)\r\n          .then((response) => {\r\n            this.setState({ modalEliminar: false });\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"success\",\r\n              title: \"Se a eliminado con exito\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n            this.componentDidMount();\r\n          })\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"error\",\r\n              title: \"Ocurrio un error en el eliminar el docente\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n          });\r\n      };\r\n      seleccionEncargado = (encargado) => {\r\n        this.setState({\r\n          tipoModal: \"actualizar\",\r\n          form: {\r\n              codigo_encargado: encargado[0],\r\n              docente_encargado: encargado[1],\r\n              nombre_docente_encargado: encargado[2],\r\n              escuela: encargado[3],\r\n              nombre_escuela: encargado[4],\r\n              user: encargado[5],\r\n              nombre_usuario:[6],\r\n              estado : encargado[7],\r\n          },\r\n        });\r\n      };\r\n      modalInsertar = () => {\r\n        this.setState({ modalInsertar: !this.state.modalInsertar });\r\n      };\r\n    \r\n      //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n      handleChange = async (e) => {\r\n        e.persist();\r\n        await this.setState({\r\n          form: {\r\n            ...this.state.form,\r\n            [e.target.name]: e.target.value,\r\n          },\r\n        });\r\n      };\r\n    \r\n      //Metodo que cambia el estado de true o false en el checkbox\r\n      handleChangeCheck = async (e) => {\r\n        e.persist();\r\n        await this.setState({\r\n          form: {\r\n            ...this.state.form,\r\n            [e.target.name]: e.target.checked,\r\n          },\r\n        });\r\n      };\r\n    componentDidMount(){\r\n        let nombre_usuario = leerCookie(\"usuario\")\r\n            axios\r\n            .get('https://juliohdv.pythonanywhere.com/login/encargadosEscuelaPorFacultad/',{\r\n            params: {\r\n                user: nombre_usuario,\r\n            },\r\n            })  \r\n            .then((response) => {\r\n                const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n                const encargados = []; //Arreglo donde guardaremos los objetos reescritos\r\n                for (var i = 0; i < arreglo_inicial.length; i++) {\r\n                //Recorremos el arreglo inicial\r\n                encargados[i] =\r\n                    //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n                    {\r\n                    codigo_encargado: arreglo_inicial[i].codigo_encargado,\r\n                    docente_encargado: arreglo_inicial[i].docente_encargado,\r\n                    nombre_docente_encargado: arreglo_inicial[i].docente_detalle.nombres_docente,\r\n                    nombre_usuario:arreglo_inicial[i].usuario_detalle.username,\r\n                    user:arreglo_inicial[i].user,\r\n                    estado_detalle: !arreglo_inicial[i].estado ? \"Sin Asignar\" : \"Asignado\" ,\r\n                    estado: !arreglo_inicial[i].estado,\r\n                    escuela:arreglo_inicial[i].docente_detalle.escuela,\r\n                    escuela_detalle:arreglo_inicial[i].docente_detalle.escuela_detalle.nombre_escuela,\r\n                    };\r\n                }\r\n                this.setState({listaEncargados: encargados})\r\n            })\r\n            .catch((error) =>{\r\n                Swal.fire({\r\n                    position: \"center\",\r\n                    icon: \"error\",\r\n                    title: \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n                })\r\n            })\r\n            axios\r\n            .get(\"https://juliohdv.pythonanywhere.com/login/docentes/\")\r\n            .then((response) => {\r\n                this.setState({listaDocentes: response.data})\r\n            })\r\n            .catch((error) =>{\r\n            })\r\n    }\r\n    render(){\r\n        const {form} = this.state\r\n        const columns = [\r\n            {\r\n                name: \"codigo_encargado\",\r\n                label: \"Código\",\r\n                options: {\r\n                    display: false,\r\n                },\r\n            },\r\n            {\r\n                name: \"docente_encargado\",\r\n                label: \"IDDocente\",\r\n                options: {\r\n                    display: false,\r\n                },\r\n            },\r\n            {\r\n                name: \"nombre_docente_encargado\",\r\n                label: \"Docente\",\r\n            },\r\n            {\r\n                name: \"escuela\",\r\n                label: \"IDEscuela\",\r\n                options: {\r\n                    display: false,\r\n                },\r\n            },\r\n            {\r\n                name: \"escuela_detalle\",\r\n                label: \"Escuela Asignada\",\r\n            },\r\n            {\r\n                name: \"user\",\r\n                label: \"IDUsuario\",\r\n                options: {\r\n                    display: false,\r\n                },\r\n            },\r\n            {\r\n                name: \"nombre_usuario\",\r\n                label: \"Usuario\",\r\n            },\r\n            {\r\n                name: \"estado_detalle\",\r\n                label: \"Estado\",\r\n            },\r\n            {\r\n                name: \"acciones\",\r\n                label: \"Acciones\",\r\n                options: {\r\n                    customBodyRender:  (value, tableMeta, updateValue) =>{\r\n                        return(\r\n                            <>\r\n                                <span>\r\n                                <Tooltip title=\"Eliminar\">\r\n                                    <Button\r\n                                    size=\"sm\"\r\n                                    variant=\"outline-primary\"\r\n                                    onClick={() => {\r\n                                        this.seleccionEncargado(tableMeta.rowData)\r\n                                        this.setState({modalEliminar: true})\r\n                                    }}\r\n                                    >\r\n                                        <Delete></Delete>\r\n                                    </Button>\r\n                                </Tooltip>\r\n                                </span>\r\n                            </>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n        return(\r\n            <Dashboard \r\n                contenedor = {\r\n                    <div className=\"pt-4\">\r\n                        <div>\r\n                            {\r\n                                <Button\r\n                                variant=\"success\"\r\n                                onClick={()=>{\r\n                                    this.setState({form: null, tipoModal:\"insertar\"})\r\n                                    this.modalInsertar();\r\n                                    axios \r\n                                        .get('https://juliohdv.pythonanywhere.com/login/escuelasPorEncargadoFacultad/',{\r\n                                        params:{user: leerCookie('usuario')}\r\n                                        })\r\n                                        .then((response) =>{\r\n                                        this.setState({escuelas: response.data})\r\n                                        })\r\n                                }}>\r\n                                    Asignar Nuevo\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"pt-3\">\r\n                                    <MUIDataTable\r\n                                    title={\"Encargados de Escuelas\"}\r\n                                    data = {this.state.listaEncargados}\r\n                                    columns={columns}\r\n                                    options={options}\r\n                                    /> \r\n                                    \r\n                            </div>\r\n                        </div>\r\n                        <Modal isOpen={this.state.modalInsertar} centered className=\"pt-5\">\r\n                            <ModalHeader style={{display:\"block\"}}>\r\n                                {this.state.tipoModal === \"insertar\" ? (<span>Asignar nuevo encargado</span>) : (<span>Actualizar encargado</span>)}\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <Form.Group>\r\n                                    <Form.Label>Código</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        id=\"codigo_encargado\"\r\n                                        name=\"codigo_encargado\"\r\n                                        readOnly\r\n                                        value={form ? form.codigo_encargado : this.state.listaEncargados.length+1}\r\n                                        required\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>¿Asignado? </Form.Label>\r\n                                    <Form.Check\r\n                                        id=\"estado\"\r\n                                        name=\"estado\"\r\n                                        value={form ? form.estado : false}\r\n                                        checked={form ? form.estado : false}\r\n                                        onChange={this.handleChangeCheck}\r\n                                        inline\r\n                                        />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Docente</Form.Label>\r\n                                    <Form.Control\r\n                                    as=\"select\"\r\n                                    id=\"docente_encargado\"\r\n                                    name=\"docente_encargado\"\r\n                                    required={true}\r\n                                    value={form ? form.docente_encargado : \"\"}\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                    <option value=\"\" disabled={true}>\r\n                                    Seleccione..\r\n                                    </option>\r\n                                    {this.state.listaDocentes.map((elemento) =>(\r\n                                    <option key={elemento.codigo_docente} value={elemento.codigo_docente}>\r\n                                        {elemento.nombres_docente + \" \" + elemento.apellidos_docente}\r\n                                    </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                <Form.Label>Escuela</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    id=\"escuela\"\r\n                                    name=\"escuela\"\r\n                                    required={true}\r\n                                    value={form ? form.escuela : \"\"}\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                    <option value=\"\" disabled={true}>\r\n                                    Seleccione..\r\n                                    </option>\r\n                                    {this.state.escuelas.map((elemento) =>(\r\n                                    <option key={elemento.codigo_escuela} value={elemento.codigo_escuela}>\r\n                                        {elemento.nombre_escuela}\r\n                                    </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                <Form.Label>Usuario</Form.Label>\r\n                                <Form.Control\r\n                                        type=\"text\"\r\n                                        id=\"user\"\r\n                                        name=\"user\"\r\n                                        required\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Label>Contraseña</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"**********\"\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        autoComplete=\"off\"\r\n                                        required={true}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <ModalFooter>\r\n                                    {this.state.tipoModal === \"insertar\" ? (\r\n                                        <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={() => this.peticionPost()}\r\n                                        >\r\n                                        Guardar\r\n                                      </Button>\r\n                                    ):(\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={() => this.peticionPut()}\r\n                                        >\r\n                                        Actualizar\r\n                                    </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"secondary\"\r\n                                        onClick={() => this.modalInsertar()}\r\n                                        >\r\n                                        Cancelar\r\n                                    </Button>\r\n                                </ModalFooter>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                        <Modal isOpen={this.state.modalEliminar} centered>\r\n                            <ModalHeader style={{ display: \"block\" }}>\r\n                                <span>Eliminar docente</span>\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                ¿Esta seguro de eliminar el encargado seleccionado?\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button variant=\"danger\" onClick={() => this.peticionDelete()}>\r\n                                Si\r\n                                </Button>\r\n                                <Button\r\n                                variant=\"secundary\"\r\n                                onClick={() => this.setState({ modalEliminar: false })}\r\n                                >\r\n                                No\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default AsignarEE\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"../Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Button, Form, Table, Row, Col, Alert } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\n//Funcion para obtener el nombre del usuario\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"290px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de actividades\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/actividades/\";\r\n\r\n//Clase principal del componente\r\nclass RegistrarActividad extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      actividades: [],\r\n      tipo_servicio_social: \"\",\r\n      entidad: \"\",\r\n      cantidad_horas: \"\",\r\n      estado_solicitud: \"\",\r\n      modalInsertar: false,\r\n      modalEliminar: false,\r\n      solicitud_servicio: \"\",\r\n      form: {\r\n        tipoModal: \"\",\r\n        codigo_actividad: \"\",\r\n        fecha: \"\",\r\n        descripcion: \"\",\r\n        encargado: \"\",\r\n        total_horas: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    try {\r\n      if (\r\n        this.state.form.fecha.length > 0 &&\r\n        this.state.form.descripcion.length > 0 &&\r\n        this.state.form.encargado.length > 0 &&\r\n        this.state.form.total_horas.length > 0\r\n      ) {\r\n        await axios\r\n          .post(url, {\r\n            fecha: this.state.form.fecha,\r\n            descripcion: this.state.form.descripcion,\r\n            encargado: this.state.form.encargado,\r\n            total_horas: this.state.form.total_horas,\r\n            solicitud_servicio: this.state.solicitud_servicio,\r\n          })\r\n          .then((response) => {\r\n            this.modalInsertar();\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"success\",\r\n              title: \"Se a guardado con exito\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n            this.componentDidMount();\r\n          })\r\n          .catch((error) => {\r\n            Swal.fire({\r\n              position: \"center\",\r\n              icon: \"error\",\r\n              title: \"Ocurrio un error en el registro de la actividad\",\r\n              showConfirmButton: false,\r\n              timer: 2500,\r\n            });\r\n          });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: \"Debe ingresar todos los campos\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    axios\r\n      .put(url + this.state.form.codigo_actividad + \"/\", {\r\n        fecha: this.state.form.fecha,\r\n        descripcion: this.state.form.descripcion,\r\n        encargado: this.state.form.encargado,\r\n        total_horas: this.state.form.total_horas,\r\n        solicitud_servicio: this.state.solicitud_servicio,\r\n      })\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en actualizar el usuario\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionActividad = (actividad) => {\r\n    this.setState({\r\n      tipoModal: \"actualizar\",\r\n      form: {\r\n        codigo_actividad: actividad[0],\r\n        fecha: actividad[1],\r\n        descripcion: actividad[2],\r\n        encargado: actividad[3],\r\n        total_horas: actividad[5],\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo para calcular el total de horas del servicio\r\n  calculoHoras = () => {\r\n    var totalHoras = 0;\r\n    for (var i = 0; i < this.state.actividades.length; i++) {\r\n      totalHoras += this.state.actividades[i].total_horas;\r\n    }\r\n    return totalHoras;\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    let nombre_usuario = leerCookie(\"usuario\"); //Se obtiene el usuario logeado\r\n    axios\r\n      .get(\"https://juliohdv.pythonanywhere.com/login/solicitudServicioEstudiante/\", {\r\n        params: {\r\n          estudiante: nombre_usuario,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data;\r\n        var posicion = response.data.length - 1;\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          this.setState({\r\n            estado_solicitud: response.data[i].estado_solicitud,\r\n          });\r\n          if (this.state.estado_solicitud === \"Aprobado\") {\r\n            this.setState({\r\n              solicitud_servicio:\r\n                arreglo_inicial[posicion].codigo_solicitud_servicio,\r\n              entidad:\r\n                arreglo_inicial[posicion].servicio_social_detalle.entidad,\r\n              cantidad_horas:\r\n                arreglo_inicial[posicion].servicio_social_detalle\r\n                  .cantidad_horas,\r\n              tipo_servicio_social:\r\n                arreglo_inicial[posicion].servicio_social_detalle\r\n                  .tipo_servicio_social_detalle.nombre_tipo_servicio_social,\r\n            });\r\n          }\r\n        }\r\n        axios\r\n          .get(\"https://juliohdv.pythonanywhere.com/login/actividadesEstudiante/\", {\r\n            params: {\r\n              servicio: this.state.solicitud_servicio,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.setState({ actividades: response.data });\r\n          })\r\n          .catch((error) => {});\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  render() {\r\n    const { form } = this.state; //Constante que contiene el estado del formulario\r\n    //Constante que contiene los datos estaticos de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_actividad\",\r\n        label: \"Codigo\",\r\n        options: {\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        name: \"fecha\",\r\n        label: \"Fecha\",\r\n      },\r\n      {\r\n        name: \"descripcion\",\r\n        label: \"Actividad realizada\",\r\n      },\r\n      {\r\n        name: \"encargado\",\r\n        label: \"Persona que certifica\",\r\n      },\r\n      {\r\n        name: \"firma\",\r\n        label: \"Firma de la persona que certifica\",\r\n      },\r\n      {\r\n        name: \"total_horas\",\r\n        label: \"Total de horas invertidas\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n              <>\r\n                <Tooltip title=\"Editar\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionActividad(tableMeta.rowData);\r\n                      this.modalInsertar();\r\n                    }}\r\n                  >\r\n                    <Edit></Edit>\r\n                  </Button>\r\n                </Tooltip>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <div>\r\n              {this.state.estado_solicitud === \"Aprobado\" ? (\r\n                <>\r\n                  <Table striped bordered hover responsive>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Tipo servicio</th>\r\n                        <th>Entidad</th>\r\n                        <th>Cantidad de horas</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>{this.state.tipo_servicio_social}</td>\r\n                        <td>{this.state.entidad}</td>\r\n                        <td>{this.state.cantidad_horas}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                  <div>\r\n                    <Row>\r\n                      <Col sm={2}>\r\n                        {this.state.cantidad_horas > this.calculoHoras() ? (\r\n                          <Button\r\n                            variant=\"success\"\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                form: null,\r\n                                tipoModal: \"insertar\",\r\n                              });\r\n                              this.modalInsertar();\r\n                            }}\r\n                          >\r\n                            Registrar\r\n                          </Button>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Col>\r\n                      <Col sm={8}>\r\n                        <Form.Group as={Row}>\r\n                          <Form.Label column className=\"text-right\" sm={6}>\r\n                            Total de horas invertidas\r\n                          </Form.Label>\r\n                          <Col>\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              readOnly={true}\r\n                              value={this.calculoHoras()}\r\n                            ></Form.Control>\r\n                          </Col>\r\n                          <Col></Col>\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col className=\"text-right\" sm={2}>\r\n                        {/* <Button\r\n                          variant=\"secondary\"\r\n                           onClick={() => {\r\n                      this.setState({ form: null, tipoModal: \"insertar\" });\r\n                      this.modalInsertar();\r\n                    }} \r\n                        >\r\n                          Imprimir\r\n                        </Button>  */}\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <div>\r\n                    <div>\r\n                      <MUIDataTable\r\n                        title={\"Actividades\"}\r\n                        data={this.state.actividades}\r\n                        columns={columns}\r\n                        options={options}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <Alert variant=\"info\">\r\n                  <Alert.Heading className=\"text-center\">\r\n                    Aviso!!!\r\n                  </Alert.Heading>\r\n                  <hr />\r\n                  <p className=\"mb-0\">\r\n                    Por el momento no esta asignado en ningun proyecto, solicite\r\n                    un servicio social y si ya lo solicito, espere su respectiva\r\n                    aprobacion\r\n                  </p>\r\n                </Alert>\r\n              )}\r\n            </div>\r\n\r\n            {/* Modales para creacion o actualizacion*/}\r\n            <Modal isOpen={this.state.modalInsertar} centered className=\"pt-5\">\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <span>Registar actividad</span>\r\n                ) : (\r\n                  <span>Actualizar actividad</span>\r\n                )}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form.Group>\r\n                  <Form.Label>Fecha</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    id=\"fecha\"\r\n                    name=\"fecha\"\r\n                    value={form ? form.fecha : \"\"}\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Actividad</Form.Label>\r\n                  <Form.Control\r\n                    type=\"actividad\"\r\n                    id=\"descripcion\"\r\n                    name=\"descripcion\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.descripcion : \"\"}\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Persona que certifica</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"encargado\"\r\n                    name=\"encargado\"\r\n                    value={form ? form.encargado : \"\"}\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Total de horas invertidas</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"total_horas\"\r\n                    name=\"total_horas\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.total_horas : \"\"}\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <ModalFooter>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPut()}\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrarActividad;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\n\r\n//Funcion para obtener el nombre del usuario\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de solicitudes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/solicitudEstudiateASSPorEncargadoEscuela/\";\r\n\r\n//Clase principal del componente\r\nclass SolicitudRegistroSS extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n      solicitudSS: [],\r\n      form: {\r\n        estudiante: \"\",\r\n        estado_solicitud: \"\",\r\n        observaciones: \"\",\r\n        cantidad_horas: \"\",\r\n        entidad: \"\",\r\n        nombre_tipo_servicio_social: \"\",\r\n        codigo_solicitud_servicio: \"\",\r\n        tipo_servicio_social: \"\",\r\n        servicio_social: \"\",\r\n      },\r\n      modalConfirmar: false,\r\n    };\r\n\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    console.log(this.state.form);\r\n    axios\r\n      .put(\"https://juliohdv.pythonanywhere.com/login/solicitudServicio/\" + this.state.form.codigo_solicitud_servicio + \"/\", this.state.form)\r\n      .then((response) => {\r\n        this.setState({ modalConfirmar: false });\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se ha guardado con éxito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrió un error en actualizar\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo que va guardado el estado_solicitud de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionSolicitud = (solicitudes) => {\r\n    this.setState({\r\n      form: {\r\n        codigo_solicitud_servicio: solicitudes[0],\r\n        estudiante: solicitudes[1],\r\n        estado_solicitud: solicitudes[2],\r\n        observaciones: solicitudes[3],\r\n        cantidad_horas: solicitudes[4],\r\n        entidad: solicitudes[5],\r\n        servicio_social: solicitudes[6],\r\n        servicio_social_descripcion: solicitudes[7],\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    let nombre_usuario = leerCookie(\"usuario\"); //Se obtiene el usuario logeado\r\n    console.log(nombre_usuario);\r\n    axios\r\n      .get(url,{\r\n        params:{user:nombre_usuario}\r\n      })\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = []; //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          //Recorremos el arreglo inicial\r\n          solicitud[i] =\r\n            //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {\r\n              codigo_solicitud_servicio: arreglo_inicial[i].codigo_solicitud_servicio,\r\n              servicio_social_cantidad_estudiantes: arreglo_inicial[i].servicio_social_detalle.cantidad_estudiantes,\r\n              servicio_social_cantidad_horas: arreglo_inicial[i].servicio_social_detalle.cantidad_horas,\r\n              servicio_social_descripcion: arreglo_inicial[i].servicio_social_detalle.descripcion,\r\n              servicio_social_entidad: arreglo_inicial[i].servicio_social_detalle.entidad,\r\n              observaciones:arreglo_inicial[i].observaciones,\r\n              estado_solicitud: arreglo_inicial[i].estado_solicitud,\r\n              servicio_social: arreglo_inicial[i].servicio_social,\r\n              estudiante:arreglo_inicial[i].estudiante,\r\n            };\r\n        }\r\n        this.setState({ solicitudes: solicitud });\r\n        \r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la Base de Datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n\r\n    const { form } = this.state;\r\n\r\n    //Constante con las columnas de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_solicitud_servicio\",\r\n        label: \"Código\",\r\n        key: \"codigo_solicitud_servicio\",\r\n        options: {\r\n          display: false,\r\n        }\r\n      },\r\n      {\r\n        name: \"estudiante\",\r\n        label: \"Estudiante\",\r\n        key: \"estudiante\",\r\n      },\r\n      {\r\n        name: \"estado_solicitud\",\r\n        label: \"Estado\",\r\n        key: \"estado_solicitud\",\r\n      },\r\n      {\r\n        name: \"observaciones\",\r\n        label: \"Observaciones\",\r\n        key: \"observaciones\",\r\n\r\n      },\r\n      {\r\n        name: \"servicio_social_cantidad_horas\",\r\n        label: \"Cantidad de Horas\",\r\n        key: \"servicio_social_cantidad_horas\",\r\n\r\n      },\r\n      {\r\n        name: \"servicio_social_entidad\",\r\n        label: \"Entidad\",\r\n        key: \"servicio_social_entidad\",\r\n\r\n      },\r\n      {\r\n        name: \"servicio_social\",\r\n        label: \"Servicio Social\",\r\n        key: \"servicio_social\",\r\n        options: {\r\n          display: false,\r\n      },\r\n\r\n      },\r\n      {\r\n        name: \"servicio_social_descripcion\",\r\n        label: \"Descripción\",\r\n        key: \"servicio_social_descripcion\",\r\n\r\n      },\r\n      {\r\n        name: \"tipo_servicio_social\",\r\n        label: \"Tipo Servicio Social\",\r\n        key: \"tipo_servicio_social\",\r\n        options: {\r\n          display: false,\r\n        }\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciones\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n\r\n            return (\r\n              /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n              <Tooltip title=\"Ver proyecto\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"outline-info\"\r\n                  onClick={() => {\r\n                    this.seleccionSolicitud(tableMeta.rowData);\r\n                    this.setState({ modalConfirmar: true });\r\n                  }}\r\n                >\r\n                  <Visibility />\r\n                </Button>\r\n              </Tooltip>\r\n            );\r\n            //}\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      /* Filtrar por el usuario, los respectivos estado_solicitud de solicitud */\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Registro a Servicio Social\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n\r\n            {/* Modal para confirmar */}\r\n            <Modal isOpen={this.state.modalConfirmar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                <span>Revisión Solicitud</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    Observaciones\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"observaciones\"\r\n                    name=\"observaciones\"\r\n                    required={true}\r\n                    autoComplete=\"off\"\r\n                    value={form ? form.observaciones : \"\"}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"primary\" onClick={() => {\r\n                  this.state.form.estado_solicitud = \"Aprobado\"\r\n\r\n                  this.peticionPut();\r\n                }} >\r\n                  Aprobar\r\n                </Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => {\r\n                    this.state.form.estado_solicitud = \"Rechazado\"\r\n                    this.peticionPut();\r\n                  }}>\r\n                  Rechazar\r\n                </Button>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => this.setState({ modalConfirmar: false })}\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudRegistroSS;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\n\r\n//Funcion para obtener el nombre del usuario\r\nfunction leerCookie(nombre) {\r\n    let key = nombre + \"=\";\r\n    let cookies = document.cookie.split(\";\");\r\n    for (let i = 0; i < cookies.length; i++) {\r\n        let cookie = cookies[i];\r\n        while (cookie.charAt(0) === \" \") {\r\n            cookie = cookie.substring(1, cookie.length);\r\n        }\r\n        if (cookie.indexOf(key) === 0) {\r\n            return cookie.substring(key.length, cookie.length);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n    download: \"false\",\r\n    print: \"false\",\r\n    responsive: \"simple\",\r\n    selectableRows: false,\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20],\r\n    tableBodyHeight: \"320px\",\r\n    textLabels: {\r\n        body: {\r\n            noMatch: \"No hay registros de solicitudes\",\r\n            toolTip: \"Sort\",\r\n            columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n        },\r\n        pagination: {\r\n            next: \"Página siguiente\",\r\n            previous: \"Página previa\",\r\n            rowsPerPage: \"Filas por página:\",\r\n            displayRows: \"de\",\r\n        },\r\n        toolbar: {\r\n            search: \"Búsqueda\",\r\n            downloadCsv: \"Download CSV\",\r\n            print: \"Print\",\r\n            viewColumns: \"Ver columnas\",\r\n            filterTable: \"Filtros de tabla\",\r\n        },\r\n        filter: {\r\n            all: \"TODOS\",\r\n            title: \"FILTROS\",\r\n            reset: \"REINICIAR\",\r\n        },\r\n        viewColumns: {\r\n            title: \"Mostrar columnas\",\r\n            titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n        },\r\n        selectedRows: {\r\n            text: \"fila(s) seleccionada\",\r\n            delete: \"Eliminar\",\r\n            deleteAria: \"Eliminar filas seleccionadas\",\r\n        },\r\n    },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/solicitudUpsPorEncargadoDeEscuela/\";\r\n\r\n//Clase principal del componente\r\nclass SolicitudInscripcionUPS extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            solicitudes: [],\r\n            solicitudUPS: [],\r\n            form: {\r\n                codigo_solicitud_ups: \"\",\r\n                observaciones: \"\",\r\n                enlace: \"\",\r\n                estudiante: \"\",\r\n                estado_solicitud: \"\",\r\n            },\r\n            modalConfirmar: false,\r\n        };\r\n\r\n    }\r\n\r\n    //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n    peticionPut = () => {\r\n        console.log(this.state.form);\r\n        axios\r\n            .put(url + this.state.form.codigo_solicitud_ups + \"/\", this.state.form)\r\n            .then((response) => {\r\n                this.setState({ modalConfirmar: false });\r\n                Swal.fire({\r\n                    position: \"center\",\r\n                    icon: \"success\",\r\n                    title: \"Se ha guardado con éxito\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500,\r\n                });\r\n                this.componentDidMount();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                Swal.fire({\r\n                    position: \"center\",\r\n                    icon: \"error\",\r\n                    title: \"Ocurrio un error en actualizar\",\r\n                    showConfirmButton: false,\r\n                    timer: 2500,\r\n                });\r\n            });\r\n    };\r\n\r\n    //Metodo que va guardado el estado_solicitud de lo que digita el usuario en el formulario\r\n    handleChange = async (e) => {\r\n        e.persist();\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value,\r\n            },\r\n        });\r\n    };\r\n    //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n    seleccionSolicitud = (solicitudes) => {\r\n        this.setState({\r\n            form: {\r\n                codigo_solicitud_ups: solicitudes[0],\r\n                observaciones: solicitudes[1],\r\n                enlace: solicitudes[2],\r\n                estudiante: solicitudes[3],\r\n                estado_solicitud: solicitudes[4],\r\n            },\r\n        });\r\n    };\r\n\r\n    //Metodo que hace la peticion de consulta a la BD mediante api\r\n    componentDidMount() {\r\n        let nombre_usuario = leerCookie(\"usuario\"); //Se obtiene el usuario logeado\r\n        console.log(nombre_usuario);\r\n        axios\r\n            .get(url,{\r\n                params :{user:nombre_usuario}\r\n            })\r\n            .then((response) => {\r\n                this.setState({ solicitudes: response.data });\r\n            })\r\n            .catch((error) => {\r\n                Swal.fire({\r\n                    position: \"center\",\r\n                    icon: \"error\",\r\n                    title:\r\n                        \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n                });\r\n            });\r\n    }\r\n    render() {\r\n\r\n        const { form } = this.state;\r\n\r\n        //Constante con las columnas de la tabla\r\n        const columns = [\r\n            {\r\n                name: \"codigo_solicitud_ups\",\r\n                label: \"Código\",\r\n                key: \"codigo_solicitud_ups\",\r\n                options: {\r\n                    display: false,\r\n                }\r\n            },\r\n            {\r\n                name: \"observaciones\",\r\n                label: \"Observaciones\",\r\n                key: \"observaciones\",\r\n            },\r\n            {\r\n                name: \"enlace\",\r\n                label: \"Enlace\",\r\n                key: \"enlace\",\r\n                options: {\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                        return (\r\n                            <a href={value} target=\"_blank\" rel=\"noreferrer\">Google Drive</a>\r\n                        );\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                name: \"estudiante\",\r\n                label: \"Estudiante\",\r\n                key: \"estudiante\",\r\n            },\r\n            {\r\n                name: \"estado_solicitud\",\r\n                label: \"Estado\",\r\n                key: \"estado_solicitud\",\r\n\r\n            },\r\n            {\r\n                name: \"acciones\",\r\n                label: \"Acciones\",\r\n                options: {\r\n                    customBodyRender: (value, tableMeta, updateValue) => {\r\n                        \r\n                        return (\r\n                            /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n                            <Tooltip title=\"Ver proyecto\">\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    variant=\"outline-info\"\r\n                                    onClick={() => {\r\n                                        this.seleccionSolicitud(tableMeta.rowData);\r\n                                        this.setState({ modalConfirmar: true });\r\n                                    }}\r\n                                >\r\n                                    <Visibility />\r\n                                </Button>\r\n                            </Tooltip>\r\n                        );\r\n                        //}\r\n                    },\r\n                },\r\n            },\r\n        ];\r\n        return (\r\n            /* Filtrar por el usuario, los respectivos estado_solicitud de solicitud */\r\n            <Dashboard\r\n                contenedor={\r\n                    <div className=\"pt-5\">\r\n                        {/* Se invoca la tabla, con los datos correspondientes */}\r\n                        <MUIDataTable\r\n                            title={\"Registro a la Unidad de Proyección Social\"}\r\n                            data={this.state.solicitudes}\r\n                            columns={columns}\r\n                            options={options}\r\n                        />\r\n\r\n                        {/* Modal para confirmar */}\r\n                        <Modal isOpen={this.state.modalConfirmar} centered>\r\n                            <ModalHeader style={{ display: \"block\" }}>\r\n                                <span>Revisión Solicitud</span>\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <Form.Group>\r\n                                    <Form.Label>\r\n                                        Observaciones\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        id=\"observaciones\"\r\n                                        name=\"observaciones\"\r\n                                        required={true}\r\n                                        autoComplete=\"off\"\r\n                                        value={form ? form.observaciones : \"\"}\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    //this.setState({estado_solicitud:\"Aprobado\"});\r\n                                    this.state.form.estado_solicitud = \"Aprobado\"\r\n\r\n                                    this.peticionPut();\r\n                                }} >\r\n                                    Aprobar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"danger\"\r\n                                    onClick={() => {\r\n                                        this.state.form.estado_solicitud = \"Rechazado\"\r\n                                        this.peticionPut();\r\n                                    }}>\r\n                                    Rechazar\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    onClick={() => this.setState({ modalConfirmar: false })}\r\n                                >\r\n                                    Cancelar\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SolicitudInscripcionUPS;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\nfunction leerCookie(nombre) {\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\");\r\n  for (let i = 0; i < cookies.length; i++) {\r\n    let cookie = cookies[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1, cookie.length);\r\n    }\r\n    if (cookie.indexOf(key) === 0) {\r\n      return cookie.substring(key.length, cookie.length);\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  tableBodyHeight: \"320px\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de privilegios\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/servicioSocial/\";\r\n\r\n//Clase principal del componente\r\nclass GestionServicioSocial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      servicios: [], //Estdo que contendra todo lo que digite el usuario\r\n      modalInsertar: false, //Estado que controla el abrir o cerra el modal correspondiente\r\n      modalEliminar: false,\r\n      tipoServicio: [],\r\n      form: {\r\n        //Estado que contiene los campos del formulario a ingresar\r\n        codigo_servicio_social: \"\",\r\n        entidad: \"\",\r\n        descripcion: \"\",\r\n        cantidad_horas: \"\",\r\n        cantidad_estudiantes: \"\",\r\n        tipo_servicio_social: \"\",\r\n        tipoModal: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    //delete this.state.form.id;\r\n    await axios\r\n      .post(url, {\r\n        entidad: this.state.form.entidad,\r\n        descripcion: this.state.form.descripcion,\r\n        cantidad_horas: this.state.form.cantidad_horas,\r\n        cantidad_estudiantes: this.state.form.cantidad_estudiantes,\r\n        tipo_servicio_social: this.state.form.tipo_servicio_social,\r\n      })\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en el registro del servicio social\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    console.log(this.state.codigo_servicio_social);\r\n    axios.put(url + this.state.form.codigo_servicio_social + \"/\", this.state.form)\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para eliminar los datos a la BD mediante la api\r\n  peticionDelete = () => {\r\n    axios.delete(url + this.state.form.codigo_servicio_social).then((response) => {\r\n      this.setState({ modalEliminar: false });\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Se a eliminado con exito\",\r\n        showConfirmButton: false,\r\n        timer: 2500,\r\n      });\r\n      this.componentDidMount();\r\n    })\r\n      .catch((error) => {\r\n\r\n      });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionServicio = (servicio) => {\r\n    this.setState({\r\n      tipoModal: \"actualizar\",\r\n      form: {\r\n        codigo_servicio_social: servicio[0],\r\n        entidad: servicio[1],\r\n        descripcion: servicio[2],\r\n        cantidad_horas: servicio[3],\r\n        cantidad_estudiantes: servicio[4],\r\n        tipo_servicio_social: servicio[5],/* las pisiciones se deben cambiar con base en BD */\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({ servicios: response.data });\r\n      })\r\n      .catch((error) => {\r\n\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { form } = this.state; //Constante que contiene el estado del formulario\r\n    //Constante que contiene los datos estaticos de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"codigo_servicio_social\",\r\n        label: \"Código\",\r\n      },\r\n      {\r\n        name: \"entidad\",\r\n        label: \"Nombre\",\r\n      },\r\n      {\r\n        name: \"descripcion\",\r\n        label: \"Descripción \",\r\n      },\r\n      {\r\n        name: \"cantidad_horas\",\r\n        label: \"Horas\",\r\n      },\r\n      {\r\n\r\n        name: \"cantidad_estudiantes\",\r\n        label: \"Cantidad de estudiantes\",\r\n      },\r\n      {\r\n        name: \"tipo_servicio_social\",\r\n        label: \"Tipo de Servicio\",\r\n\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n              <>\r\n                {/* Botones para editar y eliminar */}\r\n                <Tooltip title=\"Editar\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionServicio(tableMeta.rowData);\r\n                      this.modalInsertar();\r\n                      axios\r\n                          .get(\"https://juliohdv.pythonanywhere.com/login/tipoServicioFacultad/\",{\r\n                            params:{user:leerCookie(\"usuario\")}\r\n                          })\r\n                          .then((response) => {\r\n                            console.log(response.data)\r\n                            this.setState({ tipoServicio: response.data })\r\n                          })\r\n                          .catch((error) => { })\r\n                    }}\r\n                  >\r\n                    <Edit></Edit>\r\n                  </Button>\r\n                </Tooltip>\r\n                <span className=\"pl-2\">\r\n                  <Tooltip title=\"Eliminar\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline-danger\"\r\n                      onClick={() => {\r\n                        this.seleccionServicio(tableMeta.rowData);\r\n                        this.setState({ modalEliminar: true });\r\n                      }}\r\n                    >\r\n                      <Delete></Delete>\r\n                    </Button>\r\n                  </Tooltip>\r\n                </span>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <div>\r\n              {/* Boton para crear */}\r\n              <Button\r\n                variant=\"success\"\r\n                onClick={() => {\r\n                  this.setState({ form: null, tipoModal: \"insertar\" });\r\n                  this.modalInsertar();\r\n                  axios\r\n                      .get(\"https://juliohdv.pythonanywhere.com/login/tipoServicioFacultad/\",{\r\n                        params:{user:leerCookie(\"usuario\")}\r\n                      })\r\n                      .then((response) => {\r\n                        console.log(response.data)\r\n                        this.setState({ tipoServicio: response.data })\r\n                      })\r\n                      .catch((error) => { })\r\n                }}\r\n              >\r\n                Crear\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <div className=\"pt-3\">\r\n                {/* Invocacion de la tabla, con sus opciones */}\r\n                <MUIDataTable\r\n                  title={\"Gestion de servicios\"}\r\n                  data={this.state.servicios}\r\n                  columns={columns}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Modal para actualizar o crear */}\r\n            <Modal isOpen={this.state.modalInsertar} centered className=\"pt-5\">\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <span>Crear servicio social</span>\r\n                ) : (\r\n                  <span>Actualizar servicio social</span>\r\n                )}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                {/*\r\n                <Form.Group>\r\n                  <Form.Label>Código</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"codigo_servicio_social\"\r\n                    name=\"codigo_servicio_social\"\r\n                    value={form ? form.codigo_servicio_social : this.state.servicios.length + 1}\r\n                    \r\n                  />\r\n                </Form.Group>*/}\r\n                <Form.Group>\r\n                  <Form.Label>Entidad</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"entidad\"\r\n                    name=\"entidad\"\r\n                    placeholder=\"CEPA\"\r\n                    required\r\n                    value={form ? form.entidad : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Descripción</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"descripcion\"\r\n                    name=\"descripcion\"\r\n                    placeholder=\"Ayudara al ingeniero de software en los respectivos proyectos\"\r\n                    required\r\n                    value={form ? form.descripcion : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Horas</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"###\"\r\n                    id=\"cantidad_horas\"\r\n                    name=\"cantidad_horas\"\r\n                    required\r\n                    value={form ? form.cantidad_horas : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Cantidad de estudiantes</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"##\"\r\n                    id=\"cantidad_estudiantes\"\r\n                    name=\"cantidad_estudiantes\"\r\n                    required\r\n                    value={form ? form.cantidad_estudiantes : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Tipo Servicio </Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"tipo_servicio_social\"\r\n                    name=\"tipo_servicio_social\"\r\n                    required={true}\r\n                    value={form ? form.tipo_servicio_social : \"\"}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true}>\r\n                      Seleccione..\r\n                    </option>\r\n                    {this.state.tipoServicio.map((elemento) => (\r\n                      <option key={elemento.condigo_tipo_servicio_social} value={elemento.condigo_tipo_servicio_social}>\r\n                        {elemento.nombre_tipo_servicio_social}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <ModalFooter>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPut()}\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* Modal para eliminar */}\r\n            <Modal isOpen={this.state.modalEliminar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                <span>Eliminar Servicio Social</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                ¿Esta seguro de eliminar el Servicio Social seleccionado?\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"danger\" onClick={() => this.peticionDelete()}>\r\n                  Si\r\n                </Button>\r\n                <Button\r\n                  variant=\"secundary\"\r\n                  onClick={() => this.setState({ modalEliminar: false })}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GestionServicioSocial;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\n\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de propuestas\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"https://juliohdv.pythonanywhere.com/login/propuestaEstado/\";\r\n//Clase principal del componente\r\nclass AsignarPropuesta extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      servicio: [],\r\n      form:{\r\n        propuesta:\"\",\r\n        entidad: \"\",\r\n        tipo_servicio_social: \"\",\r\n        //condigo_tipo_servicio_social:\"\",\r\n        descripcion: \"\",\r\n        cantidad_horas: \"\",\r\n        cantidad_estudiantes: \"\",\r\n        nombre_tipo_servicio:\"\",\r\n      },\r\n     /*  formUpdate: {\r\n        codigo_propuesta: \"\",\r\n        fecha_inicio_propuesta: \"\",\r\n        fecha_fin_propuesta: \"\",\r\n        descripcion_propuesta: \"\",\r\n        estado_propuesta: \"\",\r\n        entidad_externa: \"\",\r\n        carrera: \"\",\r\n        tipo_servicio_social: \"\",\r\n      } */\r\n    };\r\n\r\n  }\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionPropuesta = (propuestas) => {\r\n    this.setState({\r\n      form: {\r\n        propuesta:propuestas[0],\r\n        entidad: propuestas[1],\r\n        nombre_tipo_servicio: propuestas[2],\r\n        condigo_tipo_servicio_social: propuestas[5],\r\n        descripcion: propuestas[4],\r\n      },\r\n    });\r\n  };\r\n\r\n   //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n   peticionPost = async () => {\r\n    //delete this.state.form.id;\r\n    await axios\r\n      .post(\"https://juliohdv.pythonanywhere.com/login/servicioSocial/\", {\r\n        propuesta: this.state.form.propuesta,\r\n        entidad: this.state.form.entidad,\r\n        tipo_servicio_social: this.state.form.condigo_tipo_servicio_social,\r\n        //condigo_tipo_servicio_social: this.state.form.condigo_tipo_servicio_social,\r\n        descripcion: this.state.form.descripcion,\r\n        cantidad_horas: this.state.form.cantidad_horas,\r\n        cantidad_estudiantes: this.state.form.cantidad_estudiantes,\r\n        \r\n      })\r\n      .then((response) => {\r\n        /* axios \r\n        .put(\"https://juliohdv.pythonanywhere.com/login/propuestas/\"+this.state.form.propuesta+\"/\",\r\n        this.state.form\r\n        ).then((response)=>{\r\n        \r\n        }) */\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se ha guardado con éxito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrió un Error en el Registro\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });  \r\n      });\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(url, {\r\n        params:{\r\n          estado: \"Aprobado\",\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const servicios = new Array(); //Arreglo donde guardaremos los objetos reescritos\r\n        //const propuestas = new Array();\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          servicios[i] =\r\n            //Asignamos los campos del arreglo inicial a los del nuevo objeto\r\n            {\r\n              codigo_propuesta: arreglo_inicial[i].codigo_propuesta,\r\n              entidad_externa: arreglo_inicial[i].entidad_externa_detalle.nombre_entidad,\r\n              tipo_servicio_social: arreglo_inicial[i].tipo_servicio_social_detalle.condigo_tipo_servicio_social,\r\n              telefono_entidad: arreglo_inicial[i].entidad_externa_detalle.telefono_entidad,\r\n              descripcion_propuesta: arreglo_inicial[i].descripcion_propuesta,\r\n              //condigo_tipo_servicio_social: arreglo_inicial[i].condigo_tipo_servicio_social,\r\n              nombre_tipo_servicio: arreglo_inicial[i].tipo_servicio_social_detalle.nombre_tipo_servicio_social,\r\n            };\r\n         /*  propestas[i] =\r\n          {\r\n\r\n          } */\r\n        }\r\n        this.setState({ servicio: servicios }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const {form}=this.state;\r\n    //Constante con las columnas de la tabla\r\nconst columns = [\r\n    {\r\n      name: \"codigo_propuesta\",\r\n      label: \"Código\",\r\n      key: \"codigo_propuesta\",\r\n      options: {\r\n        display: false,\r\n      }\r\n    },\r\n    {\r\n      name: \"entidad_externa\",\r\n      label: \"Nombre Entidad Externa\",\r\n      key: \"entidad_externa\",\r\n    },\r\n    {\r\n      name: \"nombre_tipo_servicio\",\r\n      label: \"Tipo Servicio Social\",\r\n      key: \"nombre_tipo_servicio\",\r\n    },\r\n    {\r\n      name: \"telefono_entidad\",\r\n      label: \"Teléfono\",\r\n      key: \"telefono_entidad\",\r\n    },\r\n    {\r\n      name: \"descripcion_propuesta\",\r\n      label: \"Descripción\",\r\n      key: \"descripcion_propuesta\",\r\n    },\r\n    {\r\n      name: \"tipo_servicio_social\",\r\n      label: \"Tipo Servicio Social\",\r\n      key: \"tipo_servicio_social\",\r\n      options: {\r\n        display: false,\r\n      }\r\n    },\r\n    {\r\n      name: \"acciones\",\r\n      label: \"Acciones\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n            <Tooltip title=\"Asignar Datos de Proyecto\">\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline-primary\"\r\n                 onClick={() => {\r\n                    this.seleccionPropuesta(tableMeta.rowData);\r\n                    console.log(tableMeta.rowData);\r\n                    this.modalInsertar();\r\n                  }} \r\n              >\r\n                <PostAddIcon />\r\n              </Button>\r\n            </Tooltip>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Asignación de proyecto\"}\r\n              data={this.state.servicio}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n\r\n    {/* Modal para actualizar o crear */}\r\n    <Modal isOpen={this.state.modalInsertar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n              <div>\r\n              <h3>\r\n                  Registro\r\n              </h3>\r\n              </div>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form.Group>\r\n                  \r\n                  <Form.Control\r\n                    type=\"hidden\"\r\n                    id=\"propuesta\"\r\n                    name=\"propuesta\"\r\n                    value={this.state.form.propuesta}\r\n\r\n                    required\r\n                    readOnly\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nombre Entidad</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"entidad\"\r\n                    name=\"entidad\"\r\n                    required\r\n                    readOnly\r\n                    value={this.state.form.entidad}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Tipo Servicio Social</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"nombre_tipo_servicio\"\r\n                    name=\"nombre_tipo_servicio\"\r\n                    required\r\n                    readOnly\r\n                    value={this.state.form.nombre_tipo_servicio}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                \r\n                  <Form.Control\r\n                    type=\"hidden\"\r\n                    id=\"condigo_tipo_servicio_social\"\r\n                    name=\"condigo_tipo_servicio_social\"\r\n                    required\r\n                    readOnly\r\n                    value={this.state.form.condigo_tipo_servicio_social}\r\n                  />\r\n                  </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Descripción</Form.Label>\r\n                  <Form.Control\r\n                   type=\"text\"\r\n                    id=\"descripcion\"\r\n                    name=\"descripcion\"\r\n                    required\r\n                    readOnly\r\n                    value={this.state.form.descripcion}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Cantidad de Horas</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"###\"\r\n                    id=\"cantidad_horas\"\r\n                    maxLength=\"3\"\r\n                    pattern=\"[0-9]\"\r\n                    title=\"Horas en números enteros\"\r\n                    name=\"cantidad_horas\"\r\n                    required\r\n                    value={form.cantidad_horas}\r\n                    onChange={this.handleChange} \r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Cantidad de estudiantes</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"##\"\r\n                    id=\"cantidad_estudiantes\"\r\n                    maxLength=\"2\"\r\n                    pattern=\"[0-9]\"\r\n                    title=\"Ingrese la cantidad de estudiantes en números enteros\"\r\n                    autoComplete=\"off\"\r\n                    name=\"cantidad_estudiantes\"\r\n                    required\r\n                    value={form.cantidad_estudiantes}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <ModalFooter>\r\n                  \r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                \r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>        \r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AsignarPropuesta;\r\n","import React, { useEffect,} from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch, Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles,  withStyles} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Form}  from  'react-bootstrap';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { itemsVisitante } from \"./componentes/itemsVisitante\";\r\nimport { itemsEstudiante } from \"./componentes/itemsEstudiante\";\r\nimport { itemsFacultad } from \"./componentes/itemsFacultad\";\r\nimport { itemsEscuela } from \"./componentes/itemsEscuela\";\r\nimport { itemsAdmin } from \"./componentes/itemsAdmin\";\r\nimport LogoSicass from \"./componentes/LogoSicass\";\r\nimport EnvioRegistro from \"./componentes/EnvioRegistro\";\r\nimport EnvioPropuesta from \"./componentes/EnvioPropuesta\";\r\nimport EnvioSolicitud from \"./componentes/EnvioSolicitud\";\r\nimport Roles from \"./componentes/administrador/Roles\";\r\nimport Solicitudes from \"./componentes/Solicitudes\";\r\nimport Login from \"./componentes/login\";\r\nimport Propuestas from \"./componentes/Propuestas\";\r\nimport Usuarios from \"./componentes/administrador/Usuarios\";\r\nimport InicioInformacion from \"./componentes/InicioInformacion\";\r\nimport EnvioRegistroUps from \"./componentes/estudiante/EnvioRegistroUps\";\r\nimport SolicitudInscripcion from \"./componentes/estudiante/SolicitudInscripcion\";\r\nimport ServicioSocial from \"./componentes/estudiante/ServicioSocial\";\r\nimport SolicitudProyecto from \"./componentes/estudiante/SolicitudProyecto\";\r\nimport SolicitudesEstudiantes from \"./componentes/SolicitudesEstudiantes\";\r\nimport Docentes  from \"./componentes/docente/Docente\";\r\nimport AsignarEE from \"./componentes/docente/AsignarEE\";\r\nimport { LockOpen } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport RegistrarActividad from \"./componentes/estudiante/RegistrarActividad\";\r\nimport SolicitarSS from \"./componentes/SolicitudRegistroSS\";\r\nimport SolicitudUPS from \"./componentes/SolicitudRegistroUPS\";\r\nimport GestionServicioSocial from \"./componentes/GestionServicioSocial\";\r\nimport AsignarPropuesta from \"./componentes/AsignarPropuesta\";\r\n\r\n\r\n//LOGIN\r\n/*function leerCookie(nombre){\r\n  let key = nombre + \"=\";\r\n  let cookies = document.cookie.split(\";\")\r\n  for(let i=0; i<cookies.length; i++){\r\n    let cookie = cookies[i]\r\n    while(cookie.charAt(0) === ' '){\r\n      cookie = cookie.substring(1,cookie.length)\r\n    }\r\n    if(cookie.indexOf(key) === 0){\r\n      return cookie.substring(key.length, cookie.length)\r\n    }\r\n  }\r\n  return null;\r\n}*/\r\n    \r\n//FIN LOGIN\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        SICASS\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\nconst drawerWidth = 335; //Ancho del menú desplegable\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paperLogin: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [csrfToken, setCsrfToken] = React.useState(\"\")\r\n  const [session, setSession] = React.useState(false)\r\n  const [autenticado, setAutenticado] = React.useState(false)\r\n  const [credenciales, setCredenciales] = React.useState({usuario:'', password:''})\r\n  const [tipoUsuario, setTipoUsuario] = React.useState()\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  function isResponseOK(response){\r\n    if(response.status >=200 && response.status >= 299){\r\n      return response.json()\r\n    }else{\r\n      throw Error(response.statusText)\r\n    }\r\n  }\r\n  function createCookie(key, valor){\r\n    const cookie = escape(key) + \"=\" + escape(valor) + \";secure;\"\r\n    document.cookie = cookie; \r\n  }\r\n  const handleCSRF = () => {\r\n    fetch(\"https://juliohdv.pythonanywhere.com/login/csrf/\",{\r\n      credentials: \"include\",\r\n    })\r\n    .then((res)=>{\r\n      let csrfToken = res.headers.get(\"X-CSRFToken\")\r\n      setCsrfToken(csrfToken)\r\n      console.log(\"csrfToken: \"+csrfToken)\r\n    })\r\n  }\r\n  const handleSession = () =>{\r\n    fetch(\"https://juliohdv.pythonanywhere.com/login/session/\",{\r\n      credentials: \"include\",\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) =>{\r\n      console.log(data)\r\n      if(data.isAuthenticated){\r\n        setSession(true)\r\n        setAutenticado(true)\r\n      }else{\r\n        setSession(false)\r\n        setAutenticado(false)\r\n        handleCSRF()\r\n      }\r\n    }).catch((err) =>{\r\n      console.log(err)\r\n    })\r\n  }\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n \r\n  useEffect(() => { //Equivalente a componentDidMount() solicitamos las session\r\n    handleSession()\r\n  }, [])\r\n  const TextFieldLogin = withStyles({\r\n    root: {\r\n      caretColor: 'white',\r\n      '& .MuiInputBase-input':{\r\n        color: 'white',\r\n      },\r\n      '& label': {\r\n        color: 'white',\r\n      },\r\n      '& label.Mui-focused': {\r\n        color: 'white',\r\n      },\r\n      '& label.Mui-hover': {\r\n        color: 'white',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'white',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'white',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'white',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'white',\r\n        },\r\n      },\r\n    },\r\n  })(TextField);\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <LogoSicass />\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            SICASS\r\n          </Typography>\r\n          \r\n          {(() => {\r\n            if(autenticado){ //Si esta autenticado , dibuja el form logout\r\n              return(\r\n                <Formik\r\n                initialValues={{\r\n                  usuario:\"\",\r\n                  password:\"\",\r\n                }}\r\n                onSubmit={async(values) =>{ //AQUI SE HACE EL LOGOUT\r\n                  fetch(\"https://juliohdv.pythonanywhere.com/login/logout/\",{\r\n                    credentials: 'include',\r\n                  })\r\n                  .then(data =>{\r\n                    setAutenticado(false)\r\n                    setCredenciales({usuario:\"\",password:\"\"})\r\n                    setTipoUsuario(\"\")\r\n                    Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"info\",\r\n                      title: \"¡Hasta Luego!\",\r\n                      showConfirmButton: false,\r\n                      timer: 2500,\r\n                      willClose: () =>{\r\n                        window.location.href = \"/sicass_app/\"\r\n                      }\r\n                    });\r\n                  }).catch(error => {\r\n                    console.log(error)\r\n                    setAutenticado(false)\r\n                    setCredenciales({usuario:\"\",password:\"\"})\r\n                    setTipoUsuario(\"\")\r\n                  })\r\n                }}\r\n              >\r\n                {({handleSubmit,}) =>(\r\n                  <Form className={classes.root} onSubmit={handleSubmit}>\r\n                  <Typography\r\n                variant =\"overline\"\r\n                color=\"inherit\"\r\n                align=\"center\"\r\n                display=\"block\">\r\n                Bienvenid@: {credenciales.usuario}{\"  \"} \r\n                    <Button \r\n                    variant=\"contained\" \r\n                    color=\"default\" \r\n                    startIcon={<LockOpen />}\r\n                    type=\"submit\"\r\n                    >\r\n                      Cerrar Sesión\r\n                    </Button>\r\n                </Typography>\r\n              </Form>\r\n                )}\r\n              </Formik>\r\n               \r\n              );\r\n\r\n            }else{\r\n              return( \r\n              <Formik\r\n                initialValues={{\r\n                  usuario:\"\",\r\n                  password:\"\",\r\n                }}\r\n                onSubmit={async(values) =>{ //AQUI SE HACE EL LOGIN\r\n                  await new Promise((resolve) => setTimeout(resolve,500))\r\n                  axios\r\n                    .post(\"https://juliohdv.pythonanywhere.com/login/login/\",{\r\n                      username: values.usuario, password: values.password\r\n                    },{\r\n                      headers:{'Content-Type':'application/json', 'X-CSRFToken': csrfToken}\r\n                    })\r\n                  .then(response =>{\r\n                    setAutenticado(true)\r\n                    setCredenciales({usuario:values.usuario,password:values.password})\r\n                    setTipoUsuario(response.data.tipo_usuario)\r\n                    createCookie(\"usuario\",response.data.username)\r\n                    createCookie(\"tipo_usuario\", response.data.tipo_usuario)\r\n                    Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"success\",\r\n                      title: response.data.detail + \" \" + response.data.username,\r\n                      showConfirmButton: false,\r\n                      timer: 2500,\r\n                    });\r\n                  }).catch(error => {\r\n                    \r\n                    setAutenticado(false)\r\n                    setCredenciales({usuario:\"\",password:\"\"})\r\n                    setTipoUsuario(\"\")\r\n                    Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"error\",\r\n                      title: \"No hay conexion con la base de datos, intente en otro momento\",\r\n                      showConfirmButton: false,\r\n                      timer: 2500,\r\n                    });\r\n                  })\r\n                }}\r\n              >\r\n                {({values, handleSubmit, handleChange }) =>(\r\n                  <Form className={classes.root} onSubmit={handleSubmit}>\r\n                  <TextFieldLogin  \r\n                  name=\"usuario\"\r\n                  label=\"Usuario\"  \r\n                  variant=\"outlined\"  \r\n                  size=\"small\" \r\n                  value={values.usuario}\r\n                  onChange={handleChange}/>\r\n                  \r\n                  <TextFieldLogin \r\n                  id=\"password\" \r\n                  name=\"password\"\r\n                  type =\"password\" \r\n                  label=\"Password\" \r\n                  variant=\"outlined\" \r\n                  size=\"small\" \r\n                  value={values.password}\r\n                  onChange={handleChange}/>\r\n                  <Button \r\n                  variant=\"primary\" \r\n                  type=\"submit\" \r\n                  variant=\"contained\" \r\n                  color=\"default\" \r\n                  startIcon={<LockOpen />}\r\n                  size=\"small\" \r\n                  >\r\n                    Iniciar Sesión\r\n                  </Button>\r\n              </Form>\r\n                )}\r\n              </Formik>\r\n            )}\r\n        })()}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Router>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          {(() => {\r\n          switch(tipoUsuario) {\r\n            case 1: return <List>{itemsEstudiante}</List>;\r\n            case 2: return <List>{itemsFacultad}</List>;\r\n            case 3: return <List>{itemsEscuela}</List>;\r\n            case 4: return <List>{itemsAdmin}</List>;\r\n            default: return <List>{itemsVisitante}</List>\r\n          }\r\n        })()}\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container>\r\n            <Switch>\r\n              {\r\n                <Route exact path=\"/\">\r\n                  <Inicio />\r\n                </Route>\r\n              }\r\n              <Route path=\"/RegistroEstudiante\">\r\n                <RegistroEstudiante />\r\n              </Route>\r\n              <Route path=\"/RegistrarPropuesta\">\r\n                <RegistrarPropuesta />\r\n              </Route>\r\n              <Route path=\"/RegistrarSolicitud\">\r\n                <RegistrarSolicitud />\r\n              </Route>\r\n              <Route path=\"/GestionarPrivilegios\">\r\n                { !autenticado ? <Redirect to=\"/\" /> : <GestionarRoles />}\r\n              </Route>\r\n              <Route path=\"/ConsultarSolicitud\">\r\n                <ConsultarSolicitud />\r\n              </Route>\r\n              <Route path=\"/Login\">\r\n                <IniciarSesion />\r\n              </Route>\r\n              <Route path=\"/GestionarUsuarios\">\r\n                {!autenticado ? <Redirect to=\"/\" /> : <GestionUsuarios />}\r\n              </Route>\r\n              <Route path=\"/ConsultarPropuesta\">\r\n                <ConsultarPropuesta />\r\n              </Route>\r\n              <Route path=\"/RegistroUps\">\r\n              {!autenticado ? <Redirect to=\"/\" /> : <RegistrarseUps /> }\r\n              </Route>\r\n              <Route path=\"/SolicitudInscripcion\">\r\n              {!autenticado ? <Redirect to=\"/\" /> : <ConsultarInscripcion /> }\r\n              </Route>\r\n              <Route path=\"/ServicioSocial\">\r\n              {!autenticado ? <Redirect to=\"/\" /> : <Servicios /> }\r\n              </Route>\r\n              <Route path=\"/SolicitudProyecto\">\r\n              {!autenticado ? <Redirect to=\"/\" /> : <Proyecto /> }\r\n              </Route>\r\n              <Route path=\"/ConsultarSolicitudesEstudiantes\">\r\n                {!autenticado ? <Redirect to=\"/\" /> : <ConsultarSolicitudesEstudiantes />}\r\n              </Route>\r\n              <Route path=\"/Docentes\">\r\n                {!autenticado ? <Redirect to=\"/\" /> : <Docente />}\r\n              </Route>\r\n              <Route path=\"/AsignarEE\">\r\n                {!autenticado ? <Redirect to=\"/\"/> : <AsignarEncargadoEscuela/>}\r\n              </Route>\r\n              <Route path=\"/Actividades\">\r\n                {!autenticado ? <Redirect to=\"/\" /> : <Actividades />}\r\n              </Route>\r\n              <Route path=\"/SolicitudRegistroSS\">\r\n              {!autenticado ? <Redirect to=\"/\" /> : <SolicitudRegistroSS />}\r\n              </Route>\r\n              <Route path=\"/SolicitudRegistroUPS\">\r\n              {!autenticado ? <Redirect to=\"/\" /> :<SolicitudRegistroUPS />}\r\n              </Route>\r\n              <Route path=\"/AsignarPropuesta\">\r\n              {!autenticado ? <Redirect to=\"/\" /> :<PropuestasAceptadas />}\r\n              </Route>\r\n              <Route path=\"/PropuestasAceptadas\">\r\n                <PropuestasAceptadas />\r\n              </Route>\r\n              <Route path=\"/GestionServicioSocial\">\r\n                <GestionSS />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nfunction RegistroEstudiante() {\r\n  return <EnvioRegistro></EnvioRegistro>;\r\n}\r\nfunction RegistrarPropuesta() {\r\n  return <EnvioPropuesta></EnvioPropuesta>;\r\n}\r\nfunction RegistrarSolicitud() {\r\n  return <EnvioSolicitud></EnvioSolicitud>;\r\n}\r\nfunction GestionarRoles() {\r\n  return <Roles></Roles>;\r\n}\r\nfunction ConsultarPropuesta() {\r\n  return <Propuestas></Propuestas>;\r\n}\r\nfunction ConsultarSolicitud() {\r\n  return <Solicitudes></Solicitudes>;\r\n}\r\nfunction GestionUsuarios() {\r\n  return <Usuarios></Usuarios>;\r\n}\r\nfunction Inicio() {\r\n  return <InicioInformacion></InicioInformacion>;\r\n}\r\nfunction IniciarSesion() {\r\n  return <Login />;\r\n}\r\nfunction RegistrarseUps() {\r\n  return <EnvioRegistroUps />;\r\n}\r\nfunction ConsultarInscripcion() {\r\n  return <SolicitudInscripcion />;\r\n}\r\nfunction Servicios() {\r\n  return <ServicioSocial />;\r\n}\r\nfunction Proyecto() {\r\n  return <SolicitudProyecto />;\r\n}\r\nfunction ConsultarSolicitudesEstudiantes() {\r\n  return <SolicitudesEstudiantes />;\r\n}\r\nfunction Docente(){\r\n  return <Docentes/>;\r\n}\r\nfunction AsignarEncargadoEscuela(){\r\n  return <AsignarEE/>\r\n}\r\nfunction Actividades(){\r\n  return <RegistrarActividad/>\r\n}\r\nfunction SolicitudRegistroSS(){\r\n  return <SolicitarSS/>;\r\n}\r\nfunction SolicitudRegistroUPS(){\r\n  return <SolicitudUPS/>;\r\n}\r\n\r\nfunction GestionSS() {\r\n  return <GestionServicioSocial />;\r\n}\r\n\r\nfunction PropuestasAceptadas(){\r\n  return <AsignarPropuesta/>;\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport Dashboard from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Dashboard\r\n    \r\n    />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}