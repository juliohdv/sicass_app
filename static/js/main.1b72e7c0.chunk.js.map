{"version":3,"sources":["componentes/itemsVisitante.js","componentes/itemsEstudiante.js","componentes/itemsFacultad.js","componentes/itemsEscuela.js","componentes/itemsAdmin.js","componentes/iconoSicass.png","componentes/LogoSicass.js","componentes/Dashboard.js","componentes/Card.js","componentes/BotonesRegistro.js","componentes/Registro.js","componentes/EnvioRegistro.js","componentes/PropuestaServicio.js","componentes/EnvioPropuesta.js","componentes/SolicitudServicio.js","componentes/EnvioSolicitud.js","componentes/Roles.js","componentes/Solicitudes.js","componentes/login.js","componentes/Propuestas.js","componentes/Usuarios.js","componentes/logoUes.png","componentes/LogoUes.js","componentes/logoProyeccionSocial.jpg","componentes/LogoProyeccion.js","componentes/InicioInformacion.js","componentes/RegistroUps.js","componentes/EnvioRegistroUps.js","componentes/SolicitudInscripcion.js","componentes/ServicioSocial.js","componentes/SolicitudProyecto.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","nested","paddingLeft","spacing","itemsVisitante","ListSubheader","ListItem","button","component","Link","to","ListItemIcon","Home","ListItemText","primary","LockOpen","PersonAdd","DesplegarPropuestas","opcionGeneral","opcion1","link1","opcion2","link2","DesplegarSolicitudes","props","useState","open","setOpen","classes","onClick","aria-controls","aria-expanded","ImportContacts","Collapse","in","timeout","className","Visibility","Add","LibraryBooks","itemsEstudiante","DesplegarUPS","DesplegarServicioSocial","opcion3","link3","opcion4","link","Pages","Widgets","Schedule","link4","AssignmentTurnedIn","itemsFacultad","Group","GroupAdd","itemsEscuela","Beenhere","Done","EmojiPeople","itemsAdmin","VerifiedUser","SupervisedUserCircle","LogoSicass","src","sicass","width","height","alt","Component","Dashboard","Grid","contenedor","card","Card","border","Header","titulo","Body","cuerpo","botones","Button","variant","type","href","Registro","state","facultades","carreras","facultadSeleccionada","handleChange","bind","event","this","setState","target","value","axios","get","params","facultad","then","response","data","catch","error","Swal","fire","position","icon","title","document","getElementById","selectedIndex","initialValues","user","carnet","password","nombres_estudiante","apellidos_estudiante","correo_estudiante","sexo","direccion_estudiante","telefono_estudiante","carrera_id","onSubmit","values","a","resetForm","Promise","resolve","setTimeout","post","username","carrera","map","elemento","id","toString","showConfirmButton","timer","limpiarFormulario","handleSubmit","Form","Row","as","Col","Label","OverlayTrigger","overlay","Tooltip","Control","placeholder","maxLength","pattern","autoComplete","required","onChange","disabled","selected","codigo_facultad","nombre_facultad","codigo_carrera","nombre_carrera","EnvioRegistro","PropuestaServicio","tipos_servicio_social","carreraSeleccionada","tipoServicioSocialSeleccionado","handleFacultad","fecha","Date","mes","getMonth","dia","getDate","getFullYear","nombre_entidad","direccion_entidad","correo_entidad","telefono_entidad","clasificacion_entidad","fecha_fin_propuesta","estado_propuesta","descripcion_propuesta","entidad_externa_id","tipo_servicio_social_id","entidad_externa","codigo_entidad","tipo_servicio_social","reiniciarFacultad","sm","condigo_tipo_servicio_social","nombre_tipo_servicio_social","min","fechaActual","rows","EnvioPropuesta","SolicitudServicio","fecha_fin_solicitud","estado_solicitud","Solicitud","options","download","print","responsive","selectableRows","tableBodyHeight","rowsPerPage","rowsPerPageOptions","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","label","pagination","next","previous","displayRows","toolbar","search","downloadCsv","viewColumns","filterTable","filter","all","reset","titleAria","selectedRows","text","delete","deleteAria","url","Roles","peticionPost","form","name","content_type_id","codename","modalInsertar","componentDidMount","peticionPut","console","log","put","peticionDelete","modalEliminar","seleccionPrivilegio","privilegio","tipoModal","e","persist","permisos","columns","customBodyRender","tableMeta","updateValue","size","rowData","Modal","isOpen","centered","ModalHeader","style","display","ModalBody","length","readOnly","ModalFooter","key","Solicitudes","solicitudes","arreglo_inicial","solicitud","i","codigo_solicitud","entidad_externa_detalle","carrera_detalle","tipo_servicio_social_detalle","fecha_inicio_solicitud","Login","credenciales","token","login","fetch","method","JSON","stringify","headers","json","inputChanged","credenc","Propuestas","codigo_propuesta","fecha_inicio_propuesta","Usuarios","is_superuser","first_name","last_name","email","is_staff","is_active","seleccionUsuario","usuario","usuarios","last_login","date_joined","option","autocomplete","LogoUes","logoUes","LogoProyeccion","logoProyeccion","InicioInformacion","align","placement","rel","Title","Text","RegistroUps","EnvioRegistroUps","Image","fluid","observaciones","SolicitudInscripcion","servicio","servicios","Array","codigo_servicio_social","cantidad_estudiantes","cantidad_horas","entidad","descripcion","propuesta","propuesta_detalle","solicitud_detalle","nombre_servicio","SolicitudProyecto","Copyright","Typography","color","root","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","App","React","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","List","Divider","Container","exact","path","Inicio","RegistroEstudiante","RegistrarPropuesta","RegistrarSolicitud","GestionarRoles","ConsultarSolicitud","IniciarSesion","GestionUsuarios","ConsultarPropuesta","RegistrarseUps","ConsultarInscripcion","Servicios","Proyecto","Box","pt","EnvioSolicitud","ServicioSocial","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b72e7c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, LockOpen, PersonAdd, ImportContacts, LibraryBooks, Visibility, Add} from \"@material-ui/icons/\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    \r\n  },\r\n}));\r\nexport const itemsVisitante = (\r\n  <div>\r\n    <ListSubheader>Menú</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/Login\">\r\n      <ListItemIcon>\r\n        <LockOpen />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Login\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/RegistroEstudiante\">\r\n      <ListItemIcon>\r\n        <PersonAdd />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Registro de Estudiante\" />\r\n    </ListItem>\r\n    <DesplegarPropuestas\r\n      opcionGeneral={\"Propuestas\"}\r\n      opcion1={\"Consultar Propuestas\"}\r\n      link1={\"/ConsultarPropuesta\"}\r\n      opcion2={\"Registrar Propuestas\"}\r\n      link2={\"/RegistrarPropuesta\"}\r\n    />\r\n    <DesplegarSolicitudes\r\n      opcionGeneral={\"Solicitudes\"}\r\n      opcion1={\"Consultar Solicitudes\"}\r\n      link1={\"/ConsultarSolicitud\"}\r\n      opcion2={\"Registrar Solicitud\"}\r\n      link2={\"/RegistrarSolicitud\"}\r\n    />\r\n  </div>\r\n);\r\nfunction DesplegarPropuestas(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <ImportContacts />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\nfunction DesplegarSolicitudes(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <LibraryBooks />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, Pages, Visibility, Add, Schedule, AssignmentTurnedIn,Widgets} from \"@material-ui/icons/\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    \r\n  },\r\n}));\r\nexport const itemsEstudiante = (\r\n\r\n  <div>\r\n    <ListSubheader>Menú Estudiante</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <DesplegarUPS\r\n      opcionGeneral={\"UPS\"}\r\n      opcion1={\"Registro\"}\r\n      link1={\"/RegistroUps\"}\r\n      opcion2={\"Consultar Registro\"}\r\n      link2={\"/SolicitudInscripcion\"}\r\n    />\r\n    <DesplegarServicioSocial\r\n      opcionGeneral={\"Servicio Social\"}\r\n      opcion1={\"Consultar SS Disponible\"}\r\n      link1={\"\"}\r\n      opcion2={\"Estado de Mis Servicios Sociales\"}\r\n      link2={\"/SolicitudProyecto\"}\r\n      opcion3={\"Registrar Actividades\"}\r\n      link3={\"\"}\r\n      opcion4={\"Resolución\"}\r\n      link={\"\"}\r\n    />\r\n  </div>\r\n);\r\nfunction DesplegarUPS(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <Pages />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\nfunction DesplegarServicioSocial(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <Widgets />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Schedule />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link3}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion3} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link4}\r\n        >\r\n          <ListItemIcon>\r\n            <AssignmentTurnedIn />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion4} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, Group, GroupAdd, LibraryBooks, Add, Widgets, ImportContacts, Visibility} from \"@material-ui/icons/\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    \r\n  },\r\n}));\r\n\r\nexport const itemsFacultad = (\r\n  <div>\r\n    <ListSubheader>Menú Encargado de Facultad</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Group />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Nómina Docente\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <GroupAdd />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Registrar Docente\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <ImportContacts />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Propuestas\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <LibraryBooks />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Solicitudes\" />\r\n    </ListItem>\r\n    <DesplegarServicioSocial\r\n      opcionGeneral={\"Servicios Sociales\"}\r\n      opcion1={\"Registrar Servicio Social\"}\r\n      link1={\"\"}\r\n      opcion2={\"Consultar Servicio Social\"}\r\n      link2={\"\"}\r\n    />\r\n  </div>\r\n);\r\nfunction DesplegarServicioSocial(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        onClick={() => setOpen(!open)}\r\n        aria-controls=\"example-collapse-text\"\r\n        aria-expanded={open}\r\n      >\r\n        <ListItemIcon>\r\n          <Widgets />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.opcionGeneral} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link1}\r\n        >\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion1} />\r\n        </ListItem>\r\n      </Collapse>\r\n      <Collapse in={open} timeout=\"auto\">\r\n        <ListItem\r\n          button\r\n          className={classes.nested}\r\n          component={Link}\r\n          to={props.link2}\r\n        >\r\n          <ListItemIcon>\r\n            <Visibility />\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.opcion2} />\r\n        </ListItem>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\n","\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, Beenhere,Done, EmojiPeople} from \"@material-ui/icons/\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\n\r\n\r\nexport const itemsEscuela = (\r\n  <div>\r\n    <ListSubheader>Menú Encargado de Escuela</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Beenhere />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Propuestas Aceptadas\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Done />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Solicitudes de Registro para UPS\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <EmojiPeople />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Solicitudes de Estudiantes para SS\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\n","\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Home, SupervisedUserCircle, VerifiedUser} from \"@material-ui/icons/\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\n\r\n\r\nexport const itemsAdmin= (\r\n  <div>\r\n    <ListSubheader>Menú Administrador</ListSubheader>\r\n    <ListItem button component={Link} to=\"/\">\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inicio\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/GestionarPrivilegios\">\r\n      <ListItemIcon>\r\n        <VerifiedUser/>\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Roles y Privilegios\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/GestionarUsuarios\">\r\n      <ListItemIcon>\r\n        <SupervisedUserCircle />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Usuarios\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\n","export default __webpack_public_path__ + \"static/media/iconoSicass.7d10827a.png\";","import React, { Component } from 'react';\r\n//Aqui importamos nuestra imagen\r\nimport sicass from './iconoSicass.png';\r\n\r\nclass LogoSicass extends Component {\r\n  render() {\r\n    return (    \r\n        <div className=\"pr-3\">\r\n            <img src={sicass} width=\"50\" height=\"50\" alt=\"Lgo SICASS\"/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoSicass;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Dashboard(props) {\r\n  return (\r\n    <Grid spacing={3}>\r\n      {props.contenedor}\r\n    </Grid>\r\n  );\r\n}","import React  from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\n//Componente que contiene la base de maquetación de las card\r\nexport default function card(props) {\r\n  return (\r\n    <Card border=\"info\">\r\n      <Card.Header className=\"bg-info\">{props.titulo}</Card.Header> \r\n      <Card.Body>{props.cuerpo}</Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//Componente que contiene la base de maquetación de los botones para un registro\r\nexport default function botones() {\r\n  return (\r\n    <div className=\"pt-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col text-right \">\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Registrar\r\n          </Button>\r\n        </div>\r\n        <div className=\"col \">\r\n          <a className=\"btn btn-secondary\" href=\"/\">Cancelar</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Col, Form, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Botones from \"./BotonesRegistro\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//Clase principal del componente, para el registro de los estudiantes\r\nclass Registro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      facultades: [],\r\n      carreras: [],\r\n      facultadSeleccionada: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  //Funcion para la obtener las carreras, dependiendo de la seleccion de la facultad\r\n  handleChange(event) {\r\n    this.setState({ facultadSeleccionada: event.target.value });\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/carreraPorFacultad/\", {\r\n        params: { facultad: event.target.value },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ carreras: response.data });\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  //Funcion que carga todas las facultades, al ingresar a la pantalla\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/facultades/\")\r\n      .then((response) => {\r\n        this.setState({ facultades: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  //Funcion para resetear la facultad seleccionada\r\n  reiniciarFacultad(){\r\n    document.getElementById(\"facultad\").selectedIndex = \"0\";\r\n  }\r\n  render() {\r\n    //Retorna todo la interfas respectiva para la solicitud de la propuesta\r\n    return (\r\n      /* Componente que facilita el control de los campos del fomrulario */\r\n      <Formik\r\n        initialValues={{\r\n          user:\"\",\r\n          carnet: \"\",\r\n          password: \"\",\r\n          nombres_estudiante: \"\",\r\n          apellidos_estudiante: \"\",\r\n          correo_estudiante: \"\",\r\n          sexo: \"\",\r\n          direccion_estudiante: \"\",\r\n          telefono_estudiante: \"\",\r\n          carrera_id: \"\",\r\n        }}\r\n        onSubmit={async (values, {resetForm}) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          /* Librearia que facilita la comunicación con el backend */\r\n          axios\r\n            .post(\"http://127.0.0.1:8000/login/crearUsuario/\", {\r\n              username: values.carnet,\r\n              password: values.carnet\r\n            })\r\n            .then((response)=>{\r\n              axios\r\n                .get(\"http://127.0.0.1:8000/login/ultimoUsuario/\")\r\n                .then((response) =>{\r\n                    axios\r\n                    .post(\"http://127.0.0.1:8000/login/estudiantes/\", {\r\n                      carnet: values.carnet,\r\n                      nombres_estudiante: values.nombres_estudiante,\r\n                      apellidos_estudiante: values.apellidos_estudiante,\r\n                      correo_estudiante: values.correo_estudiante,\r\n                      sexo: values.sexo,\r\n                      direccion_estudiante: values.direccion_estudiante,\r\n                      telefono_estudiante: values.telefono_estudiante,\r\n                      carrera: values.carrera_id,\r\n                      user: response.data.map((elemento) => elemento.id).toString()\r\n                      //username: response.data.map((elemento) => elemento.username).toString(),\r\n                      //user_id: response.data.map((elemento) => elemento.id).toString()\r\n                    })\r\n                    .then((response) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"success\",\r\n                        title: \"Te has registrado con exito\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                      });\r\n                      this.limpiarFormulario();\r\n                      /* Hay que limpiar los valores iniciales los vuelve a poner en los input */\r\n                    })\r\n                    .catch((error) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"error\",\r\n                        title:\r\n                          \"Ocurrio un error en su registro: Estudiante ya registrado\",\r\n                      });\r\n                    /* Hay que limpiar los valores iniciales los vuelve a poner en los input */\r\n                  });\r\n                })\r\n            })\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, handleChange }) => (\r\n          /* Formulario que contiene todo los campos requeridos */\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Carnet</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Dos letras en mayúscula y cinco dígitos númericos\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"AA00000\"\r\n                    id=\"carnet\"\r\n                    maxLength=\"7\"\r\n                    pattern=\"([A-Z]{2})([0-9]{5})\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.carnet}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Contraseña</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Digite una contraseña para la creación de su usuario\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"**********\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    required={false}\r\n                    value={values.carnet}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Nombres</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Inciales en mayúscula, resto en minúscula y los nombres\r\n                      separados por un espacio\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Carlos Roberto\"\r\n                    maxLength=\"50\"\r\n                    id=\"nombres_estudiante\"\r\n                    pattern=\"([A-ZÑ]{1}[a-zá-úñ]+)[ ]([A-ZÑ]{1}[a-zá-úñ]+)\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.nombres_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Apellidos</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Inciales en mayúscula, resto en minúscula y los apellidos\r\n                      separados por un espacio\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Perez Quintanilla\"\r\n                    maxLength=\"50\"\r\n                    id=\"apellidos_estudiante\"\r\n                    pattern=\"([A-ZÑ]{1}[a-zá-úñ]+)[ ]([A-ZÑ]{1}[a-zá-úñ]+)\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.apellidos_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Email</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Carnet con el dominio del correo de la Universidad\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"AA00000@ues.edu.sv\"\r\n                    id=\"correo_estudiante\"\r\n                    pattern=\"([A-Za-z]{2})([0-9]{5})@ues[.]edu[.]sv\"\r\n                    maxLength=\"18\"\r\n                    required={true}\r\n                    value={values.correo_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Dirección</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Cada subdivisión de la dirección, separado por una \",\"\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Departamento, Municipio, Residencia\"\r\n                    maxLength=\"250\"\r\n                    id=\"direccion_estudiante\"\r\n                    autoComplete=\"off\"\r\n                    required={true}\r\n                    value={values.direccion_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Teléfono</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Ocho dígitos numericos, iniciando por 2, 6 o 7\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"########\"\r\n                    maxLength=\"8\"\r\n                    id=\"telefono_estudiante\"\r\n                    pattern=\"([267]{1})([0-9]{7})\"\r\n                    required={true}\r\n                    value={values.telefono_estudiante}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"sexo\"\r\n                  required={true}\r\n                  value={values.sexo}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione...\r\n                  </option>\r\n                  <option key={0} value=\"Masculino\">\r\n                    Masculino\r\n                  </option>\r\n                  <option key={1} value=\"Femenino\">\r\n                    Femenino\r\n                  </option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Facultad</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Si no aparecen las facultades, no hay conexión con la Base\r\n                      de datos, intente en otro momento\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"facultad\"\r\n                    required={true}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true} selected>\r\n                      Seleccione...\r\n                    </option>\r\n                    {this.state.facultades.map((elemento) => (\r\n                      <option\r\n                        key={elemento.codigo_facultad}\r\n                        value={elemento.codigo_facultad}\r\n                      >\r\n                        {elemento.nombre_facultad}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Carrera</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"carrera_id\"\r\n                  required={true}\r\n                  value={values.carrera_id}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione..\r\n                  </option>\r\n                  {this.state.carreras.map((elemento) => (\r\n                    <option\r\n                      key={elemento.codigo_carrera}\r\n                      value={elemento.codigo_carrera}\r\n                    >\r\n                      {elemento.nombre_carrera}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Botones />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registro;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport Registro from \"./Registro\";\r\n\r\n//Clase principal del componente\r\nclass EnvioRegistro extends Component {\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <Card titulo=\"Registro de Estudiante\" cuerpo={<Registro />} />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnvioRegistro;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, Row, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Botones from \"./BotonesRegistro\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/* Componente que contiene el formulario base de los datos del servicio\r\nsocial a solicitar */\r\nclass PropuestaServicio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipos_servicio_social: [],\r\n      facultades: [],\r\n      carreras: [],\r\n      facultadSeleccionada: \"\",\r\n      carreraSeleccionada: \"\",\r\n      tipoServicioSocialSeleccionado: \"\",\r\n    };\r\n    this.handleFacultad = this.handleFacultad.bind(this);\r\n  }\r\n  //Funcion que obtiene la carrera dependiendo la facultad seleccionada\r\n  handleFacultad(event) {\r\n    this.setState({ facultadSeleccionada: event.target.value });\r\n    this.setState({ carreraSeleccionada: event.target.value });\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/carreraPorFacultad/\", {\r\n        params: { facultad: event.target.value },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ carreras: response.data });\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n  }\r\n  //Obtiene de la BD las facultadas para cargar el combobox\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/facultades/\")\r\n      .then((response) => {\r\n        this.setState({ facultades: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/tiposServicioSocial/\")\r\n      .then((response) => {\r\n        this.setState({ tipos_servicio_social: response.data });\r\n      })\r\n      .catch((error) => {}\r\n      );\r\n  }\r\n\r\n  //Funcion para resetear la facultad seleccionada\r\n  reiniciarFacultad(){\r\n    document.getElementById(\"facultad\").selectedIndex = \"0\";\r\n  }\r\n  //Funcion para obtener la fecha actual\r\n  fechaActual() {\r\n    var fecha = new Date();\r\n    var mes = fecha.getMonth() + 1;\r\n    var dia = fecha.getDate();\r\n    var anio = fecha.getFullYear();\r\n    if (dia < 10) dia = \"0\" + dia;\r\n    if (mes < 10) mes = \"0\" + mes;\r\n    return anio + \"-\" + mes + \"-\" + dia;\r\n  }\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          nombre_entidad: \"\",\r\n          direccion_entidad: \"\",\r\n          correo_entidad: \"\",\r\n          telefono_entidad: \"\",\r\n          clasificacion_entidad: \"\",\r\n          fecha_fin_propuesta: \"\",\r\n          estado_propuesta: \"En Proceso\",\r\n          descripcion_propuesta: \"\",\r\n          entidad_externa_id: \"\",\r\n          carrera_id: \"\",\r\n          tipo_servicio_social_id: \"\",\r\n        }}\r\n        onSubmit={async (values, {resetForm}) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          axios\r\n            .post(\"http://127.0.0.1:8000/login/entidadExterna/\", {\r\n              nombre_entidad: values.nombre_entidad,\r\n              direccion_entidad: values.direccion_entidad,\r\n              correo_entidad: values.correo_entidad,\r\n              telefono_entidad: values.telefono_entidad,\r\n              clasificacion_entidad: values.clasificacion_entidad,\r\n            })\r\n            .then((response) => {\r\n              axios\r\n                .get(\"http://127.0.0.1:8000/login/ultimaEntidadExterna/\")\r\n                .then((response) => {\r\n                  axios\r\n                    .post(\"http://127.0.0.1:8000/login/propuestas/\", {\r\n                      entidad_externa: response.data\r\n                        .map((elemento) => elemento.codigo_entidad)\r\n                        .toString(),\r\n                      carrera: values.carrera_id,\r\n                      tipo_servicio_social: values.tipo_servicio_social_id,\r\n                      fecha_fin_propuesta: values.fecha_fin_propuesta,\r\n                      estado_propuesta: values.estado_propuesta,\r\n                      descripcion_propuesta: values.descripcion_propuesta,\r\n                    })\r\n                    .then((response) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"success\",\r\n                        title:\r\n                          \"Tu propuesta de servicio social ha sido registrada con éxito.\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                      });\r\n                      //Limpia el formulario ingresado en pantalla\r\n                      this.reiniciarFacultad();\r\n                      resetForm({});\r\n                    })\r\n                    .catch((error) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"error\",\r\n                        title: \"Ocurrio un error en su registro de propuesta\",\r\n                      });\r\n                    });\r\n                })\r\n                .catch((error) => {});\r\n            })\r\n            .catch((error) => {});\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, handleChange }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Nombre entidad</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Nombre de la entidad a la que representa</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ministerio de agricultura\"\r\n                    id=\"nombre_entidad\"\r\n                    required={true}\r\n                    maxLength=\"150\"\r\n                    value={values.nombre_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Dirección</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Cada subdivisión de la dirección, separado por una \",\"\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Departamento, Municipio, Residencia \"\r\n                    id=\"direccion_entidad\"\r\n                    required={true}\r\n                    maxLength=\"250\"\r\n                    value={values.direccion_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Correo</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Debe contener una \"@\" y al menos un \".\"</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"example@name.com\"\r\n                    id=\"correo_entidad\"\r\n                    required={true}\r\n                    maxLength=\"254\"\r\n                    pattern=\"([A-z]+)@([A-z]+)[.]([A-z.]+)\"\r\n                    value={values.correo_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Teléfono</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Ocho dígitos númericos, iniciados por 2, 6 o 7\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"########\"\r\n                    id=\"telefono_entidad\"\r\n                    pattern=\"([267]{1})([0-9]{7})\"\r\n                    maxLength=\"8\"\r\n                    required={true}\r\n                    value={values.telefono_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"text-right pt-3\">\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label className=\"pt-2\">\r\n                  Clasificación de la entidad\r\n                </Form.Label>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"clasificacion_entidad\"\r\n                  required={true}\r\n                  value={values.clasificacion_entidad}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione...\r\n                  </option>\r\n                  <option key={0} value=\"Privada\">\r\n                    Privada\r\n                  </option>\r\n                  <option key={1} value=\"Pública\">\r\n                    Pública\r\n                  </option>\r\n                  <option key={2} value=\"Autónoma\">\r\n                    Autónoma\r\n                  </option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Row className=\"pt-5\">\r\n              <Col sm={6} className=\"pl-5\">\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Facultad</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"facultad\"\r\n                    required={true}\r\n                    onChange={this.handleFacultad}\r\n                  >\r\n                    <option value=\"\" disabled={true} selected>\r\n                      Selecione...\r\n                    </option>\r\n                    {this.state.facultades.map((elemento) => (\r\n                      <option\r\n                        key={elemento.codigo_facultad}\r\n                        value={elemento.codigo_facultad}\r\n                      >\r\n                        {elemento.nombre_facultad}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Carrera</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"carrera_id\"\r\n                    required={true}\r\n                    value={values.carrera_id}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true}>\r\n                      Selecione...\r\n                    </option>\r\n                    {this.state.carreras.map((elemento) => (\r\n                      <option\r\n                        key={elemento.codigo_carrera}\r\n                        value={elemento.codigo_carrera}\r\n                      >\r\n                        {elemento.nombre_carrera}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Tipo de servicio social</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    id=\"tipo_servicio_social_id\"\r\n                    required={true}\r\n                    value={values.tipo_servicio_social_id}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"\" disabled={true} selected={true}>\r\n                      Selecione...\r\n                    </option>\r\n                    {this.state.tipos_servicio_social.map((elemento) => (\r\n                      <option\r\n                        key={elemento.condigo_tipo_servicio_social}\r\n                        value={elemento.condigo_tipo_servicio_social}\r\n                      >\r\n                        {elemento.nombre_tipo_servicio_social}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Fecha limite para respuesta</Form.Label>\r\n                  <Form.Control\r\n                    type=\"Date\"\r\n                    id=\"fecha_fin_propuesta\"\r\n                    required={true}\r\n                    value={values.fecha_fin_propuesta}\r\n                    onChange={handleChange}\r\n                    min={this.fechaActual()}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col sm={1}></Col>\r\n              <Col sm={5}>\r\n                <Form.Group as={Row}>\r\n                  <Form.Label>Descripción de la propuesta</Form.Label>\r\n                  <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Descripción de la propuesta, maximo 750 carácteres</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    id=\"descripcion_propuesta\"\r\n                    required={true}\r\n                    value={values.descripcion_propuesta}\r\n                    onChange={handleChange}\r\n                    rows={11}\r\n                    maxLength=\"750\"\r\n                  />\r\n                </OverlayTrigger>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Botones />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PropuestaServicio;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport PropuestaServicio from \"./PropuestaServicio\";\r\n\r\n//Clase principal del componente\r\nclass EnvioPropuesta extends Component {\r\n  render() {\r\n    //Retorna todo la interfas respectiva para la solicitud de la propuesta\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <Card\r\n              titulo=\"Propuesta de servicio social\"\r\n              cuerpo={<PropuestaServicio />}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnvioPropuesta;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Formik } from \"formik\";\r\nimport Botones from \"./BotonesRegistro\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/* Componente que contiene el formulario base de los datos del servicio\r\nsocial a solicitar */\r\nclass SolicitudServicio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipos_servicio_social: [],\r\n      facultades: [],\r\n      carreras: [],\r\n      facultadSeleccionada: \"\",\r\n      carreraSeleccionada: \"\",\r\n      tipoServicioSocialSeleccionado: \"\",\r\n    };\r\n    this.handleFacultad = this.handleFacultad.bind(this);\r\n  }\r\n  handleFacultad(event) {\r\n    this.setState({ facultadSeleccionada: event.target.value });\r\n    this.setState({ carreraSeleccionada: event.target.value });\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/carreraPorFacultad/\", {\r\n        params: { facultad: event.target.value },\r\n      })\r\n      .then((response) => {\r\n        this.setState({ carreras: response.data });\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Consulta lista de facultades\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/facultades/\")\r\n      .then((response) => {\r\n        this.setState({ facultades: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/login/tiposServicioSocial/\")\r\n      .then((response) => {\r\n        this.setState({ tipos_servicio_social: response.data });\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n   //Funcion para resetear la facultad seleccionada\r\n   reiniciarFacultad(){\r\n    document.getElementById(\"facultad\").selectedIndex = \"0\";\r\n  }\r\n  //Funcion para obtener la fecha actual\r\n  fechaActual() {\r\n    var fecha = new Date();\r\n    var mes = fecha.getMonth() + 1;\r\n    var dia = fecha.getDate();\r\n    var anio = fecha.getFullYear();\r\n    if (dia < 10) dia = \"0\" + dia;\r\n    if (mes < 10) mes = \"0\" + mes;\r\n    return anio + \"-\" + mes + \"-\" + dia;\r\n  }\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          nombre_entidad: \"\",\r\n          direccion_entidad: \"\",\r\n          correo_entidad: \"\",\r\n          telefono_entidad: \"\",\r\n          clasificacion_entidad: \"\",\r\n          fecha_fin_solicitud: \"\",\r\n          estado_solicitud: \"En Proceso\",\r\n          entidad_externa_id: \"\",\r\n          carrera_id: \"\",\r\n          tipo_servicio_social_id: \"\",\r\n        }}\r\n        onSubmit={async (values, {resetForm}) => {\r\n          await new Promise((resolve) => setTimeout(resolve, 500));\r\n          axios\r\n            .post(\"http://127.0.0.1:8000/login/entidadExterna/\", {\r\n              nombre_entidad: values.nombre_entidad,\r\n              direccion_entidad: values.direccion_entidad,\r\n              correo_entidad: values.correo_entidad,\r\n              telefono_entidad: values.telefono_entidad,\r\n              clasificacion_entidad: values.clasificacion_entidad,\r\n            })\r\n            .then((response) => {\r\n              axios\r\n                .get(\"http://127.0.0.1:8000/login/ultimaEntidadExterna/\")\r\n                .then((response) => {\r\n                  axios\r\n                    .post(\"http://127.0.0.1:8000/login/solicitudes/\", {\r\n                      fecha_fin_solicitud: values.fecha_fin_solicitud,\r\n                      estado_solicitud: values.estado_solicitud,\r\n                      entidad_externa: response.data\r\n                        .map((elemento) => elemento.codigo_entidad)\r\n                        .toString(),\r\n                      carrera: values.carrera_id,\r\n                      tipo_servicio_social: values.tipo_servicio_social_id,\r\n                    })\r\n                    .then((response) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"success\",\r\n                        title:\r\n                          \"Tu solicitud de servicio social ha sido registrada con éxito.\",\r\n                        showConfirmButton: false,\r\n                        timer: 2500,\r\n                      });\r\n                      //Limpia el formulario ingresado en pantalla\r\n                      this.reiniciarFacultad();\r\n                      resetForm({});\r\n                    })\r\n                    .catch((error) => {\r\n                      Swal.fire({\r\n                        position: \"center\",\r\n                        icon: \"error\",\r\n                        title: \"Ocurrio un error en su registro de solicitud\",\r\n                      });\r\n                    });\r\n                })\r\n                .catch((error) => {});\r\n            })\r\n            .catch((error) => {});\r\n        }}\r\n      >\r\n        {({ values, handleSubmit, handleChange }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Nombre entidad</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Nombre de la entidad a la que representa</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ministerio de hacienda\"\r\n                    id=\"nombre_entidad\"\r\n                    required={true}\r\n                    maxLength=\"150\"\r\n                    value={values.nombre_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Dirección</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Cada subdivisión de la dirección, separado por una \",\"\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Departamento, Municipio, Residencia\"\r\n                    id=\"direccion_entidad\"\r\n                    required={true}\r\n                    maxLength=\"250\"\r\n                    value={values.direccion_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label>Correo</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>Debe contener una \"@\" y al menos un \".\"</Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"example@name.com\"\r\n                    id=\"correo_entidad\"\r\n                    required={true}\r\n                    maxLength=\"254\"\r\n                    pattern=\"([A-z]+)@([A-z]+)[.]([A-z.]+)\"\r\n                    value={values.correo_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Teléfono</Form.Label>\r\n                <OverlayTrigger\r\n                  overlay={\r\n                    <Tooltip>\r\n                      Ocho dígitos númericos, iniciados por 2, 6 o 7\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"telefono_entidad\"\r\n                    placeholder=\"########\"\r\n                    maxLength=\"8\"\r\n                    pattern=\"([267]{1})([0-9]{7})\"\r\n                    required={true}\r\n                    value={values.telefono_entidad}\r\n                    onChange={handleChange}\r\n                  />\r\n                </OverlayTrigger>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"text-right pt-3\">\r\n              <Form.Group as={Col} className=\"pr-5\">\r\n                <Form.Label className=\"pt-2\">\r\n                  Clasificación de la entidad\r\n                </Form.Label>\r\n              </Form.Group>\r\n              <Form.Group as={Col}>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"clasificacion_entidad\"\r\n                  value={values.clasificacion_entidad}\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Seleccione...\r\n                  </option>\r\n                  <option key={0} value=\"Privada\">\r\n                    Privada\r\n                  </option>\r\n                  <option key={1} value=\"Pública\">\r\n                    Pública\r\n                  </option>\r\n                  <option key={2} value=\"Autónoma\">\r\n                    Autónoma\r\n                  </option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row className=\"pt-5\">\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Facultad</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"facultad\"\r\n                  required={true}\r\n                  onChange={this.handleFacultad}\r\n                >\r\n                  <option value=\"\" disabled={true} selected>\r\n                    Selecione...\r\n                  </option>\r\n                  {this.state.facultades.map((elemento) => (\r\n                    <option\r\n                      key={elemento.codigo_facultad}\r\n                      value={elemento.codigo_facultad}\r\n                    >\r\n                      {elemento.nombre_facultad}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Carrera</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"carrera_id\"\r\n                  value={values.carrera_id}\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true}>\r\n                    Selecione...\r\n                  </option>\r\n                  {this.state.carreras.map((elemento) => (\r\n                    <option\r\n                      key={elemento.codigo_carrera}\r\n                      value={elemento.codigo_carrera}\r\n                    >\r\n                      {elemento.nombre_carrera}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Tipo de servicio social</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"tipo_servicio_social_id\"\r\n                  required={true}\r\n                  value={values.tipo_servicio_social_id}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled={true} selected={true}>\r\n                    Selecione...\r\n                  </option>\r\n                  {this.state.tipos_servicio_social.map((elemento) => (\r\n                    <option\r\n                      key={elemento.condigo_tipo_servicio_social}\r\n                      value={elemento.condigo_tipo_servicio_social}\r\n                    >\r\n                      {elemento.nombre_tipo_servicio_social}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Col sm=\"1\"></Col>\r\n              <Form.Group as={Col}>\r\n                <Form.Label>Fecha limite para respuesta</Form.Label>\r\n                <Form.Control\r\n                  type=\"Date\"\r\n                  id=\"fecha_fin_solicitud\"\r\n                  required={true}\r\n                  value={values.fecha_fin_solicitud}\r\n                  onChange={handleChange}\r\n                  min={this.fechaActual()}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Col sm=\"1\"></Col>\r\n            </Form.Row>\r\n            <Botones />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudServicio;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport SolicitudServicio from \"./SolicitudServicio\";\r\n\r\n//Clase principal del componente\r\nclass Solicitud extends Component {\r\n  render() {\r\n    //Retorna todo la interfas respectiva para la solicitud de la propuesta\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <Card\r\n              titulo=\"Solicitud de servicio social\"\r\n              cuerpo={<SolicitudServicio />}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Solicitud;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  tableBodyHeight: \"320px\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5,10,20],\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de privilegios\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"http://127.0.0.1:8000/login/permisos/\";\r\n\r\n//Clase principal del componente\r\nclass Roles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      permisos: [], //Estdo que contendra todo lo que digite el usuario\r\n      modalInsertar: false, //Estado que controla el abrir o cerra el modal correspondiente\r\n      modalEliminar: false,\r\n      form: {\r\n        //Estado que contiene los campos del formulario a ingresar\r\n        id: \"\",\r\n        name: \"\",\r\n        content_type_id: \"\",\r\n        codename: \"\",\r\n        tipoModal: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    //delete this.state.form.id;\r\n    await axios\r\n      .post(url, {\r\n        id: this.state.form.id,\r\n        name: this.state.form.name,\r\n        content_type_id: this.state.form.content_type_id,\r\n        codename: this.state.form.codename,\r\n      })\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en el registro del privilegio\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });  \r\n      });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    console.log(this.state.form.id);\r\n    axios.put(url + this.state.form.id, this.state.form)\r\n    .then((response) => {\r\n      this.modalInsertar();\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Se a guardado con exito\",\r\n        showConfirmButton: false,\r\n        timer: 2500,\r\n      });\r\n      this.componentDidMount();\r\n    })\r\n    .catch((error) => {\r\n\r\n    });\r\n    \r\n  };\r\n\r\n  //Metodo en que realiza la peticion para eliminar los datos a la BD mediante la api\r\n  peticionDelete = () => {\r\n    axios.delete(url + this.state.form.id).then((response) => {\r\n      this.setState({ modalEliminar: false });\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Se a eliminado con exito\",\r\n        showConfirmButton: false,\r\n        timer: 2500,\r\n      });\r\n      this.componentDidMount();\r\n    })\r\n    .catch((error) => {\r\n\r\n    });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionPrivilegio = (privilegio) => {\r\n    this.setState({\r\n      tipoModal: \"actualizar\",\r\n      form: {\r\n        id: privilegio[0],\r\n        name: privilegio[1],\r\n        content_type_id: privilegio[2],\r\n        codename: privilegio[3],\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({ permisos: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { form } = this.state; //Constante que contiene el estado del formulario\r\n    //Constante que contiene los datos estaticos de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"id\",\r\n        label: \"Código\",\r\n      },\r\n      {\r\n        name: \"name\",\r\n        label: \"Nombre\",\r\n      },\r\n      {\r\n        name: \"content_type\",\r\n        label: \"Código de tipo\",\r\n      },\r\n      {\r\n        name: \"codename\",\r\n        label: \"Privilegio\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n              <>\r\n              {/* Botones para editar y eliminar */}\r\n                <Tooltip title=\"Editar\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionPrivilegio(tableMeta.rowData);\r\n                      this.modalInsertar();\r\n                    }}\r\n                  >\r\n                    <Edit></Edit>\r\n                  </Button>\r\n                </Tooltip>\r\n                <span className=\"pl-2\">\r\n                  <Tooltip title=\"Eliminar\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline-danger\"\r\n                      onClick={() => {\r\n                        this.seleccionPrivilegio(tableMeta.rowData);\r\n                        this.setState({ modalEliminar: true });\r\n                      }}\r\n                    >\r\n                      <Delete></Delete>\r\n                    </Button>\r\n                  </Tooltip>\r\n                </span>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <div>\r\n              {/* Boton para crear */}\r\n              <Button\r\n                variant=\"success\"\r\n                onClick={() => {\r\n                  this.setState({ form: null, tipoModal: \"insertar\" });\r\n                  this.modalInsertar();\r\n                }}\r\n              >\r\n                Crear\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <div className=\"pt-3\">\r\n                {/* Invocacion de la tabla, con sus opciones */}\r\n                <MUIDataTable\r\n                  title={\"Privilegios\"}\r\n                  data={this.state.permisos}\r\n                  columns={columns}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Modal para actualizar o crear */}\r\n            <Modal isOpen={this.state.modalInsertar} centered>\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <span>Crear privilegios</span>\r\n                ) : (\r\n                  <span>Actualizar privilegios</span>\r\n                )}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form.Group>\r\n                  <Form.Label>Código</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"id\"\r\n                    name=\"id\"\r\n                    value={form ? form.id : this.state.permisos.length + 1}\r\n                    required\r\n                    readOnly\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nombre</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Puede cambiar grupos\"\r\n                    required\r\n                    value={form ? form.name : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Código de tipo</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"content_type_id\"\r\n                    name=\"content_type_id\"\r\n                    placeholder=\"######\"\r\n                    required\r\n                    value={form ? form.content_type_id : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Privilegio</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Cambio de grupo\"\r\n                    id=\"codename\"\r\n                    name=\"codename\"\r\n                    required\r\n                    value={form ? form.codename : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <ModalFooter>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPut()}\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* Modal para eliminar */}\r\n            <Modal isOpen={this.state.modalEliminar} centered>\r\n            <ModalHeader style={{ display: \"block\" }}>\r\n                  <span>Eliminar privilegio</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                ¿Esta seguro de eliminar el privilegio seleccionado?\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"danger\" onClick={() => this.peticionDelete()}>\r\n                  Si\r\n                </Button>\r\n                <Button\r\n                  variant=\"secundary\"\r\n                  onClick={() => this.setState({ modalEliminar: false })}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Roles;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n//Constante con las columnas de la tabla\r\nconst columns = [\r\n  {\r\n    name: \"codigo_solicitud\",\r\n    label: \"Codigo\",\r\n    key: \"codigo_solicitud\",\r\n  },\r\n  {\r\n    name: \"entidad_externa\",\r\n    label: \"Entidad que solicita\",\r\n    key: \"entidad_externa\",\r\n  },\r\n  {\r\n    name: \"tipo_entidad\",\r\n    label: \"Tipo de entidad\",\r\n    key: \"tipo_entidad\",\r\n  },\r\n  {\r\n    name: \"carrera\",\r\n    label: \"Carrera\",\r\n    key: \"carrera\",\r\n  },\r\n  {\r\n    name: \"tipo_servicio_social\",\r\n    label: \"Tipo de Servicio Social\",\r\n    key: \"tipo_servicio_social\",\r\n  },\r\n  {\r\n    name: \"fecha_inicio_solicitud\",\r\n    label: \"Fecha de Solicitud\",\r\n    key: \"fecha_inicio_solicitud\",\r\n  },\r\n  {\r\n    name: \"fecha_fin_solicitud\",\r\n    label: \"Fecha de Finalización\",\r\n    key: \"fecha_fin_solicitud\",\r\n  },\r\n  {\r\n    name: \"estado_solicitud\",\r\n    label: \"Estado\",\r\n    key: \"estado_solicitud\",\r\n  },\r\n  {\r\n    name: \"acciones\",\r\n    label: \"Acciónes\",\r\n    options: {\r\n      customBodyRender: (value, tableMeta, updateValue) => {\r\n        return (\r\n          /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n            <Tooltip title=\"Ver proyecto\">\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline-info\"\r\n                /* onClick={() => {\r\n                  this.seleccionPrivilegio(tableMeta.rowData);\r\n                  this.modalInsertar();\r\n                }} */\r\n              >\r\n                <Visibility/>\r\n              </Button>\r\n            </Tooltip>\r\n        );\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5,10,20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de solicitudes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"http://127.0.0.1:8000/login/solicitudes/\";\r\n//Clase principal del componente\r\nclass Solicitudes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const arreglo_inicial =  response.data //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = [] //Arreglo donde guardaremos los objetos reescritos\r\n        for(var i =0; i<arreglo_inicial.length; i++){  //Recorremos el arreglo inicial\r\n          solicitud[i] = //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {'codigo_solicitud': arreglo_inicial[i].codigo_solicitud ,\r\n            'entidad_externa':arreglo_inicial[i].entidad_externa_detalle.nombre_entidad,\r\n            'tipo_entidad':arreglo_inicial[i].entidad_externa_detalle.clasificacion_entidad,\r\n            'carrera': arreglo_inicial[i].carrera_detalle.nombre_carrera,\r\n            'tipo_servicio_social':arreglo_inicial[i].tipo_servicio_social_detalle.nombre_tipo_servicio_social,\r\n            'fecha_inicio_solicitud':arreglo_inicial[i].fecha_inicio_solicitud,\r\n            'fecha_fin_solicitud':arreglo_inicial[i].fecha_fin_solicitud,\r\n            'estado_solicitud':arreglo_inicial[i].estado_solicitud}\r\n        }\r\n        this.setState({ solicitudes: solicitud }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Solicitudes de servicios\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Solicitudes;\r\n","import React, { Component } from 'react';\r\nimport {Button, Form, Card}  from  'react-bootstrap';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        credenciales : {username: '', password: '', token: ''}\r\n    }\r\n    login = event =>{\r\n        console.log(this.state.credenciales);\r\n        fetch('http://127.0.0.1:8000/auth/',{ //solicitud a django regresa el token\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state.credenciales),\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then(data => data.json())\r\n        .then(\r\n            data => {\r\n                console.log(data);\r\n                this.setState({token:data})\r\n            }\r\n        ).catch(error => console.error(error))\r\n    }\r\n    inputChanged = event =>{ //asociamos el valor actual del form al stado del componente\r\n        const credenc = this.state.credenciales;\r\n        credenc[event.target.name] = event.target.value;\r\n        this.setState({credenciales: credenc});\r\n    }\r\n    render(){\r\n        return (\r\n        <Card border=\"info\" style={{width:'18rem'}} >\r\n            <Card.Header className=\"bg-light\">Iniciar Sesión:</Card.Header>\r\n                <Card.Body>\r\n                    <div id=\"formContent\">\r\n                        <Form>\r\n                            <Form.Label>\r\n                                Usuario:\r\n                            </Form.Label>\r\n                            <Form.Control \r\n                                name=\"username\" //mismo name que en el modelo!\r\n                                type=\"text\"  \r\n                                placeholder=\"Ingresar usuario\"\r\n                                value={this.state.credenciales.username}\r\n                                onChange={this.inputChanged}\r\n                            />\r\n                            <Form.Label>\r\n                                Contraseña:\r\n                            </Form.Label>\r\n                            <Form.Control \r\n                                name=\"password\" \r\n                                type=\"password\" \r\n                                placeholder=\"Contraseña\" \r\n                                value={this.state.credenciales.password}\r\n                                onChange={this.inputChanged}\r\n                            />\r\n                            <br></br>\r\n                            <Button \r\n                            variant=\"primary\" \r\n                            type=\"button\" \r\n                            onClick={this.login}>\r\n                            Iniciar Sesión\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                </Card.Body>\r\n                <p>{this.state.credenciales.token}</p>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n//Constante con las columnas de la tabla\r\nconst columns = [\r\n  {\r\n    name: \"codigo_propuesta\",\r\n    label: \"Código\",\r\n    key: \"codigo_propuesta\",\r\n  },\r\n  {\r\n    name: \"entidad_externa\",\r\n    label: \"Entidad que solicita\",\r\n    key: \"entidad_externa\",\r\n  },\r\n  {\r\n    name: \"tipo_entidad\",\r\n    label: \"Tipo de entidad\",\r\n    key: \"tipo_entidad\",\r\n  },\r\n  {\r\n    name: \"carrera\",\r\n    label: \"Carrera\",\r\n    key: \"carrera\",\r\n  },\r\n  {\r\n    name: \"tipo_servicio_social\",\r\n    label: \"Tipo de Servicio Social\",\r\n    key: \"tipo_servicio_social\",\r\n  },\r\n  {\r\n    name: \"fecha_inicio_propuesta\",\r\n    label: \"Fecha de Solicitud\",\r\n    key: \"fecha_inicio_propuesta\",\r\n  },\r\n  {\r\n    name: \"fecha_fin_propuesta\",\r\n    label: \"Fecha de Finalización\",\r\n    key: \"fecha_fin_propuesta\",\r\n  },\r\n  {\r\n    name: \"descripcion_propuesta\",\r\n    label: \"Descripción propuesta\",\r\n    key: \"descripcion_propuesta\",\r\n  },\r\n  {\r\n    name: \"estado_propuesta\",\r\n    label: \"Estado\",\r\n    key: \"estado_propuesta\",\r\n  },\r\n  {\r\n    name: \"acciones\",\r\n    label: \"Acciónes\",\r\n    options: {\r\n      customBodyRender: (value, tableMeta, updateValue) => {\r\n        return (\r\n          /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n            <Tooltip title=\"Ver proyecto\">\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline-info\"\r\n                /* onClick={() => {\r\n                  this.seleccionPrivilegio(tableMeta.rowData);\r\n                  this.modalInsertar();\r\n                }} */\r\n              >\r\n                <Visibility/>\r\n              </Button>\r\n            </Tooltip>\r\n        );\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5,10,20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de propuestas\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"http://127.0.0.1:8000/login/propuestas/\";\r\n//Clase principal del componente\r\nclass Propuestas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const arreglo_inicial =  response.data //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = [] //Arreglo donde guardaremos los objetos reescritos\r\n        for(var i =0; i<arreglo_inicial.length; i++){  //Recorremos el arreglo inicial\r\n          solicitud[i] = //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {'codigo_propuesta': arreglo_inicial[i].codigo_propuesta ,\r\n            'entidad_externa':arreglo_inicial[i].entidad_externa_detalle.nombre_entidad,\r\n            'tipo_entidad':arreglo_inicial[i].entidad_externa_detalle.clasificacion_entidad,\r\n            'carrera': arreglo_inicial[i].carrera_detalle.nombre_carrera,\r\n            'tipo_servicio_social':arreglo_inicial[i].tipo_servicio_social_detalle.nombre_tipo_servicio_social,\r\n            'fecha_inicio_propuesta':arreglo_inicial[i].fecha_inicio_propuesta,\r\n            'fecha_fin_propuesta':arreglo_inicial[i].fecha_fin_propuesta,\r\n            'descripcion_propuesta':arreglo_inicial[i].descripcion_propuesta,\r\n            'estado_propuesta':arreglo_inicial[i].estado_propuesta}\r\n        }\r\n        this.setState({ solicitudes: solicitud }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Solicitudes de propuestas\"}\r\n              data={this.state.solicitudes}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Propuestas;\r\n","import React, { Component} from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5,10,20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de usuarios\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Odernar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constannte que contiene la url de conexion con la api de rest\r\nconst url = \"http://127.0.0.1:8000/login/usuarios/\";\r\n\r\n//Clase principal del componente\r\nclass Usuarios extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuarios: [], //Estado que contendra todo lo que digite el usuario\r\n      modalInsertar: false, //Estado que controla el abrir o cerra el modal correspondiente\r\n      modalEliminar: false,\r\n      form: {\r\n        //Estado que contiene los campos del formulario a ingresar\r\n        id: \"\",\r\n        last_login: \"\",\r\n        is_superuser: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        is_staff: \"\",\r\n        is_active: \"\",\r\n        date_joined: \"\",\r\n        tipoModal: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  //Metodo en que realiza la peticion para ingreso de datos a la BD mediante la api\r\n  peticionPost = async () => {\r\n    delete this.state.form.id;\r\n    await axios\r\n      .post(url, {\r\n        username: this.state.form.username,\r\n        password: this.state.form.password,\r\n        is_superuser: this.state.form.is_superuser,\r\n        first_name: this.form.first_name,\r\n        last_name: this.state.form.last_name,\r\n        email: this.state.form.email,\r\n        is_staff: this.state.form.is_staff,\r\n        is_active: this.state.form.is_active,\r\n      })\r\n      .then((response) => {\r\n        this.modalInsertar();\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Se a guardado con exito\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        this.componentDidMount();\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Ocurrio un error en el registro del usuario\",\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n      });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para actualizar los datos a la BD mediante la api\r\n  peticionPut = () => {\r\n    axios.put(url + this.state.form.id, this.state.form).then((response) => {\r\n      this.modalInsertar();\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Se a guardado con exito\",\r\n        showConfirmButton: false,\r\n        timer: 2500,\r\n      });\r\n      this.componentDidMount();\r\n    })\r\n    .catch((error) =>{\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: \"Ocurrio un error en actualizar el usuario\",\r\n        showConfirmButton: false,\r\n        timer: 2500,\r\n      });\r\n    });\r\n  };\r\n\r\n  //Metodo en que realiza la peticion para eliminar los datos a la BD mediante la api\r\n  peticionDelete = () => {\r\n    axios.delete(url + this.state.form.id).then((response) => {\r\n      this.setState({ modalEliminar: false });\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Se a eliminado con exito\",\r\n        showConfirmButton: false,\r\n        timer: 2500,\r\n      });\r\n      this.componentDidMount();\r\n    })\r\n    .catch((error) =>{\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        title: \"Ocurrio un error en el eliminar el usuario\",\r\n        showConfirmButton: false,\r\n        timer: 2500,\r\n      });\r\n    });\r\n  };\r\n\r\n  //Metodo que funciona para saber que elemento a selecciconado de la tabla y mandarlo al modal\r\n  seleccionUsuario = (usuario) => {\r\n    this.setState({\r\n      tipoModal: \"actualizar\",\r\n      form: {\r\n        id: usuario[0],\r\n        username: usuario[1],\r\n        first_name: usuario[2],\r\n        last_name: usuario[3],\r\n        is_superuser: usuario[5],\r\n        email: usuario[6],\r\n        is_staff: usuario[7],\r\n        is_active: usuario[8],\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que sirve para manejar el estado del modal\r\n  modalInsertar = () => {\r\n    this.setState({ modalInsertar: !this.state.modalInsertar });\r\n  };\r\n\r\n  //Metodo que va guardado el estado de lo que digita el usuario en el formulario\r\n  handleChange = async (e) => {\r\n    e.persist();\r\n    await this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  //Metodo que hace la peticion de consulta a la BD mediante api\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({ usuarios: response.data });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const { form } = this.state; //Constante que contiene el estado del formulario\r\n    //Constante que contiene los datos estaticos de la tabla\r\n    const columns = [\r\n      {\r\n        name: \"id\",\r\n        label: \"Código\",\r\n        option: {\r\n          display: 'excluded',\r\n        }\r\n      },\r\n      {\r\n        name: \"username\",\r\n        label: \"Usuario\",\r\n      },\r\n      {\r\n        name: \"first_name\",\r\n        label: \"Nombres\",\r\n      },\r\n      {\r\n        name: \"last_name\",\r\n        label: \"Apellidos\",\r\n      },\r\n      {\r\n        name: \"last_login\",\r\n        label: \"Ultimo logeo\",\r\n      },\r\n      {\r\n        name: \"is_superuser\",\r\n        label: \"Super usuario\",\r\n      },\r\n      {\r\n        name: \"email\",\r\n        label: \"Email\",\r\n      },\r\n      {\r\n        name: \"is_staff\",\r\n        label: \"Staff\",\r\n      },\r\n      {\r\n        name: \"is_active\",\r\n        label: \"Activo\",\r\n      },\r\n      {\r\n        name: \"date_joined\",\r\n        label: \"Fecha creación\",\r\n      },\r\n      {\r\n        name: \"acciones\",\r\n        label: \"Acciónes\",\r\n        options: {\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            return (\r\n              <>\r\n              {/* Botones para las opciones de editar y eliminar */}\r\n                <Tooltip title=\"Editar\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline-primary\"\r\n                    onClick={() => {\r\n                      this.seleccionUsuario(tableMeta.rowData);\r\n                      this.modalInsertar();\r\n                    }}\r\n                  >\r\n                    <Edit></Edit>\r\n                  </Button>\r\n                </Tooltip>\r\n                <span>\r\n                  <Tooltip title=\"Eliminar\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline-danger\"\r\n                      onClick={() => {\r\n                        this.seleccionUsuario(tableMeta.rowData);\r\n                        this.setState({ modalEliminar: true });\r\n                      }}\r\n                    >\r\n                      <Delete></Delete>\r\n                    </Button>\r\n                  </Tooltip>\r\n                </span>\r\n              </>\r\n            );\r\n          },\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-4\">\r\n            <div>\r\n              {/* Boton crear */}\r\n              {<Button\r\n                variant=\"success\"\r\n                onClick={() => {\r\n                  this.setState({ form: null, tipoModal: \"insertar\" });\r\n                  this.modalInsertar();\r\n                }}\r\n              >\r\n                Crear\r\n            </Button>}\r\n            </div>\r\n            <div>\r\n              <div className=\"pt-3\">\r\n                {/* Invocacion de la tabla, con sus opciones correspondientes */}\r\n              <MUIDataTable\r\n                  title={\"Usuarios\"}\r\n                  data={this.state.usuarios}\r\n                  columns={columns}\r\n                  options={options}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Modales para creacion o actualizacion*/}\r\n            <Modal isOpen={this.state.modalInsertar} centered className=\"pt-5\">\r\n              <ModalHeader style={{ display: \"block\" }}>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                  <span>Crear usuario</span>\r\n                ) : (\r\n                  <span>Actualizar usuario</span>\r\n                )}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <Form.Group>\r\n                  <Form.Label>Usuario</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    autocomplete=\"off\"\r\n                    value={\r\n                      form ? form.username: \"\"\r\n                    }\r\n                    required\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                {this.state.tipoModal === \"insertar\" ? (\r\n                <Form.Group>\r\n                  <Form.Label>Contraseña</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.password: \"\"}\r\n                    required\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                ) : (\r\n                  <Form.Group>\r\n                  <Form.Label>Id</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"id\"\r\n                    name=\"id\"\r\n                    readOnly\r\n                    value={form ? form.id: this.state.usuarios.length + 1}\r\n                    required\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                )}\r\n                <Form.Group>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"example@name.com\"\r\n                    pattern=\"([A-z]+)@([A-z]+)[.]([A-z.]+)\"\r\n                    value={form ? form.email: \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nombres</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id=\"first_name\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"Juan Antonio\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.first_name: \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Apellidos</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Perez Vides\"\r\n                    id=\"last_name\"\r\n                    name=\"last_name\"\r\n                    autocomplete=\"off\"\r\n                    value={form ? form.last_name: \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Super usuario</Form.Label>\r\n                  <Form.Control\r\n                    type=\"checkbox\"\r\n                    id=\"is_superuser\"\r\n                    name=\"is_superuser\"\r\n                    value={form ? form.is_superuser: \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Staff</Form.Label>\r\n                  <Form.Control\r\n                    type=\"checkbox\"\r\n                    id=\"is_staff\"\r\n                    name=\"is_staff\"\r\n                    value={form ? form.is_staff: \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Activo</Form.Label>\r\n                  <Form.Control\r\n                    type=\"checkbox\"\r\n                    id=\"is_active\"\r\n                    name=\"is_active\"\r\n                    value={form ? form.is_active : \"\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <ModalFooter>\r\n                  {this.state.tipoModal === \"insertar\" ? (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPost()}\r\n                    >\r\n                      Guardar\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => this.peticionPut()}\r\n                    >\r\n                      Actualizar\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    onClick={() => this.modalInsertar()}\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </ModalFooter>\r\n              </ModalBody>\r\n            </Modal>\r\n\r\n            {/* Modal para eliminar */}\r\n            <Modal isOpen={this.state.modalEliminar} centered>\r\n            <ModalHeader style={{ display: \"block\" }}>\r\n                  <span>Eliminar usuario</span>\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                ¿Esta seguro de eliminar el usuario seleccionado?\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button variant=\"danger\" onClick={() => this.peticionDelete()}>\r\n                  Si\r\n                </Button>\r\n                <Button\r\n                  variant=\"secundary\"\r\n                  onClick={() => this.setState({ modalEliminar: false })}\r\n                >\r\n                  No\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Usuarios;\r\n","export default __webpack_public_path__ + \"static/media/logoUes.308b8d5e.png\";","import React, { Component } from 'react';\r\n//Aqui importamos nuestra imagen\r\nimport logoUes from './logoUes.png';\r\n\r\nclass LogoUes extends Component {\r\n  render() {\r\n    return (    \r\n        <div className=\"pr-3\">\r\n            <img src={logoUes} width=\"200\" height=\"200\" alt=\"Logo UES\"/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoUes;","export default __webpack_public_path__ + \"static/media/logoProyeccionSocial.f4534b1d.jpg\";","import React, { Component } from 'react';\r\n//Aqui importamos nuestra imagen\r\nimport logoProyeccion from './logoProyeccionSocial.jpg';\r\n\r\nclass LogoProyeccion extends Component {\r\n  render() {\r\n    return (    \r\n        <div className=\"pr-3\">\r\n            <img src={logoProyeccion} width=\"200\" height=\"200\" alt=\"Logo Proyeccion\"/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoProyeccion;","import React, { Component } from \"react\";\r\nimport LogoUes from \"./LogoUes\";\r\nimport LogoProyeccion from \"./LogoProyeccion\";\r\nimport { Row, Col, Card, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\n\r\nclass InicioInformacion extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"pt-4\">\r\n          <Col align=\"center\">\r\n            <div className=\"container\">\r\n              <div className=\"wrap-center\">\r\n                <div className=\"navbar-brand\">\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={\r\n                      <Tooltip>\r\n                        Clic para ir a la página oficial de la Universidad\r\n                      </Tooltip>\r\n                    }\r\n                  >\r\n                    <a href=\"https://www.ues.edu.sv/\" target=\"_blank\" rel=\"noreferrer\">\r\n                      <LogoUes></LogoUes>\r\n                    </a>\r\n                  </OverlayTrigger>\r\n                </div>\r\n                <div id=\"header_front\">\r\n                  <h1>Universidad de El Salvador</h1>\r\n                  <h4>\"Hacia la libertad por la cultura\"</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col align=\"center\">\r\n            <div className=\"container\">\r\n              <div className=\"wrap-center\">\r\n                <div className=\"navbar-brand\">\r\n                  <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={\r\n                      <Tooltip>\r\n                        Clic para ir a la página oficial de la Secretaria\r\n                      </Tooltip>\r\n                    }\r\n                  >\r\n                    <a\r\n                      href=\"http://proyeccionsocial.ues.edu.sv/\"\r\n                      target=\"_blank\" rel=\"noreferrer\"\r\n                    >\r\n                      <LogoProyeccion></LogoProyeccion>\r\n                    </a>\r\n                  </OverlayTrigger>\r\n                </div>\r\n                <div id=\"header_front\">\r\n                  <h1>Secretaria de proyección social</h1>\r\n                  <h4>\"De la mano con la comunidad\"</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pt-5\">\r\n          <Card>\r\n            <Card.Header align=\"center\">\r\n              Sistema informático para el control y aplicación del servicio\r\n              social de los estudiantes de la Universidad de El Salvador\r\n              (SICASS).\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Descripción</Card.Title>\r\n              <Card.Text className=\"align-justify\">\r\n                Sistema informático en la plataforma web, para la\r\n                digitalización, automatización y eficiencia en la realización\r\n                del proceso de registro, solicitud y control del servicio social\r\n                que es realizado por los estudiantes de la Universidad de El\r\n                Salvador, como prerrequisito para su titulación.\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InicioInformacion;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Botones from \"./BotonesRegistro\";\r\n\r\n//Clase principal del componente, para el registro de los estudiantes\r\nclass RegistroUps extends Component {\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Row>\r\n          <Form.Group as={Col} className=\"pl-5 pr-5\">\r\n            <Form.Label>Enlace de la carpeta creada en Drive</Form.Label>\r\n            <OverlayTrigger\r\n              overlay={\r\n                <Tooltip>\r\n                  Pegue el enlace obtenido en los pasos anteriores\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                id=\"enlace\"\r\n                autoComplete=\"off\"\r\n                pattern=\"(https:[/][/]drive[.]google[.]com[/]drive[/]folders[/])(.+)\"\r\n                placeholder=\"https://drive.google.com/drive/folders/...\"\r\n                required={true}\r\n              ></Form.Control>\r\n            </OverlayTrigger>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Botones />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistroUps;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport RegistroUps from \"./RegistroUps\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\n//Constante para ampliacion de imagen\r\n/* let imagenes = [\r\n  \"https://i.ibb.co/CWKq30Z/Google.png\",\r\n  \"https://i.ibb.co/5RWvQwZ/Drive.png\",\r\n  \"https://i.ibb.co/jLRgSNq/Carpeta.png\",\r\n  \"https://i.ibb.co/6BGCd3x/Archivos.png\",\r\n  \"https://i.ibb.co/Z2CgLmh/Opcion.png\" \r\n];*/\r\n\r\n/* const GoogleImage =() => {\r\n  let sourceImageUrls = [\r\n  \"../img/Archivos.png\",\r\n  \"../img/Carpeta.png\",\r\n  \"../img/Drive.png\",\r\n  \"../img/Google.png\",\r\n  \"../img/Opcion.png\"\r\n] \r\n  let thumbImageUrls = sourceImageUrls; //In reality, the thumbnail and the original may not be the same, which are set to be equal, just for the sake of a simple demonstration\r\n  return (\r\n    <RViewer imageUrls={sourceImageUrls}>\r\n      <ul>\r\n        {thumbImageUrls.map((pic, index) => {\r\n          return (\r\n            <li key={index} style={{ marginBottom: \"20PX\" }}>\r\n              <RViewerTrigger index={index}>\r\n                <img\r\n                  src={pic}\r\n                  style={{ width: \"50px\", verticalAlign: \"middle\" }}\r\n                />\r\n              </RViewerTrigger>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </RViewer>\r\n  );\r\n}; */\r\n\r\n/* const GoogleImage = () => {\r\n  let sourceUrl = \"../img/Archivos.png\";\r\n  let options = {\r\n    toolbar: {\r\n      //Since there is only one picture, let's hide \"prev\" and \"next\"\r\n      prev: false,\r\n      next: false,\r\n    },\r\n  };\r\n  return (\r\n    <RViewer options={options} imageUrls={sourceUrl}>\r\n      <RViewerTrigger>\r\n         <Tooltip title=\"Ver proyecto\">\r\n      <Button size=\"sm\" variant=\"outline-info\">\r\n        <Visibility />\r\n      </Button>\r\n    </Tooltip>\r\n        <button>Imagen</button>\r\n      </RViewerTrigger>\r\n    </RViewer>\r\n  );\r\n}; */\r\n\r\n//Clase principal del componente\r\nclass EnvioRegistroUps extends Component {\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <>\r\n            <div className=\"pt-4\">\r\n              <Card\r\n                titulo=\"Indicaciones\"\r\n                cuerpo={\r\n                  <>\r\n                    <label>\r\n                      Debe seguir los siguientes pasos para la solicitud de su\r\n                      registro a la Unidad de Proyección social y así poder\r\n                      realizar su servicio social:\r\n                    </label>\r\n                    <ul>\r\n                      <li>\r\n                        En cualquier navegador ingresar a su cuenta\r\n                        institucional\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/CWKq30Z/Google.png\"\r\n                            alt=\"Google\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        Ingresar a la aplicación de Drive\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/5RWvQwZ/Drive.png\"\r\n                            alt=\"Drive\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        En su unidad, debe crear una carpeta con el nombre\r\n                        \"Proyección social\"\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/jLRgSNq/Carpeta.png\"\r\n                            alt=\"Carpeta\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        Ingresar a la carpeta creada y subir los siguientes\r\n                        documentos en formato .pdf\r\n                        <ul>\r\n                          <li>Record de notas (Impreso del expediente Eel)</li>\r\n                          <li>\r\n                            Comprobante de inscripción (Impreso del expediente\r\n                            Eel)\r\n                          </li>\r\n                          <li>DUI (Escaneado)</li>\r\n                        </ul>\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/6BGCd3x/Archivos.png\"\r\n                            alt=\"Archivos\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        Debe obtener el enlace de la siguiente manera, para\r\n                        pegarlo en el formulario que se presenta a continuación\r\n                        <div align=\"center\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/Z2CgLmh/Opcion.png\"\r\n                            alt=\"Opcion\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                        <div align=\"center\" className=\"pt-2\">\r\n                          <Image\r\n                            src=\"https://i.ibb.co/br8XJJH/Enlace.png\"\r\n                            alt=\"Enlace\"\r\n                            fluid\r\n                          ></Image>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </>\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"pt-4\">\r\n              <Card\r\n                titulo=\"Registro a Unidad de Proyección social\"\r\n                cuerpo={<RegistroUps />}\r\n              />\r\n            </div>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnvioRegistroUps;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n//Constante con las columnas de la tabla\r\nconst columns = [\r\n  {\r\n    name: \"codigo_solicitud\",\r\n    label: \"Codigo\",\r\n    key: \"codigo_solicitud\",\r\n  },\r\n  {\r\n    name: \"estado_solicitud\",\r\n    label: \"Estado\",\r\n    key: \"estado_solicitud\",\r\n  },\r\n  {\r\n    name: \"observaciones\",\r\n    label: \"Observaciones\",\r\n    key: \"observaciones\",\r\n  },\r\n];\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de solicitudes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\nconst data = [\r\n  {\r\n    codigo_solicitud: \"01\",\r\n    estado_solicitud: \"No aprobado\",\r\n    observaciones:\r\n      \"El documento del DUI, no es muy legible. Debe corregir la observacion y hacer otra solicitud\",\r\n  },\r\n  {\r\n    codigo_solicitud: \"02\",\r\n    estado_solicitud: \"Aprobada\",\r\n    observaciones: \"Ninguna\",\r\n  },\r\n];\r\n//Constante con la url de la api (Backend)\r\nconst url = \"http://127.0.0.1:8000/login/solicitudes/\";\r\n//Clase principal del componente\r\nclass SolicitudInscripcion extends Component {\r\n  /* constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = []; //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          //Recorremos el arreglo inicial\r\n          solicitud[i] =\r\n            //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {\r\n              codigo_solicitud: arreglo_inicial[i].codigo_solicitud,\r\n              entidad_externa:\r\n                arreglo_inicial[i].entidad_externa_detalle.nombre_entidad,\r\n              tipo_entidad:\r\n                arreglo_inicial[i].entidad_externa_detalle\r\n                  .clasificacion_entidad,\r\n              carrera: arreglo_inicial[i].carrera_detalle.nombre_carrera,\r\n              tipo_servicio_social:\r\n                arreglo_inicial[i].tipo_servicio_social_detalle\r\n                  .nombre_tipo_servicio_social,\r\n              fecha_inicio_solicitud: arreglo_inicial[i].fecha_inicio_solicitud,\r\n              fecha_fin_solicitud: arreglo_inicial[i].fecha_fin_solicitud,\r\n              estado_solicitud: arreglo_inicial[i].estado_solicitud,\r\n            };\r\n        }\r\n        this.setState({ solicitudes: solicitud }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  } */\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Estado solicitud de inscripción\"}\r\n              data={data}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudInscripcion;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//Constante con las columnas de la tabla\r\nconst columns = [\r\n  {\r\n    name: \"codigo_servicio_social\",\r\n    label: \"Código\",\r\n    key: \"codigo_servicio_social\",\r\n  },\r\n  {\r\n    name: \"nombre_servicio\",\r\n    label: \"Nombre servicio\",\r\n    key: \"nombre_servicio\",\r\n  },\r\n  {\r\n    name: \"descripcion\",\r\n    label: \"Descripción\",\r\n    key: \"descripcion\",\r\n  },\r\n  {\r\n    name: \"cantidad_estudiantes\",\r\n    label: \"Cantidad de cupos\",\r\n    key: \"cantidad_estudiantes\",\r\n  },\r\n  {\r\n    name: \"cantidad_horas\",\r\n    label: \"Horas totales\",\r\n    key: \"cantidad_horas\",\r\n  },\r\n  {\r\n    name: \"entidad\",\r\n    label: \"Nombre entidad\",\r\n    key: \"entidad\",\r\n  },\r\n  {\r\n    name: \"acciones\",\r\n    label: \"Acciónes\",\r\n    options: {\r\n      customBodyRender: (value, tableMeta, updateValue) => {\r\n        return (\r\n          /* Boton para redirigir hacia el proyecto que le corresponde a la propuesta */\r\n          <Tooltip title=\"Solicitar servicio social\">\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline-primary\"\r\n              /* onClick={() => {\r\n                  this.seleccionPrivilegio(tableMeta.rowData);\r\n                  this.modalInsertar();\r\n                }} */\r\n            >\r\n              <PostAddIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        );\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de propuestas\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\n//Constante con la url de la api (Backend)\r\nconst url = \"http://127.0.0.1:8000/login/servicioSocial/\";\r\n//Clase principal del componente\r\nclass Propuestas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      servicio: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const servicios = new Array(); //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          /*if(arreglo_inicial[i].Propuestas != null){\r\n                arreglo_inicial[i].entidad = arreglo_inicial[i].Propuestas.entidad_externa_detalle.nombre_entidad;\r\n            }else if (arreglo_inicial[i].Solicitud != null){\r\n                arreglo_inicial[i].entidad = arreglo_inicial[i].Solicitud.entidad_externa_detalle.nombre_entidad;\r\n            }*/\r\n          //Recorremos el arreglo inicial\r\n          servicios[i] =\r\n            //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {\r\n              codigo_servicio_social: arreglo_inicial[i].codigo_servicio_social,\r\n              cantidad_estudiantes: arreglo_inicial[i].cantidad_estudiantes,\r\n              cantidad_horas: arreglo_inicial[i].cantidad_horas,\r\n              entidad: arreglo_inicial[i].entidad,\r\n              descripcion: arreglo_inicial[i].descripcion,\r\n              propuesta: arreglo_inicial[i].propuesta_detalle,\r\n              solicitud: arreglo_inicial[i].solicitud_detalle,\r\n              nombre_servicio:\r\n                arreglo_inicial[i].tipo_servicio_social_detalle\r\n                  .nombre_tipo_servicio_social,\r\n            };\r\n        }\r\n        this.setState({ servicio: servicios }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Servicios sociales disponibles\"}\r\n              data={this.state.servicio}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Propuestas;\r\n","import React, { Component } from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n//Constante con las columnas de la tabla\r\nconst columns = [\r\n  {\r\n    name: \"codigo_solicitud\",\r\n    label: \"Codigo\",\r\n    key: \"codigo_solicitud\",\r\n  },\r\n  {\r\n    name: \"estado_solicitud\",\r\n    label: \"Estado\",\r\n    key: \"estado_solicitud\",\r\n  },\r\n  {\r\n    name: \"observaciones\",\r\n    label: \"Observaciones\",\r\n    key: \"observaciones\",\r\n  },\r\n];\r\n\r\n//Constante con las opciones de la tabla\r\nconst options = {\r\n  download: \"false\",\r\n  print: \"false\",\r\n  responsive: \"simple\",\r\n  selectableRows: false,\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 20],\r\n  tableBodyHeight: \"320px\",\r\n  textLabels: {\r\n    body: {\r\n      noMatch: \"No hay registros de solicitudes\",\r\n      toolTip: \"Sort\",\r\n      columnHeaderTooltip: (column) => `Ordenar por ${column.label}`,\r\n    },\r\n    pagination: {\r\n      next: \"Página siguiente\",\r\n      previous: \"Página previa\",\r\n      rowsPerPage: \"Filas por página:\",\r\n      displayRows: \"de\",\r\n    },\r\n    toolbar: {\r\n      search: \"Búsqueda\",\r\n      downloadCsv: \"Download CSV\",\r\n      print: \"Print\",\r\n      viewColumns: \"Ver columnas\",\r\n      filterTable: \"Filtros de tabla\",\r\n    },\r\n    filter: {\r\n      all: \"TODOS\",\r\n      title: \"FILTROS\",\r\n      reset: \"REINICIAR\",\r\n    },\r\n    viewColumns: {\r\n      title: \"Mostrar columnas\",\r\n      titleAria: \"Mostrar/Ocultar columnas de tabla\",\r\n    },\r\n    selectedRows: {\r\n      text: \"fila(s) seleccionada\",\r\n      delete: \"Eliminar\",\r\n      deleteAria: \"Eliminar filas seleccionadas\",\r\n    },\r\n  },\r\n};\r\n\r\nconst data = [\r\n  {\r\n    codigo_solicitud: \"01\",\r\n    estado_solicitud: \"Reprobado\",\r\n    observaciones:\r\n      \"No cumple con los requisitos minimmos para realizar el servicio social\",\r\n  },\r\n  {\r\n    codigo_solicitud: \"02\",\r\n    estado_solicitud: \"Aprobada\",\r\n    observaciones: \"Ninguna\",\r\n  },\r\n];\r\n//Constante con la url de la api (Backend)\r\nconst url = \"http://127.0.0.1:8000/login/solicitudes/\";\r\n//Clase principal del componente\r\nclass SolicitudProyecto extends Component {\r\n  /* constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      solicitudes: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        const arreglo_inicial = response.data; //Guardamos el arreglo inicial para su reescritura\r\n        const solicitud = []; //Arreglo donde guardaremos los objetos reescritos\r\n        for (var i = 0; i < arreglo_inicial.length; i++) {\r\n          //Recorremos el arreglo inicial\r\n          solicitud[i] =\r\n            //Asignamos los campos del arrelgo inicial a los del nuevo objeto\r\n            {\r\n              codigo_solicitud: arreglo_inicial[i].codigo_solicitud,\r\n              entidad_externa:\r\n                arreglo_inicial[i].entidad_externa_detalle.nombre_entidad,\r\n              tipo_entidad:\r\n                arreglo_inicial[i].entidad_externa_detalle\r\n                  .clasificacion_entidad,\r\n              carrera: arreglo_inicial[i].carrera_detalle.nombre_carrera,\r\n              tipo_servicio_social:\r\n                arreglo_inicial[i].tipo_servicio_social_detalle\r\n                  .nombre_tipo_servicio_social,\r\n              fecha_inicio_solicitud: arreglo_inicial[i].fecha_inicio_solicitud,\r\n              fecha_fin_solicitud: arreglo_inicial[i].fecha_fin_solicitud,\r\n              estado_solicitud: arreglo_inicial[i].estado_solicitud,\r\n            };\r\n        }\r\n        this.setState({ solicitudes: solicitud }); //Asignamos el nuevo arreglo reescrito al del estado\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title:\r\n            \"Por el momento no hay conexión con la base de datos, intente en otro momento\",\r\n        });\r\n      });\r\n  } */\r\n  render() {\r\n    return (\r\n      <Dashboard\r\n        contenedor={\r\n          <div className=\"pt-5\">\r\n            {/* Se invoca la tabla, con los datos correspondientes */}\r\n            <MUIDataTable\r\n              title={\"Estado solicitud de servicio social\"}\r\n              data={data}\r\n              columns={columns}\r\n              options={options}\r\n            />\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolicitudProyecto;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { Divider } from '@material-ui/core';\r\nimport { itemsVisitante } from './componentes/itemsVisitante';\r\nimport { itemsEstudiante } from './componentes/itemsEstudiante';\r\nimport { itemsFacultad } from './componentes/itemsFacultad';\r\nimport { itemsEscuela } from './componentes/itemsEscuela';\r\nimport { itemsAdmin } from './componentes/itemsAdmin';\r\nimport LogoSicass from './componentes/LogoSicass';\r\nimport EnvioRegistro from './componentes/EnvioRegistro';\r\nimport EnvioPropuesta from './componentes/EnvioPropuesta';\r\nimport EnvioSolicitud from './componentes/EnvioSolicitud';\r\nimport Roles from './componentes/Roles';\r\nimport Solicitudes from './componentes/Solicitudes';\r\nimport Login from './componentes/login';\r\nimport Propuestas from './componentes/Propuestas';\r\nimport Usuarios from './componentes/Usuarios';\r\nimport InicioInformacion from './componentes/InicioInformacion';\r\nimport EnvioRegistroUps from './componentes/EnvioRegistroUps';\r\nimport SolicitudInscripcion from './componentes/SolicitudInscripcion';\r\nimport ServicioSocial from './componentes/ServicioSocial';\r\nimport SolicitudProyecto from './componentes/SolicitudProyecto';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        SICASS\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 335; //Ancho del menú desplegable\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <LogoSicass />\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            SICASS\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Router>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <List>{itemsVisitante}</List>\r\n          <Divider/>\r\n          <List>{itemsAdmin}</List>\r\n          <Divider />\r\n          <List>{itemsEstudiante}</List>\r\n          <Divider/>\r\n          <List>{itemsFacultad}</List>\r\n          <Divider/>\r\n          <List>{itemsEscuela}</List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container>\r\n            <Switch>\r\n              {    \r\n              <Route exact path=\"/\">\r\n                <Inicio />\r\n              </Route>}\r\n              <Route path=\"/RegistroEstudiante\">\r\n                <RegistroEstudiante />\r\n              </Route>\r\n              <Route path=\"/RegistrarPropuesta\">\r\n                <RegistrarPropuesta />\r\n              </Route>\r\n              <Route path=\"/RegistrarSolicitud\">\r\n                <RegistrarSolicitud />\r\n              </Route>\r\n              <Route path=\"/GestionarPrivilegios\">\r\n                <GestionarRoles />\r\n              </Route>\r\n              <Route path=\"/ConsultarSolicitud\">\r\n                <ConsultarSolicitud />\r\n              </Route>\r\n              <Route path=\"/Login\">\r\n                <IniciarSesion/>\r\n              </Route>\r\n              <Route path=\"/GestionarUsuarios\">\r\n                <GestionUsuarios/>\r\n              </Route>\r\n              <Route path=\"/ConsultarPropuesta\">\r\n                <ConsultarPropuesta/>\r\n              </Route>\r\n              <Route path=\"/RegistroUps\">\r\n                <RegistrarseUps/>\r\n              </Route>\r\n              <Route path=\"/SolicitudInscripcion\">\r\n                <ConsultarInscripcion />\r\n              </Route>\r\n              <Route path=\"/ServicioSocial\">\r\n                <Servicios />\r\n              </Route>\r\n              <Route path=\"/SolicitudProyecto\">\r\n                <Proyecto />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RegistroEstudiante() {\r\n  return <EnvioRegistro></EnvioRegistro>;\r\n}\r\nfunction RegistrarPropuesta() {\r\n  return <EnvioPropuesta></EnvioPropuesta>;\r\n}\r\nfunction RegistrarSolicitud() {\r\n  return <EnvioSolicitud></EnvioSolicitud>;\r\n}\r\nfunction GestionarRoles() {\r\n  return <Roles></Roles>;\r\n}\r\nfunction ConsultarPropuesta() {\r\n  return <Propuestas></Propuestas>;\r\n}\r\nfunction ConsultarSolicitud() {\r\n  return <Solicitudes></Solicitudes>;\r\n}\r\nfunction GestionUsuarios() {\r\n  return <Usuarios></Usuarios>;\r\n}\r\nfunction Inicio() {\r\n  return <InicioInformacion></InicioInformacion>;\r\n}\r\nfunction IniciarSesion(){\r\n  return <Login />;\r\n}\r\nfunction RegistrarseUps(){\r\n  return <EnvioRegistroUps />;\r\n}\r\nfunction ConsultarInscripcion(){\r\n  return <SolicitudInscripcion />;\r\n}\r\nfunction Servicios(){\r\n  return <ServicioSocial />;\r\n}\r\nfunction Proyecto(){\r\n  return <SolicitudProyecto />;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport Dashboard from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Dashboard\r\n    \r\n    />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}